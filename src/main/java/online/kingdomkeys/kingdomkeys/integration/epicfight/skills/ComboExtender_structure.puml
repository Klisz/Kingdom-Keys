@startuml

/' diagram meta data start
config=StructureConfiguration;
{
  "projectClassification": {
    "searchMode": "OpenProject", // OpenProject, AllProjects
    "includedProjects": "",
    "pathEndKeywords": "*.impl",
    "isClientPath": "",
    "isClientName": "",
    "isTestPath": "",
    "isTestName": "",
    "isMappingPath": "",
    "isMappingName": "",
    "isDataAccessPath": "",
    "isDataAccessName": "",
    "isDataStructurePath": "",
    "isDataStructureName": "",
    "isInterfaceStructuresPath": "",
    "isInterfaceStructuresName": "",
    "isEntryPointPath": "",
    "isEntryPointName": "",
    "treatFinalFieldsAsMandatory": false
  },
  "graphRestriction": {
    "classPackageExcludeFilter": "",
    "classPackageIncludeFilter": "",
    "classNameExcludeFilter": "",
    "classNameIncludeFilter": "",
    "methodNameExcludeFilter": "",
    "methodNameIncludeFilter": "",
    "removeByInheritance": "", // inheritance/annotation based filtering is done in a second step
    "removeByAnnotation": "",
    "removeByClassPackage": "", // cleanup the graph after inheritance/annotation based filtering is done
    "removeByClassName": "",
    "cutMappings": false,
    "cutEnum": true,
    "cutTests": true,
    "cutClient": true,
    "cutDataAccess": false,
    "cutInterfaceStructures": false,
    "cutDataStructures": false,
    "cutGetterAndSetter": true,
    "cutConstructors": true
  },
  "graphTraversal": {
    "forwardDepth": 6,
    "backwardDepth": 6,
    "classPackageExcludeFilter": "",
    "classPackageIncludeFilter": "",
    "classNameExcludeFilter": "",
    "classNameIncludeFilter": "",
    "methodNameExcludeFilter": "",
    "methodNameIncludeFilter": "",
    "hideMappings": false,
    "hideDataStructures": false,
    "hidePrivateMethods": true,
    "hideInterfaceCalls": true, // indirection: implementation -> interface (is hidden) -> implementation
    "onlyShowApplicationEntryPoints": false, // root node is included
    "useMethodCallsForStructureDiagram": "ForwardOnly" // ForwardOnly, BothDirections, No
  },
  "details": {
    "aggregation": "GroupByClass", // ByClass, GroupByClass, None
    "showClassGenericTypes": true,
    "showMethods": true,
    "showMethodParameterNames": true,
    "showMethodParameterTypes": true,
    "showMethodReturnType": true,
    "showPackageLevels": 2,
    "showDetailedClassStructure": true
  },
  "rootClass": "online.kingdomkeys.kingdomkeys.integration.epicfight.skills.ComboExtender",
  "extensionCallbackMethod": "" // qualified.class.name#methodName - signature: public static String method(String)
}
diagram meta data end '/



digraph g {
    rankdir="TB"
    splines=polyline
    

'nodes 
subgraph cluster_105634 { 
   	label=jvn
	labeljust=l
	fillcolor="#ececec"
	style=filled
   
   subgraph cluster_2147389425 { 
   	label=epicaddon
	labeljust=l
	fillcolor="#d8d8d8"
	style=filled
   
   BowAtkAnim407581839[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BowAtkAnim</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ ScanTarget(entitypatch: LivingEntityPatch&lt;?&gt;, prevElapsedTime: float, elapsedTime: float, prevState: EntityState, state: EntityState, phase: PhaseEx)</TD></TR>
<TR><TD ALIGN="LEFT" ># getCoordVector(entitypatch: LivingEntityPatch&lt;?&gt;, dynamicAnimation: DynamicAnimation): Vec3f</TD></TR>
<TR><TD ALIGN="LEFT" >+ hurtCollidingEntities(entitypatch: LivingEntityPatch&lt;?&gt;, prevElapsedTime: float, elapsedTime: float, prevState: EntityState, state: EntityState, phase: Phase)</TD></TR>
<TR><TD ALIGN="LEFT" ># onLoaded()</TD></TR>
<TR><TD ALIGN="LEFT" >+ tick(entitypatch: LivingEntityPatch&lt;?&gt;)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DualBladeSkill130650335[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DualBladeSkill</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ canExecute(executer: PlayerPatch&lt;?&gt;): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ createBuilder(resourceLocation: ResourceLocation): Builder&lt;PassiveSkill&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ executeOnServer(executer: ServerPlayerPatch, args: FriendlyByteBuf)</TD></TR>
<TR><TD ALIGN="LEFT" >+ isExecutableState(executer: PlayerPatch&lt;?&gt;): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ onInitiate(container: SkillContainer)</TD></TR>
<TR><TD ALIGN="LEFT" >+ onRemoved(container: SkillContainer)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

FallAtkLoopAnim407581839[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)FallAtkLoopAnim</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   atk: StaticAnimation [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ begin(entitypatch: LivingEntityPatch&lt;?&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" >+ end(entitypatch: LivingEntityPatch&lt;?&gt;, isEnd: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getPoseByTime(entitypatch: LivingEntityPatch&lt;?&gt;, time: float, partialTicks: float): Pose</TD></TR>
<TR><TD ALIGN="LEFT" >+ linkTick(entitypatch: LivingEntityPatch&lt;?&gt;, linkAnimation: LinkAnimation)</TD></TR>
<TR><TD ALIGN="LEFT" ># modifyPose(pose: Pose, entitypatch: LivingEntityPatch&lt;?&gt;, time: float)</TD></TR>
<TR><TD ALIGN="LEFT" >- shouldAtk(entitypatch: LivingEntityPatch&lt;?&gt;): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ tick(entitypatch: LivingEntityPatch&lt;?&gt;)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

FallAtkStartAnim407581839[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)FallAtkStartAnim</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+   Loop: StaticAnimation [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ begin(entitypatch: LivingEntityPatch&lt;?&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" >+ end(entitypatch: LivingEntityPatch&lt;?&gt;, isEnd: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" >+ linkTick(entitypatch: LivingEntityPatch&lt;?&gt;, linkAnimation: LinkAnimation)</TD></TR>
<TR><TD ALIGN="LEFT" ># modifyPose(pose: Pose, entitypatch: LivingEntityPatch&lt;?&gt;, time: float)</TD></TR>
<TR><TD ALIGN="LEFT" >+ tick(entitypatch: LivingEntityPatch&lt;?&gt;)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

FallAttackEvent513460519[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)FallAttackEvent</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   animNamespace: int [1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

GSBasicAtkPatch1569942983[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)GSBasicAtkPatch</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ executeOnServer(executer: ServerPlayerPatch, args: FriendlyByteBuf)</TD></TR>
<TR><TD ALIGN="LEFT" >+ isExecutableState(executer: PlayerPatch&lt;?&gt;): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ onInitiate(container: SkillContainer)</TD></TR>
<TR><TD ALIGN="LEFT" >+ onRemoved(container: SkillContainer)</TD></TR>
<TR><TD ALIGN="LEFT" >+ updateContainer(container: SkillContainer)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

GSBowInternal1569942983[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)GSBowInternal</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ GetBuilder(registryName: String): Builder&lt;GSBowInternal&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ executeOnServer(executer: ServerPlayerPatch, args: FriendlyByteBuf)</TD></TR>
<TR><TD ALIGN="LEFT" >+ onInitiate(container: SkillContainer)</TD></TR>
<TR><TD ALIGN="LEFT" >+ onRemoved(container: SkillContainer)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

GSFallAttack1569942983[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)GSFallAttack</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ executeOnServer(executer: ServerPlayerPatch, args: FriendlyByteBuf)</TD></TR>
<TR><TD ALIGN="LEFT" >+ isExecutableState(executer: PlayerPatch&lt;?&gt;): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ onInitiate(container: SkillContainer)</TD></TR>
<TR><TD ALIGN="LEFT" >+ onRemoved(container: SkillContainer)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

GSSwordInternal1569942983[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)GSSwordInternal</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

GenShinBowCap818137714[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)GenShinBowCap</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ getUseAnimation(playerpatch: LivingEntityPatch&lt;?&gt;): UseAnim</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

MixedActionAnimation407581839[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)MixedActionAnimation</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ getStateEx(t: float): EntityState</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SAOBasicAtkPatch1359210750[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SAOBasicAtkPatch</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ executeOnServer(executer: ServerPlayerPatch, args: FriendlyByteBuf)</TD></TR>
<TR><TD ALIGN="LEFT" >+ isExecutableState(executer: PlayerPatch&lt;?&gt;): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ onInitiate(container: SkillContainer)</TD></TR>
<TR><TD ALIGN="LEFT" >+ onRemoved(container: SkillContainer)</TD></TR>
<TR><TD ALIGN="LEFT" >+ updateContainer(container: SkillContainer)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SAOSingleSwordInternal1359210750[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SAOSingleSwordInternal</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ executeOnServer(executer: ServerPlayerPatch, args: FriendlyByteBuf)</TD></TR>
<TR><TD ALIGN="LEFT" >+ onInitiate(container: SkillContainer)</TD></TR>
<TR><TD ALIGN="LEFT" >+ onRemoved(container: SkillContainer)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SingleSwordCap818137714[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SingleSwordCap</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ canBePlacedOffhand(): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];
} 
} 

subgraph cluster_1387276331 { 
   	label=epicfight
	labeljust=l
	fillcolor="#ececec"
	style=filled
   
   subgraph cluster_1075960817 { 
   	label=world
	labeljust=l
	fillcolor="#d8d8d8"
	style=filled
   
   ActionEvent2128632067[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ActionEvent&lt;T extends PlayerPatch&lt;?&gt;&gt;</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   actionAnimation: StaticAnimation [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ArmorCapability1526551569[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ArmorCapability</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   equipmentSlot: EquipmentSlot [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   stunArmor: double [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   weight: double [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ builder(): Builder</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAttributeModifiers(equipmentSlot: EquipmentSlot, entitypatch: LivingEntityPatch&lt;?&gt;): Multimap&lt;Attribute, AttributeModifier&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ modifyItemTooltip(stack: ItemStack, itemTooltip: List&lt;Component&gt;, entitypatch: LivingEntityPatch&lt;?&gt;)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ArrowPatch529362023[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ArrowPatch</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ clientTick(event: LivingUpdateEvent)</TD></TR>
<TR><TD ALIGN="LEFT" >+ onJoinWorld(projectileEntity: AbstractArrow, event: EntityJoinWorldEvent)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AttackEndEvent2128632067[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AttackEndEvent</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   animation: AttackAnimation [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   attackedEntity: List&lt;LivingEntity&gt; [0..*]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AttackSpeedModifyEvent2128632067[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AttackSpeedModifyEvent</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   attackSpeed: float [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   item: CapabilityItem [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BasicAttackEvent2128632067[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BasicAttackEvent</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Builder1811032241[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Builder</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   autoAttackMotionMap: Map&lt;Style, List&lt;StaticAnimation&gt;&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   canBePlacedOffhand: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   collider: Collider [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   comboCancel: Function&lt;Style, Boolean&gt; [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   hitParticle: HitParticleType [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   hitSound: SoundEvent [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   innateSkillByStyle: Map&lt;Style, Function&lt;ItemStack, Skill&gt;&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   livingMotionModifiers: Map&lt;Style, Map&lt;LivingMotion, StaticAnimation&gt;&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   passiveSkill: Skill [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   styleProvider: Function&lt;LivingEntityPatch&lt;?&gt;, Style&gt; [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   swingSound: SoundEvent [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   weaponCombinationPredicator: Function&lt;LivingEntityPatch&lt;?&gt;, Boolean&gt; [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addStyleAttibutes(style: Style, attributePair: Pair&lt;Attribute, AttributeModifier&gt;): Builder</TD></TR>
<TR><TD ALIGN="LEFT" >+ canBePlacedOffhand(canBePlacedOffhand: boolean): Builder</TD></TR>
<TR><TD ALIGN="LEFT" >+ category(category: WeaponCategory): Builder</TD></TR>
<TR><TD ALIGN="LEFT" >+ collider(collider: Collider): Builder</TD></TR>
<TR><TD ALIGN="LEFT" >+ comboCancel(comboCancel: Function&lt;Style, Boolean&gt;): Builder</TD></TR>
<TR><TD ALIGN="LEFT" >+ hitParticle(hitParticle: HitParticleType): Builder</TD></TR>
<TR><TD ALIGN="LEFT" >+ hitSound(hitSound: SoundEvent): Builder</TD></TR>
<TR><TD ALIGN="LEFT" >+ innateSkill(style: Style, innateSkill: Function&lt;ItemStack, Skill&gt;): Builder</TD></TR>
<TR><TD ALIGN="LEFT" >+ livingMotionModifier(wieldStyle: Style, livingMotion: LivingMotion, animation: StaticAnimation): Builder</TD></TR>
<TR><TD ALIGN="LEFT" >+ newStyleCombo(style: Style, animation: StaticAnimation...): Builder</TD></TR>
<TR><TD ALIGN="LEFT" >+ passiveSkill(passiveSkill: Skill): Builder</TD></TR>
<TR><TD ALIGN="LEFT" >+ styleProvider(styleProvider: Function&lt;LivingEntityPatch&lt;?&gt;, Style&gt;): Builder</TD></TR>
<TR><TD ALIGN="LEFT" >+ swingSound(swingSound: SoundEvent): Builder</TD></TR>
<TR><TD ALIGN="LEFT" >+ weaponCombinationPredicator(predicator: Function&lt;LivingEntityPatch&lt;?&gt;, Boolean&gt;): Builder</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Builder1816620056[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Builder</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   attributeMap: Map&lt;Style, Map&lt;Attribute, AttributeModifier&gt;&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   category: WeaponCategory [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   constructor: Function&lt;Builder, CapabilityItem&gt; [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addStyleAttibutes(style: Style, attributePair: Pair&lt;Attribute, AttributeModifier&gt;): Builder</TD></TR>
<TR><TD ALIGN="LEFT" >+ build(): CapabilityItem</TD></TR>
<TR><TD ALIGN="LEFT" >+ category(category: WeaponCategory): Builder</TD></TR>
<TR><TD ALIGN="LEFT" >+ constructor(constructor: Function&lt;Builder, CapabilityItem&gt;): Builder</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Builder49968088[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Builder</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   rangeAnimationModifiers: Map&lt;LivingMotion, StaticAnimation&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addAnimationsModifier(livingMotion: LivingMotion, animations: StaticAnimation): Builder</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Builder59794576[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Builder&lt;T extends MobPatch&lt;?&gt;&gt;</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   behaviors: List&lt;Builder&lt;T&gt;&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   canBeInterrupted: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   cooldown: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   cooldownSharingPointers: List&lt;Integer&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   looping: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   weight: float [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ build(): BehaviorSeries&lt;T&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ canBeInterrupted(canBeInterrupted: boolean): Builder&lt;T&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ cooldown(cooldown: int): Builder&lt;T&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ looping(looping: boolean): Builder&lt;T&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ nextBehavior(motion: Builder&lt;T&gt;): Builder&lt;T&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ simultaneousCooldown(cooldownSharingPointers: int...): Builder&lt;T&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ weight(weight: float): Builder&lt;T&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Builder957730873[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Builder&lt;T extends MobPatch&lt;?&gt;&gt;</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   behaviorSeriesList: List&lt;Builder&lt;T&gt;&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ build(mobpatch: T): CombatBehaviors&lt;T&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ newBehaviorSeries(builder: Builder&lt;T&gt;): Builder&lt;T&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CapabilityItem1526551569[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CapabilityItem</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   attributeMap: Map&lt;Style, Map&lt;Attribute, AttributeModifier&gt;&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   weaponCategory: WeaponCategory [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addStyleAttibutes(style: Style, attributePair: Pair&lt;Attribute, AttributeModifier&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addStyleAttributes(style: Style, armorNegation: double, impact: double, maxStrikes: int)</TD></TR>
<TR><TD ALIGN="LEFT" >+ availableOnHorse(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ builder(): Builder</TD></TR>
<TR><TD ALIGN="LEFT" >+ canBePlacedOffhand(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ canHoldInOffhandAlone(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ changeWeaponInnateSkill(playerpatch: PlayerPatch&lt;?&gt;, itemstack: ItemStack)</TD></TR>
<TR><TD ALIGN="LEFT" >+ checkOffhandValid(entitypatch: LivingEntityPatch&lt;?&gt;): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAttributeModifiers(equipmentSlot: EquipmentSlot, entitypatch: LivingEntityPatch&lt;?&gt;): Multimap&lt;Attribute, AttributeModifier&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAutoAttckMotion(playerpatch: PlayerPatch&lt;?&gt;): List&lt;StaticAnimation&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getDamageAttributesInCondition(style: Style): Map&lt;Attribute, AttributeModifier&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getGuardMotion(skill: GuardSkill, blockType: BlockType, playerpatch: PlayerPatch&lt;?&gt;): StaticAnimation</TD></TR>
<TR><TD ALIGN="LEFT" >+ getInnateSkill(playerpatch: PlayerPatch&lt;?&gt;, itemstack: ItemStack): Skill</TD></TR>
<TR><TD ALIGN="LEFT" >+ getLivingMotionModifier(playerpatch: LivingEntityPatch&lt;?&gt;, hand: InteractionHand): Map&lt;LivingMotion, StaticAnimation&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getResult(item: ItemStack): CapabilityItem</TD></TR>
<TR><TD ALIGN="LEFT" >+ getStyle(entitypatch: LivingEntityPatch&lt;?&gt;): Style</TD></TR>
<TR><TD ALIGN="LEFT" >+ getUseAnimation(entitypatch: LivingEntityPatch&lt;?&gt;): UseAnim</TD></TR>
<TR><TD ALIGN="LEFT" >+ modifyItemTooltip(itemstack: ItemStack, itemTooltip: List&lt;Component&gt;, entitypatch: LivingEntityPatch&lt;?&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" >+ shouldCancelCombo(entitypatch: LivingEntityPatch&lt;?&gt;): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CapabilitySkill87429395[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CapabilitySkill</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   learnedSkills: HashMultimap&lt;SkillCategory, Skill&gt; [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   skillContainers: SkillContainer[] [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   slotByCategory: HashMultimap&lt;SkillCategory, SkillContainer&gt; [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addLearnedSkill(skill: Skill)</TD></TR>
<TR><TD ALIGN="LEFT" >+ clear()</TD></TR>
<TR><TD ALIGN="LEFT" >+ fromNBT(nbt: CompoundTag)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getLearnedSkills(skillCategory: SkillCategory): Collection&lt;Skill&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getSkillContainer(skill: Skill): SkillContainer</TD></TR>
<TR><TD ALIGN="LEFT" >+ getSkillContainersFor(skillCategory: SkillCategory): Set&lt;SkillContainer&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasCategory(skillCategory: SkillCategory): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ removeLearnedSkill(skill: Skill): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ toNBT(): CompoundTag</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Check1201309306[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Check&lt;T extends PlayerPatch&lt;?&gt;&gt;</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   pass: boolean [1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Consume1201309306[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Consume</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DamageSourceElements1271590204[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DamageSourceElements</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   armorNegation: float [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   damageModifier: ValueModifier [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   extraDamages: Set&lt;ExtraDamageInstance&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   hurtItem: ItemStack [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   impact: float [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   sourceTag: Set&lt;SourceTag&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   stunType: StunType [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DealtDamageEvent2128632067[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DealtDamageEvent</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   attackDamage: float [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   damageSource: EpicFightDamageSource [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   target: LivingEntity [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DragonFireballPatch529362023[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DragonFireballPatch</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ onJoinWorld(projectileEntity: DragonFireball, event: EntityJoinWorldEvent)</TD></TR>
<TR><TD ALIGN="LEFT" >+ onProjectileImpact(event: ProjectileImpactEvent): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EnderDragonPatch398217887[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EnderDragonPatch</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   groundPhase: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   livingMotions: Map&lt;LivingMotions, StaticAnimation&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >+   prevMotion: LivingMotion [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   tipPointAnimations: Map&lt;String, TipPointAnimation&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >+   xRoot: float [1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   xRootO: float [1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   zRoot: float [1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   zRootO: float [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addTipPointAnimation(jointName: String, initpos: Vec3f, transformSheet: TransformSheet, ikSetter: IKInfo)</TD></TR>
<TR><TD ALIGN="LEFT" >+ clientTick(event: LivingUpdateEvent)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAngleTo(entityIn: Entity): double</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAngleToHorizontal(entityIn: Entity): double</TD></TR>
<TR><TD ALIGN="LEFT" >+ getHitAnimation(stunType: StunType): StaticAnimation</TD></TR>
<TR><TD ALIGN="LEFT" >+ getModelMatrix(partialTicks: float): OpenMatrix4f</TD></TR>
<TR><TD ALIGN="LEFT" >+ getSwingSound(hand: InteractionHand): SoundEvent</TD></TR>
<TR><TD ALIGN="LEFT" >+ getTipPointAnimation(jointName: String): TipPointAnimation</TD></TR>
<TR><TD ALIGN="LEFT" >+ initAnimator(clientAnimator: ClientAnimator)</TD></TR>
<TR><TD ALIGN="LEFT" ># initAttributes()</TD></TR>
<TR><TD ALIGN="LEFT" >+ onConstructed(entityIn: EnderDragon)</TD></TR>
<TR><TD ALIGN="LEFT" >+ onJoinWorld(entityIn: EnderDragon, event: EntityJoinWorldEvent)</TD></TR>
<TR><TD ALIGN="LEFT" >+ resetTipAnimations()</TD></TR>
<TR><TD ALIGN="LEFT" >+ rotateTo(target: Entity, limit: float, partialSync: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" >+ serverTick(event: LivingUpdateEvent)</TD></TR>
<TR><TD ALIGN="LEFT" >+ shouldMoveOnCurrentSide(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ tick(event: LivingUpdateEvent)</TD></TR>
<TR><TD ALIGN="LEFT" >+ tryHurt(damageSource: DamageSource, amount: float): AttackResult</TD></TR>
<TR><TD ALIGN="LEFT" >+ updateMotion(considerInaction: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" >+ updateTipPoints()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EndermanPatch1713023975[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EndermanPatch</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   deathTimerExt: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   normalAttacks: Goal [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   onRage: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   rageAttacks: Goal [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   rageTargeting: Goal [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   teleportAttacks: Goal [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ aboutToDeath()</TD></TR>
<TR><TD ALIGN="LEFT" >+ getHitAnimation(stunType: StunType): StaticAnimation</TD></TR>
<TR><TD ALIGN="LEFT" ># initAI()</TD></TR>
<TR><TD ALIGN="LEFT" >+ initAnimator(clientAnimator: ClientAnimator)</TD></TR>
<TR><TD ALIGN="LEFT" ># initAttributes()</TD></TR>
<TR><TD ALIGN="LEFT" >+ onJoinWorld(enderman: EnderMan, event: EntityJoinWorldEvent)</TD></TR>
<TR><TD ALIGN="LEFT" >+ onStartTracking(trackingPlayer: ServerPlayer)</TD></TR>
<TR><TD ALIGN="LEFT" >+ processSpawnData(buf: ByteBuf)</TD></TR>
<TR><TD ALIGN="LEFT" >+ serverTick(event: LivingUpdateEvent)</TD></TR>
<TR><TD ALIGN="LEFT" >+ tick(event: LivingUpdateEvent)</TD></TR>
<TR><TD ALIGN="LEFT" ># toNormal()</TD></TR>
<TR><TD ALIGN="LEFT" ># toRaging()</TD></TR>
<TR><TD ALIGN="LEFT" >+ tryHurt(damageSource: DamageSource, amount: float): AttackResult</TD></TR>
<TR><TD ALIGN="LEFT" >+ updateMotion(considerInaction: boolean)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EntityPatch1466425223[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EntityPatch&lt;T extends Entity&gt;</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   initialized: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   original: T [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># clientTick(event: LivingUpdateEvent)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAngleTo(entityIn: Entity): double</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAngleToHorizontal(entityIn: Entity): double</TD></TR>
<TR><TD ALIGN="LEFT" >+ getMatrix(partialTicks: float): OpenMatrix4f</TD></TR>
<TR><TD ALIGN="LEFT" >+ getModelMatrix(partialTicks: float): OpenMatrix4f</TD></TR>
<TR><TD ALIGN="LEFT" >+ onConstructed(entityIn: T)</TD></TR>
<TR><TD ALIGN="LEFT" >+ onJoinWorld(entityIn: T, event: EntityJoinWorldEvent)</TD></TR>
<TR><TD ALIGN="LEFT" >+ onStartTracking(trackingPlayer: ServerPlayer)</TD></TR>
<TR><TD ALIGN="LEFT" >+ overrideRender(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ processSpawnData(buf: ByteBuf)</TD></TR>
<TR><TD ALIGN="LEFT" ># serverTick(event: LivingUpdateEvent)</TD></TR>
<TR><TD ALIGN="LEFT" >+ tick(event: LivingUpdateEvent)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EpicFightCapabilities1229700656[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EpicFightCapabilities</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ getEntityPatch(entity: Entity, type: Class&lt;T&gt;): T</TD></TR>
<TR><TD ALIGN="LEFT" >+ getItemStackCapability(stack: ItemStack): CapabilityItem</TD></TR>
<TR><TD ALIGN="LEFT" >+ registerCapabilities(event: RegisterCapabilitiesEvent)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EpicFightEntityDamageSource1271590204[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EpicFightEntityDamageSource</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   animation: StaticAnimation [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   damageSourceElements: DamageSourceElements [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   initialPosition: Vec3 [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ setInitialPosition(initialPosition: Vec3): EpicFightDamageSource</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EventTrigger2128632067[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EventTrigger&lt;T extends PlayerEvent&lt;?&gt;&gt;</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   function: Consumer&lt;T&gt; [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   priority: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   uuid: UUID [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ compareTo(o: EventTrigger&lt;?&gt;): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ is(uuid: UUID): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ makeEvent(uuid: UUID, function: Consumer&lt;T&gt;, priority: int): EventTrigger&lt;T&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ trigger(args: T)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EventType1955790716[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EventType&lt;T extends PlayerEvent&lt;?&gt;&gt;</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   side: LogicalSide [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ shouldActive(isRemote: boolean): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ExtraDamage702480138[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ExtraDamage</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   extraDamage: ExtraDamageFunction [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   tooltip: ExtraDamageTooltipFunction [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ create(params: float...): ExtraDamageInstance</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ExtraDamageInstance1271590204[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ExtraDamageInstance</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   calculator: ExtraDamage [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   params: float[] [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ get(attacker: LivingEntity, hurtItem: ItemStack, target: LivingEntity, baseDamage: float): float</TD></TR>
<TR><TD ALIGN="LEFT" >+ toTransableComponentParams(): Object[]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

GlobalMobPatch1466425223[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)GlobalMobPatch</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   remainStunTime: int [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ applyStun(stunType: StunType, stunTime: float)</TD></TR>
<TR><TD ALIGN="LEFT" ># serverTick(event: LivingUpdateEvent)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

HumanoidMobPatch1466425223[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)HumanoidMobPatch&lt;T extends PathfinderMob&gt;</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   weaponAttackMotions: Map&lt;WeaponCategory, Map&lt;Style, Builder&lt;HumanoidMobPatch&lt;?&gt;&gt;&gt;&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   weaponLivingMotions: Map&lt;WeaponCategory, Map&lt;Style, Set&lt;Pair&lt;LivingMotion, StaticAnimation&gt;&gt;&gt;&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># commonAggresiveMobAnimatorInit(clientAnimator: ClientAnimator)</TD></TR>
<TR><TD ALIGN="LEFT" ># commonMobAnimatorInit(clientAnimator: ClientAnimator)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getHitAnimation(stunType: StunType): StaticAnimation</TD></TR>
<TR><TD ALIGN="LEFT" ># initAI()</TD></TR>
<TR><TD ALIGN="LEFT" >+ modifyLivingMotionByCurrentItem()</TD></TR>
<TR><TD ALIGN="LEFT" >+ onMount(isMountOrDismount: boolean, ridingEntity: Entity)</TD></TR>
<TR><TD ALIGN="LEFT" >+ onStartTracking(trackingPlayer: ServerPlayer)</TD></TR>
<TR><TD ALIGN="LEFT" >+ updateHeldItem(fromCap: CapabilityItem, toCap: CapabilityItem, from: ItemStack, to: ItemStack, hand: InteractionHand)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

HurtEvent2128632067[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)HurtEvent&lt;T&gt;</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   amount: float [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   damageSource: T [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   result: ResultType [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

HurtableEntityPatch1466425223[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)HurtableEntityPatch&lt;T extends LivingEntity&gt;</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   cancelKnockback: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   stunTimeReduction: float [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ applyStun(stunType: StunType, stunTime: float)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getModelMatrix(partialTicks: float): OpenMatrix4f</TD></TR>
<TR><TD ALIGN="LEFT" >+ knockBackEntity(sourceLocation: Vec3, power: float)</TD></TR>
<TR><TD ALIGN="LEFT" >+ overrideRender(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" ># serverTick(event: LivingUpdateEvent)</TD></TR>
<TR><TD ALIGN="LEFT" >+ shouldCancelKnockback(): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

IndirectEpicFightDamageSource1271590204[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)IndirectEpicFightDamageSource</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   damageSourceElements: DamageSourceElements [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   projectileInitialPosition: Vec3 [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ setInitialPosition(initialPosition: Vec3): EpicFightDamageSource</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ItemCapabilityProvider1270927377[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ItemCapabilityProvider</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   capability: CapabilityItem [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   optional: LazyOptional&lt;CapabilityItem&gt; [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addDefaultItems()</TD></TR>
<TR><TD ALIGN="LEFT" >+ clear()</TD></TR>
<TR><TD ALIGN="LEFT" >+ getCapability(cap: Capability&lt;T&gt;, side: Direction): LazyOptional&lt;T&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ has(item: Item): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ put(item: Item, cap: CapabilityItem)</TD></TR>
<TR><TD ALIGN="LEFT" >+ registerWeaponTypesByClass()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ItemUseEndEvent2128632067[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ItemUseEndEvent</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

KnuckleCapability1526551569[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)KnuckleCapability</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ canHoldInOffhandAlone(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ checkOffhandValid(entitypatch: LivingEntityPatch&lt;?&gt;): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

LivingEntityPatch1466425223[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)LivingEntityPatch&lt;T extends LivingEntity&gt;</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   animationDamageSource: EpicFightDamageSource [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   animator: Animator [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   armature: Armature [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   currentCompositeMotion: LivingMotion [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   currentLivingMotion: LivingMotion [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   currentlyAttackedEntity: List&lt;LivingEntity&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   grapplingTarget: LivingEntity [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   isLastAttackSuccess: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   lastAttackPosition: Vec3 [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   lastDealDamage: float [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   lastResultType: ResultType [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   lastTryHurtEntity: Entity [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   state: EntityState [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ aboutToDeath()</TD></TR>
<TR><TD ALIGN="LEFT" >+ applyStun(stunType: StunType, stunTime: float)</TD></TR>
<TR><TD ALIGN="LEFT" >+ attack(damageSource: EpicFightDamageSource, target: Entity, hand: InteractionHand): AttackResult</TD></TR>
<TR><TD ALIGN="LEFT" >+ canPush(entity: Entity): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ cancelUsingItem()</TD></TR>
<TR><TD ALIGN="LEFT" >+ checkAttackSuccess(target: Entity): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ correctRotation()</TD></TR>
<TR><TD ALIGN="LEFT" >+ gatherDamageDealt(source: EpicFightDamageSource, amount: float)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAdvancedHoldingItemCapability(hand: InteractionHand): CapabilityItem</TD></TR>
<TR><TD ALIGN="LEFT" >+ getArmorNegation(hand: InteractionHand): float</TD></TR>
<TR><TD ALIGN="LEFT" >+ getColliderMatching(hand: InteractionHand): Collider</TD></TR>
<TR><TD ALIGN="LEFT" >+ getDamageSource(animation: StaticAnimation, hand: InteractionHand): EpicFightDamageSource</TD></TR>
<TR><TD ALIGN="LEFT" >+ getHeadMatrix(partialTicks: float): OpenMatrix4f</TD></TR>
<TR><TD ALIGN="LEFT" >+ getHitAnimation(stunType: StunType): StaticAnimation</TD></TR>
<TR><TD ALIGN="LEFT" >+ getHoldingItemCapability(hand: InteractionHand): CapabilityItem</TD></TR>
<TR><TD ALIGN="LEFT" >+ getImpact(hand: InteractionHand): float</TD></TR>
<TR><TD ALIGN="LEFT" >+ getMaxStrikes(hand: InteractionHand): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getModelMatrix(partialTicks: float): OpenMatrix4f</TD></TR>
<TR><TD ALIGN="LEFT" >+ getModifiedBaseDamage(baseDamage: float): float</TD></TR>
<TR><TD ALIGN="LEFT" >+ getSwingSound(hand: InteractionHand): SoundEvent</TD></TR>
<TR><TD ALIGN="LEFT" >+ getValidItemInHand(hand: InteractionHand): ItemStack</TD></TR>
<TR><TD ALIGN="LEFT" >+ getWeaponHitParticle(hand: InteractionHand): HitParticleType</TD></TR>
<TR><TD ALIGN="LEFT" >+ getWeaponHitSound(hand: InteractionHand): SoundEvent</TD></TR>
<TR><TD ALIGN="LEFT" >+ initAnimator(clientAnimator: ClientAnimator)</TD></TR>
<TR><TD ALIGN="LEFT" ># initAttributes()</TD></TR>
<TR><TD ALIGN="LEFT" >- isRideOrBeingRidden(entityIn: Entity): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isTeammate(entityIn: Entity): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ notifyGrapplingWarning()</TD></TR>
<TR><TD ALIGN="LEFT" >+ onAttackBlocked(damageSource: DamageSource, opponent: LivingEntityPatch&lt;?&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" >+ onConstructed(entityIn: T)</TD></TR>
<TR><TD ALIGN="LEFT" >+ onDeath()</TD></TR>
<TR><TD ALIGN="LEFT" >+ onDrop(event: LivingDropsEvent): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ onFall(event: LivingFallEvent)</TD></TR>
<TR><TD ALIGN="LEFT" >+ onJoinWorld(entityIn: T, event: EntityJoinWorldEvent)</TD></TR>
<TR><TD ALIGN="LEFT" >+ onMount(isMountOrDismount: boolean, ridingEntity: Entity)</TD></TR>
<TR><TD ALIGN="LEFT" >+ overrideRender(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ playAnimationSynchronized(animation: StaticAnimation, convertTimeModifier: float)</TD></TR>
<TR><TD ALIGN="LEFT" >+ playAnimationSynchronized(animation: StaticAnimation, convertTimeModifier: float, packetProvider: AnimationPacketProvider)</TD></TR>
<TR><TD ALIGN="LEFT" ># playReboundAnimation()</TD></TR>
<TR><TD ALIGN="LEFT" >+ playSound(sound: SoundEvent, pitchModifierMin: float, pitchModifierMax: float)</TD></TR>
<TR><TD ALIGN="LEFT" >+ playSound(sound: SoundEvent, volume: float, pitchModifierMin: float, pitchModifierMax: float)</TD></TR>
<TR><TD ALIGN="LEFT" >+ reserveAnimation(animation: StaticAnimation)</TD></TR>
<TR><TD ALIGN="LEFT" >+ resetSize(size: EntityDimensions)</TD></TR>
<TR><TD ALIGN="LEFT" >+ rotateTo(degree: float, limit: float, syncPrevRot: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" >+ rotateTo(target: Entity, limit: float, syncPrevRot: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" >+ shouldBlockMoving(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ shouldMoveOnCurrentSide(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" ># swapHand(shouldSwap: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" >+ tick(event: LivingUpdateEvent)</TD></TR>
<TR><TD ALIGN="LEFT" >+ tryHarm(target: Entity, damagesource: EpicFightDamageSource, amount: float): AttackResult</TD></TR>
<TR><TD ALIGN="LEFT" >+ tryHurt(damageSource: DamageSource, amount: float): AttackResult</TD></TR>
<TR><TD ALIGN="LEFT" >+ updateArmor(fromCap: CapabilityItem, toCap: CapabilityItem, slotType: EquipmentSlot)</TD></TR>
<TR><TD ALIGN="LEFT" >+ updateEntityState()</TD></TR>
<TR><TD ALIGN="LEFT" >+ updateHeldItem(fromCap: CapabilityItem, toCap: CapabilityItem, from: ItemStack, to: ItemStack, hand: InteractionHand)</TD></TR>
<TR><TD ALIGN="LEFT" >+ updateMotion(considerInaction: boolean)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

MobPatch1466425223[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)MobPatch&lt;T extends Mob&gt;</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   mobFaction: Faction [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ attack(damageSource: EpicFightDamageSource, target: Entity, hand: InteractionHand): AttackResult</TD></TR>
<TR><TD ALIGN="LEFT" ># commonAggressiveMobUpdateMotion(considerInaction: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" ># commonAggressiveRangedMobUpdateMotion(considerInaction: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" ># commonMobUpdateMotion(considerInaction: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" ># initAI()</TD></TR>
<TR><TD ALIGN="LEFT" >+ isTeammate(entityIn: Entity): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ onJoinWorld(entityIn: T, event: EntityJoinWorldEvent)</TD></TR>
<TR><TD ALIGN="LEFT" ># selectGoalToRemove(toRemove: Set&lt;Goal&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" >+ updateArmor(fromCap: CapabilityItem, toCap: CapabilityItem, slotType: EquipmentSlot)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ModifyBaseDamageEvent2128632067[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ModifyBaseDamageEvent&lt;T extends PlayerPatch&lt;?&gt;&gt;</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   damage: float [1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

MovementInputEvent2128632067[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)MovementInputEvent</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   movementInput: Input [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PiglinPatch1713023975[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PiglinPatch</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ initAnimator(clientAnimator: ClientAnimator)</TD></TR>
<TR><TD ALIGN="LEFT" ># initAttributes()</TD></TR>
<TR><TD ALIGN="LEFT" >+ onStartTracking(trackingPlayer: ServerPlayer)</TD></TR>
<TR><TD ALIGN="LEFT" >+ processSpawnData(buf: ByteBuf)</TD></TR>
<TR><TD ALIGN="LEFT" >+ updateMotion(considerInaction: boolean)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PlayerEvent2128632067[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PlayerEvent&lt;T extends PlayerPatch&lt;?&gt;&gt;</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   cancelable: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   canceled: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   playerpatch: T [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PlayerEventListener2128632067[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PlayerEventListener</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   events: Map&lt;EventType&lt;? extends PlayerEvent&lt;?&gt;&gt;, TreeMultimap&lt;Integer, EventTrigger&lt;? extends PlayerEvent&lt;?&gt;&gt;&gt;&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   playerpatch: PlayerPatch&lt;?&gt; [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addEventListener(eventType: EventType&lt;T&gt;, uuid: UUID, function: Consumer&lt;T&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addEventListener(eventType: EventType&lt;T&gt;, uuid: UUID, function: Consumer&lt;T&gt;, priority: int)</TD></TR>
<TR><TD ALIGN="LEFT" >+ removeListener(eventType: EventType&lt;T&gt;, uuid: UUID)</TD></TR>
<TR><TD ALIGN="LEFT" >+ removeListener(eventType: EventType&lt;T&gt;, uuid: UUID, priority: int)</TD></TR>
<TR><TD ALIGN="LEFT" >+ triggerEvents(eventType: EventType&lt;T&gt;, event: T): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PlayerPatch187378472[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PlayerPatch&lt;T extends Player&gt;</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   eventListeners: PlayerEventListener [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   modelYRot: float [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   playerMode: PlayerMode [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   tickSinceLastAction: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   xo: double [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   yo: double [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   zo: double [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ attack(damageSource: EpicFightDamageSource, target: Entity, hand: InteractionHand): AttackResult</TD></TR>
<TR><TD ALIGN="LEFT" >+ changeModelYRot(degree: float)</TD></TR>
<TR><TD ALIGN="LEFT" >+ consumeStamina(amount: float): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ copySkillsFrom(old: PlayerPatch&lt;?&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAttackSpeed(hand: InteractionHand): float</TD></TR>
<TR><TD ALIGN="LEFT" >+ getDamageSource(animation: StaticAnimation, hand: InteractionHand): EpicFightDamageSource</TD></TR>
<TR><TD ALIGN="LEFT" >+ getHitAnimation(stunType: StunType): StaticAnimation</TD></TR>
<TR><TD ALIGN="LEFT" >+ getModifiedAttackSpeed(itemCapability: CapabilityItem, baseSpeed: float): float</TD></TR>
<TR><TD ALIGN="LEFT" >+ getModifiedBaseDamage(baseDamage: float): float</TD></TR>
<TR><TD ALIGN="LEFT" >+ getSkill(skill: Skill): SkillContainer</TD></TR>
<TR><TD ALIGN="LEFT" >+ getSkill(slot: SkillSlot): SkillContainer</TD></TR>
<TR><TD ALIGN="LEFT" >+ getSkill(slotIndex: int): SkillContainer</TD></TR>
<TR><TD ALIGN="LEFT" >+ initAnimator(clientAnimator: ClientAnimator)</TD></TR>
<TR><TD ALIGN="LEFT" ># initAttributes()</TD></TR>
<TR><TD ALIGN="LEFT" >+ onConstructed(entityIn: T)</TD></TR>
<TR><TD ALIGN="LEFT" >+ onFall(event: PlayerFlyableFallEvent)</TD></TR>
<TR><TD ALIGN="LEFT" >+ onJoinWorld(entityIn: T, event: EntityJoinWorldEvent)</TD></TR>
<TR><TD ALIGN="LEFT" >+ openSkillBook(itemstack: ItemStack, hand: InteractionHand)</TD></TR>
<TR><TD ALIGN="LEFT" >+ resetActionTick()</TD></TR>
<TR><TD ALIGN="LEFT" >+ serverTick(event: LivingUpdateEvent)</TD></TR>
<TR><TD ALIGN="LEFT" >+ shouldMoveOnCurrentSide(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ tick(event: LivingUpdateEvent)</TD></TR>
<TR><TD ALIGN="LEFT" >+ toBattleMode(synchronize: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" >+ toMiningMode(synchronize: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" >+ toMode(playerMode: PlayerMode, synchronize: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" >+ toggleMode()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Post1021056518[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Post</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Pre1021056518[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Pre</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ProjectileHitEvent2128632067[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ProjectileHitEvent</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   forgeEvent: ProjectileImpactEvent [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ProjectilePatch529362023[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ProjectilePatch&lt;T extends Projectile&gt;</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   armorNegation: float [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   impact: float [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   initialFirePosition: Vec3 [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ getEpicFightDamageSource(original: DamageSource): IndirectEpicFightDamageSource</TD></TR>
<TR><TD ALIGN="LEFT" >+ getModelMatrix(partialTicks: float): OpenMatrix4f</TD></TR>
<TR><TD ALIGN="LEFT" >+ onJoinWorld(projectileEntity: T, event: EntityJoinWorldEvent)</TD></TR>
<TR><TD ALIGN="LEFT" >+ onProjectileImpact(event: ProjectileImpactEvent): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ overrideRender(): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RangedWeaponCapability1526551569[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RangedWeaponCapability</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   rangeAnimationModifiers: Map&lt;LivingMotion, StaticAnimation&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ availableOnHorse(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ builder(): Builder</TD></TR>
<TR><TD ALIGN="LEFT" >+ canBePlacedOffhand(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ getLivingMotionModifier(playerdata: LivingEntityPatch&lt;?&gt;, hand: InteractionHand): Map&lt;LivingMotion, StaticAnimation&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RightClickItemEvent2128632067[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RightClickItemEvent&lt;T extends PlayerPatch&lt;?&gt;&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ServerPlayerPatch187378472[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ServerPlayerPatch</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   attackTarget: LivingEntity [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   updatedMotionCurrentTick: boolean [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ changeModelYRot(amount: float)</TD></TR>
<TR><TD ALIGN="LEFT" >+ consumeStamina(amount: float): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ gatherDamageDealt(source: EpicFightDamageSource, amount: float)</TD></TR>
<TR><TD ALIGN="LEFT" >+ isTeammate(entityIn: Entity): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ modifyLivingMotionByCurrentItem()</TD></TR>
<TR><TD ALIGN="LEFT" >+ onJoinWorld(entityIn: ServerPlayer, event: EntityJoinWorldEvent)</TD></TR>
<TR><TD ALIGN="LEFT" >+ onStartTracking(trackingPlayer: ServerPlayer)</TD></TR>
<TR><TD ALIGN="LEFT" >+ playAnimationSynchronized(animation: StaticAnimation, convertTimeModifier: float, packetProvider: AnimationPacketProvider)</TD></TR>
<TR><TD ALIGN="LEFT" >+ reserveAnimation(animation: StaticAnimation)</TD></TR>
<TR><TD ALIGN="LEFT" >+ tick(event: LivingUpdateEvent)</TD></TR>
<TR><TD ALIGN="LEFT" >+ toBattleMode(synchronize: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" >+ toMiningMode(synchronize: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" >+ tryHurt(damageSource: DamageSource, amount: float): AttackResult</TD></TR>
<TR><TD ALIGN="LEFT" >+ updateHeldItem(fromCap: CapabilityItem, toCap: CapabilityItem, from: ItemStack, to: ItemStack, hand: InteractionHand)</TD></TR>
<TR><TD ALIGN="LEFT" >+ updateMotion(considerInaction: boolean)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ShieldCapability1526551569[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ShieldCapability</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ getLivingMotionModifier(playerdata: LivingEntityPatch&lt;?&gt;, hand: InteractionHand): Map&lt;LivingMotion, StaticAnimation&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getUseAnimation(entitypatch: LivingEntityPatch&lt;?&gt;): UseAnim</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SkillCapabilityProvider1270927377[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SkillCapabilityProvider</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   capability: CapabilitySkill [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   optional: LazyOptional&lt;CapabilitySkill&gt; [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ deserializeNBT(nbt: CompoundTag)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getCapability(cap: Capability&lt;T&gt;, side: Direction): LazyOptional&lt;T&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ serializeNBT(): CompoundTag</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SkillEvent2128632067[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SkillEvent&lt;T extends PlayerPatch&lt;?&gt;&gt;</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   resource: Resource [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   skill: Skill [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SkillExecuteEvent2128632067[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SkillExecuteEvent&lt;T extends PlayerPatch&lt;?&gt;&gt;</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   skillContainer: SkillContainer [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

StaminaConsumeEvent2128632067[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)StaminaConsumeEvent</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   amount: float [1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TagBasedSeparativeCapability1526551569[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TagBasedSeparativeCapability</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   defaultCapability: CapabilityItem [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   variations: List&lt;Pair&lt;Predicate&lt;ItemStack&gt;, CapabilityItem&gt;&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ getResult(item: ItemStack): CapabilityItem</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TridentCapability1526551569[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TridentCapability</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ getAutoAttckMotion(playerpatch: PlayerPatch&lt;?&gt;): List&lt;StaticAnimation&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getInnateSkill(playerpatch: PlayerPatch&lt;?&gt;, itemstack: ItemStack): Skill</TD></TR>
<TR><TD ALIGN="LEFT" >+ getStyle(entitypatch: LivingEntityPatch&lt;?&gt;): Style</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

WeaponCapability1526551569[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)WeaponCapability</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   autoAttackMotions: Map&lt;Style, List&lt;StaticAnimation&gt;&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   canBePlacedOffhand: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   comboCancel: Function&lt;Style, Boolean&gt; [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   hitParticle: HitParticleType [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   hitSound: SoundEvent [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   innateSkill: Map&lt;Style, Function&lt;ItemStack, Skill&gt;&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   livingMotionModifiers: Map&lt;Style, Map&lt;LivingMotion, StaticAnimation&gt;&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   passiveSkill: Skill [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   smashingSound: SoundEvent [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   stylegetter: Function&lt;LivingEntityPatch&lt;?&gt;, Style&gt; [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   weaponCollider: Collider [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   weaponCombinationPredicator: Function&lt;LivingEntityPatch&lt;?&gt;, Boolean&gt; [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ builder(): Builder</TD></TR>
<TR><TD ALIGN="LEFT" >+ canBePlacedOffhand(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ canHoldInOffhandAlone(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ checkOffhandValid(entitypatch: LivingEntityPatch&lt;?&gt;): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAutoAttckMotion(playerpatch: PlayerPatch&lt;?&gt;): List&lt;StaticAnimation&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getInnateSkill(playerpatch: PlayerPatch&lt;?&gt;, itemstack: ItemStack): Skill</TD></TR>
<TR><TD ALIGN="LEFT" >+ getLivingMotionModifier(player: LivingEntityPatch&lt;?&gt;, hand: InteractionHand): Map&lt;LivingMotion, StaticAnimation&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getStyle(entitypatch: LivingEntityPatch&lt;?&gt;): Style</TD></TR>
<TR><TD ALIGN="LEFT" >+ getUseAnimation(playerpatch: LivingEntityPatch&lt;?&gt;): UseAnim</TD></TR>
<TR><TD ALIGN="LEFT" >+ shouldCancelCombo(entitypatch: LivingEntityPatch&lt;?&gt;): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

WitherPatch1564462732[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)WitherPatch</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   blockedNow: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   blockingCount: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   blockingEntity: LivingEntityPatch&lt;?&gt; [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   blockingStartTick: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   deathTimerExt: int [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ clientTick(event: LivingUpdateEvent)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAlternativeTargetEntity(head: int): Entity</TD></TR>
<TR><TD ALIGN="LEFT" >+ getHeadX(index: int): double</TD></TR>
<TR><TD ALIGN="LEFT" >+ getHeadY(index: int): double</TD></TR>
<TR><TD ALIGN="LEFT" >+ getHeadZ(index: int): double</TD></TR>
<TR><TD ALIGN="LEFT" >+ getHitAnimation(stunType: StunType): StaticAnimation</TD></TR>
<TR><TD ALIGN="LEFT" >+ getLaserTargetEntity(head: int): Entity</TD></TR>
<TR><TD ALIGN="LEFT" >+ getLaserTargetPosition(head: int): Vec3</TD></TR>
<TR><TD ALIGN="LEFT" >+ getModelMatrix(partialTicks: float): OpenMatrix4f</TD></TR>
<TR><TD ALIGN="LEFT" >+ initAI()</TD></TR>
<TR><TD ALIGN="LEFT" >+ initAnimator(clientAnimator: ClientAnimator)</TD></TR>
<TR><TD ALIGN="LEFT" ># initAttributes()</TD></TR>
<TR><TD ALIGN="LEFT" >+ onAttackBlocked(damageSource: DamageSource, opponent: LivingEntityPatch&lt;?&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" >+ onConstructed(witherBoss: WitherBoss)</TD></TR>
<TR><TD ALIGN="LEFT" >+ onDeath()</TD></TR>
<TR><TD ALIGN="LEFT" >+ onDrop(event: LivingDropsEvent): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ serverTick(event: LivingUpdateEvent)</TD></TR>
<TR><TD ALIGN="LEFT" >+ startCharging()</TD></TR>
<TR><TD ALIGN="LEFT" >+ tick(event: LivingUpdateEvent)</TD></TR>
<TR><TD ALIGN="LEFT" >+ tryHurt(damageSource: DamageSource, amount: float): AttackResult</TD></TR>
<TR><TD ALIGN="LEFT" >+ updateMotion(considerInaction: boolean)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

WitherSkullPatch529362023[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)WitherSkullPatch</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ onJoinWorld(projectileEntity: WitherSkull, event: EntityJoinWorldEvent)</TD></TR>
<TR><TD ALIGN="LEFT" >+ onProjectileImpact(event: ProjectileImpactEvent): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ZombiePatch1713023975[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ZombiePatch&lt;T extends PathfinderMob&gt;</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ initAnimator(clientAnimator: ClientAnimator)</TD></TR>
<TR><TD ALIGN="LEFT" ># initAttributes()</TD></TR>
<TR><TD ALIGN="LEFT" >+ onStartTracking(trackingPlayer: ServerPlayer)</TD></TR>
<TR><TD ALIGN="LEFT" >+ processSpawnData(buf: ByteBuf)</TD></TR>
<TR><TD ALIGN="LEFT" >+ updateMotion(considerInaction: boolean)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];
} 

subgraph cluster_1079782706 { 
   	label=skill
	labeljust=l
	fillcolor="#d8d8d8"
	style=filled
   
   AirAttack1729445901[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AirAttack</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ createAirAttackBuilder(): Builder&lt;AirAttack&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ executeOnServer(executer: ServerPlayerPatch, args: FriendlyByteBuf)</TD></TR>
<TR><TD ALIGN="LEFT" >+ isExecutableState(executer: PlayerPatch&lt;?&gt;): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AssassinationSkill396813401[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AssassinationSkill</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BasicAttack1729445901[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BasicAttack</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ createBasicAttackBuilder(): Builder&lt;BasicAttack&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ executeOnServer(executer: ServerPlayerPatch, args: FriendlyByteBuf)</TD></TR>
<TR><TD ALIGN="LEFT" >+ isExecutableState(executer: PlayerPatch&lt;?&gt;): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ onInitiate(container: SkillContainer)</TD></TR>
<TR><TD ALIGN="LEFT" >+ onRemoved(container: SkillContainer)</TD></TR>
<TR><TD ALIGN="LEFT" >+ updateContainer(container: SkillContainer)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Battojutsu1729445901[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Battojutsu</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ getCooldownRegenPerSecond(player: PlayerPatch&lt;?&gt;): float</TD></TR>
<TR><TD ALIGN="LEFT" >+ onInitiate(container: SkillContainer)</TD></TR>
<TR><TD ALIGN="LEFT" >+ onRemoved(container: SkillContainer)</TD></TR>
<TR><TD ALIGN="LEFT" >+ onReset(container: SkillContainer)</TD></TR>
<TR><TD ALIGN="LEFT" >+ shouldDeactivateAutomatically(executer: PlayerPatch&lt;?&gt;): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BerserkerSkill1441897516[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BerserkerSkill</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   damageBonus: float [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   speedBonus: float [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ drawOnGui(gui: BattleModeGui, container: SkillContainer, matStackIn: PoseStack, x: float, y: float, scale: float, width: int, height: int)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getTooltipArgsOfScreen(list: List&lt;Object&gt;): List&lt;Object&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ onInitiate(container: SkillContainer)</TD></TR>
<TR><TD ALIGN="LEFT" >+ onRemoved(container: SkillContainer)</TD></TR>
<TR><TD ALIGN="LEFT" >+ shouldDraw(container: SkillContainer): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BladeRushSkill1402578624[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BladeRushSkill</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   comboAnimations: StaticAnimation[] [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ cancelOnClient(executer: LocalPlayerPatch, args: FriendlyByteBuf)</TD></TR>
<TR><TD ALIGN="LEFT" >+ cancelOnServer(executer: ServerPlayerPatch, args: FriendlyByteBuf)</TD></TR>
<TR><TD ALIGN="LEFT" >+ checkExecuteCondition(executer: PlayerPatch&lt;?&gt;): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ executeOnServer(executer: ServerPlayerPatch, args: FriendlyByteBuf)</TD></TR>
<TR><TD ALIGN="LEFT" >+ gatherArguments(executer: LocalPlayerPatch, controllEngine: ControllEngine): FriendlyByteBuf</TD></TR>
<TR><TD ALIGN="LEFT" >+ getTooltipOnItem(itemStack: ItemStack, cap: CapabilityItem, playerCap: PlayerPatch&lt;?&gt;): List&lt;Component&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ onInitiate(container: SkillContainer)</TD></TR>
<TR><TD ALIGN="LEFT" >+ onRemoved(container: SkillContainer)</TD></TR>
<TR><TD ALIGN="LEFT" >+ onScreen(playerpatch: LocalPlayerPatch, resolutionX: float, resolutionY: float)</TD></TR>
<TR><TD ALIGN="LEFT" >+ registerPropertiesToAnimation(): WeaponInnateSkill</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Builder1259968052[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Builder</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   animationLocations: ResourceLocation[] [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   selector: Function&lt;ServerPlayerPatch, Integer&gt; [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ setActivateType(activateType: ActivateType): Builder</TD></TR>
<TR><TD ALIGN="LEFT" >+ setAnimations(animationLocations: ResourceLocation...): Builder</TD></TR>
<TR><TD ALIGN="LEFT" >+ setCategory(category: SkillCategory): Builder</TD></TR>
<TR><TD ALIGN="LEFT" >+ setResource(resource: Resource): Builder</TD></TR>
<TR><TD ALIGN="LEFT" >+ setSelector(selector: Function&lt;ServerPlayerPatch, Integer&gt;): Builder</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Builder2084080048[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Builder</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   advancedGuardMotions: Map&lt;WeaponCategory, BiFunction&lt;CapabilityItem, PlayerPatch&lt;?&gt;, ?&gt;&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   guardBreakMotions: Map&lt;WeaponCategory, BiFunction&lt;CapabilityItem, PlayerPatch&lt;?&gt;, ?&gt;&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   guardMotions: Map&lt;WeaponCategory, BiFunction&lt;CapabilityItem, PlayerPatch&lt;?&gt;, ?&gt;&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addAdvancedGuardMotion(weaponCategory: WeaponCategory, function: BiFunction&lt;CapabilityItem, PlayerPatch&lt;?&gt;, ?&gt;): Builder</TD></TR>
<TR><TD ALIGN="LEFT" >+ addGuardBreakMotion(weaponCategory: WeaponCategory, function: BiFunction&lt;CapabilityItem, PlayerPatch&lt;?&gt;, StaticAnimation&gt;): Builder</TD></TR>
<TR><TD ALIGN="LEFT" >+ addGuardMotion(weaponCategory: WeaponCategory, function: BiFunction&lt;CapabilityItem, PlayerPatch&lt;?&gt;, StaticAnimation&gt;): Builder</TD></TR>
<TR><TD ALIGN="LEFT" >+ setActivateType(activateType: ActivateType): Builder</TD></TR>
<TR><TD ALIGN="LEFT" >+ setCategory(category: SkillCategory): Builder</TD></TR>
<TR><TD ALIGN="LEFT" >+ setCreativeTab(tab: CreativeModeTab): Builder</TD></TR>
<TR><TD ALIGN="LEFT" >+ setResource(resource: Resource): Builder</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Builder292324470[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Builder&lt;T extends Skill&gt;</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   activateType: ActivateType [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   category: SkillCategory [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   registryName: ResourceLocation [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   resource: Resource [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   tab: CreativeModeTab [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ hasCategory(category: SkillCategory): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ setActivateType(activateType: ActivateType): Builder&lt;T&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ setCategory(category: SkillCategory): Builder&lt;T&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ setCreativeTab(tab: CreativeModeTab): Builder&lt;T&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ setRegistryName(registryName: ResourceLocation): Builder&lt;T&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ setResource(resource: Resource): Builder&lt;T&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Builder799340811[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Builder</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   slamMotions: Map&lt;WeaponCategory, BiFunction&lt;CapabilityItem, PlayerPatch&lt;?&gt;, StaticAnimation&gt;&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addSlamMotion(weaponCategory: WeaponCategory, function: BiFunction&lt;CapabilityItem, PlayerPatch&lt;?&gt;, StaticAnimation&gt;): Builder</TD></TR>
<TR><TD ALIGN="LEFT" >+ setActivateType(activateType: ActivateType): Builder</TD></TR>
<TR><TD ALIGN="LEFT" >+ setCategory(category: SkillCategory): Builder</TD></TR>
<TR><TD ALIGN="LEFT" >+ setCreativeTab(tab: CreativeModeTab): Builder</TD></TR>
<TR><TD ALIGN="LEFT" >+ setResource(resource: Resource): Builder</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Builder829161492[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Builder</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   animations: ResourceLocation[] [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ setActivateType(activateType: ActivateType): Builder</TD></TR>
<TR><TD ALIGN="LEFT" >+ setAnimations(animations: ResourceLocation...): Builder</TD></TR>
<TR><TD ALIGN="LEFT" >+ setCategory(category: SkillCategory): Builder</TD></TR>
<TR><TD ALIGN="LEFT" >+ setCreativeTab(tab: CreativeModeTab): Builder</TD></TR>
<TR><TD ALIGN="LEFT" >+ setResource(resource: Resource): Builder</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ChargingJumpSkill316467462[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ChargingJumpSkill</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ createChargeJumpBuilder(): Builder&lt;ChargingJumpSkill&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ onInitiate(container: SkillContainer)</TD></TR>
<TR><TD ALIGN="LEFT" >+ onRemoved(container: SkillContainer)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ConditionalWeaponInnateSkill1402578624[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ConditionalWeaponInnateSkill</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   attackAnimations: StaticAnimation[] [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   selector: Function&lt;ServerPlayerPatch, Integer&gt; [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ createConditionalWeaponInnateBuilder(): Builder</TD></TR>
<TR><TD ALIGN="LEFT" >+ executeOnServer(executer: ServerPlayerPatch, args: FriendlyByteBuf)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAnimationInCondition(executer: ServerPlayerPatch): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getTooltipOnItem(itemStack: ItemStack, cap: CapabilityItem, playerCap: PlayerPatch&lt;?&gt;): List&lt;Component&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ registerPropertiesToAnimation(): WeaponInnateSkill</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CounterSkill396813401[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CounterSkill</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ onInitiate(container: SkillContainer)</TD></TR>
<TR><TD ALIGN="LEFT" >+ onRemoved(container: SkillContainer)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DeathHarvestSkill1441897516[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DeathHarvestSkill</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ onInitiate(container: SkillContainer)</TD></TR>
<TR><TD ALIGN="LEFT" >+ onRemoved(container: SkillContainer)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DodgeSkill308138524[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DodgeSkill</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   animations: StaticAnimation[] [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ createDodgeBuilder(): Builder</TD></TR>
<TR><TD ALIGN="LEFT" >+ executeOnServer(executer: ServerPlayerPatch, args: FriendlyByteBuf)</TD></TR>
<TR><TD ALIGN="LEFT" >+ gatherArguments(executer: LocalPlayerPatch, controllEngine: ControllEngine): FriendlyByteBuf</TD></TR>
<TR><TD ALIGN="LEFT" >+ getExecutionPacket(executer: LocalPlayerPatch, args: FriendlyByteBuf): Object</TD></TR>
<TR><TD ALIGN="LEFT" >+ getTooltipArgsOfScreen(list: List&lt;Object&gt;): List&lt;Object&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ isExecutableState(executer: PlayerPatch&lt;?&gt;): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EmergencyEscapeSkill1441897516[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EmergencyEscapeSkill</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EnduranceSkill1441897516[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EnduranceSkill</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EviscerateSkill1402578624[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EviscerateSkill</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   first: StaticAnimation [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   second: StaticAnimation [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ executeOnServer(executer: ServerPlayerPatch, args: FriendlyByteBuf)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getTooltipOnItem(itemStack: ItemStack, cap: CapabilityItem, playerCap: PlayerPatch&lt;?&gt;): List&lt;Component&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ onInitiate(container: SkillContainer)</TD></TR>
<TR><TD ALIGN="LEFT" >+ onRemoved(container: SkillContainer)</TD></TR>
<TR><TD ALIGN="LEFT" >+ registerPropertiesToAnimation(): WeaponInnateSkill</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

FatalDrawSkill1402578624[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)FatalDrawSkill</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ executeOnServer(executer: ServerPlayerPatch, args: FriendlyByteBuf)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ForbiddenStrengthSkill1441897516[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ForbiddenStrengthSkill</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ onInitiate(container: SkillContainer)</TD></TR>
<TR><TD ALIGN="LEFT" >+ onRemoved(container: SkillContainer)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

GraspingSpireSkill1402578624[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)GraspingSpireSkill</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   first: AttackAnimation [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   second: AttackAnimation [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ executeOnServer(executer: ServerPlayerPatch, args: FriendlyByteBuf)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getTooltipOnItem(itemStack: ItemStack, cap: CapabilityItem, playerCap: PlayerPatch&lt;?&gt;): List&lt;Component&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ onInitiate(container: SkillContainer)</TD></TR>
<TR><TD ALIGN="LEFT" >+ onRemoved(container: SkillContainer)</TD></TR>
<TR><TD ALIGN="LEFT" >+ registerPropertiesToAnimation(): WeaponInnateSkill</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

GuardSkill311085290[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)GuardSkill</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   advancedGuardMotions: Map&lt;WeaponCategory, BiFunction&lt;CapabilityItem, PlayerPatch&lt;?&gt;, ?&gt;&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   guardBreakMotions: Map&lt;WeaponCategory, BiFunction&lt;CapabilityItem, PlayerPatch&lt;?&gt;, ?&gt;&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   guardMotions: Map&lt;WeaponCategory, BiFunction&lt;CapabilityItem, PlayerPatch&lt;?&gt;, ?&gt;&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   penalizer: float [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ createGuardBuilder(): Builder</TD></TR>
<TR><TD ALIGN="LEFT" >+ dealEvent(playerpatch: PlayerPatch&lt;?&gt;, event: Pre, advanced: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" >+ drawOnGui(gui: BattleModeGui, container: SkillContainer, matStackIn: PoseStack, x: float, y: float, scale: float, width: int, height: int)</TD></TR>
<TR><TD ALIGN="LEFT" ># getGuardMotion(playerpatch: PlayerPatch&lt;?&gt;, itemCapability: CapabilityItem, blockType: BlockType): StaticAnimation</TD></TR>
<TR><TD ALIGN="LEFT" ># getGuradMotionMap(blockType: BlockType): Map&lt;WeaponCategory, BiFunction&lt;CapabilityItem, PlayerPatch&lt;?&gt;, ?&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" ># getPenalizer(itemCapability: CapabilityItem): float</TD></TR>
<TR><TD ALIGN="LEFT" >+ getTooltipArgsOfScreen(list: List&lt;Object&gt;): List&lt;Object&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ guard(container: SkillContainer, itemCapability: CapabilityItem, event: Pre, knockback: float, impact: float, advanced: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" ># isBlockableSource(damageSource: DamageSource, advanced: boolean): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isExecutableState(executer: PlayerPatch&lt;?&gt;): boolean</TD></TR>
<TR><TD ALIGN="LEFT" ># isHoldingWeaponAvailable(playerpatch: PlayerPatch&lt;?&gt;, itemCapability: CapabilityItem, blockType: BlockType): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ onInitiate(container: SkillContainer)</TD></TR>
<TR><TD ALIGN="LEFT" >+ onRemoved(container: SkillContainer)</TD></TR>
<TR><TD ALIGN="LEFT" >+ shouldDraw(container: SkillContainer): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ updateContainer(container: SkillContainer)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

GuillotineAxeSkill1402578624[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)GuillotineAxeSkill</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ getTooltipOnItem(itemstack: ItemStack, cap: CapabilityItem, playerpatch: PlayerPatch&lt;?&gt;): List&lt;Component&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ onInitiate(container: SkillContainer)</TD></TR>
<TR><TD ALIGN="LEFT" >+ onRemoved(container: SkillContainer)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

HyperVitalitySkill1441897516[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)HyperVitalitySkill</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ drawOnGui(gui: BattleModeGui, container: SkillContainer, matStackIn: PoseStack, x: float, y: float, scale: float, width: int, height: int)</TD></TR>
<TR><TD ALIGN="LEFT" >+ onInitiate(container: SkillContainer)</TD></TR>
<TR><TD ALIGN="LEFT" >+ onRemoved(container: SkillContainer)</TD></TR>
<TR><TD ALIGN="LEFT" >+ shouldDraw(container: SkillContainer): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ImpactGuardSkill311085290[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ImpactGuardSkill</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   damageReducer: float [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   superiorPenalizer: float [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ createEnergizingGuardBuilder(): Builder</TD></TR>
<TR><TD ALIGN="LEFT" >+ dealEvent(playerpatch: PlayerPatch&lt;?&gt;, event: Pre, advanced: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getPenalizer(itemCap: CapabilityItem): float</TD></TR>
<TR><TD ALIGN="LEFT" >+ getTooltipArgsOfScreen(list: List&lt;Object&gt;): List&lt;Object&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ guard(container: SkillContainer, itemCapapbility: CapabilityItem, event: Pre, knockback: float, impact: float, advanced: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" >- isAdvancedBlockableDamageSource(damageSource: DamageSource): boolean</TD></TR>
<TR><TD ALIGN="LEFT" ># isBlockableSource(damageSource: DamageSource, advanced: boolean): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

KnockdownWakeupSkill308138524[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)KnockdownWakeupSkill</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ getExecutionPacket(executer: LocalPlayerPatch, args: FriendlyByteBuf): Object</TD></TR>
<TR><TD ALIGN="LEFT" >+ isExecutableState(executer: PlayerPatch&lt;?&gt;): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

LethalSliceSkill1402578624[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)LethalSliceSkill</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   doubleSwing: AttackAnimation [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   elbow: AttackAnimation [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   swing: AttackAnimation [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ executeOnServer(executer: ServerPlayerPatch, args: FriendlyByteBuf)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getTooltipOnItem(itemStack: ItemStack, cap: CapabilityItem, playerCap: PlayerPatch&lt;?&gt;): List&lt;Component&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ onInitiate(container: SkillContainer)</TD></TR>
<TR><TD ALIGN="LEFT" >+ onRemoved(container: SkillContainer)</TD></TR>
<TR><TD ALIGN="LEFT" >+ registerPropertiesToAnimation(): WeaponInnateSkill</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

LiechtenauerSkill1402578624[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)LiechtenauerSkill</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ canExecute(executer: PlayerPatch&lt;?&gt;): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ cancelOnServer(executer: ServerPlayerPatch, args: FriendlyByteBuf)</TD></TR>
<TR><TD ALIGN="LEFT" >+ executeOnServer(executer: ServerPlayerPatch, args: FriendlyByteBuf)</TD></TR>
<TR><TD ALIGN="LEFT" >- isBlockableSource(damageSource: DamageSource): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ onInitiate(container: SkillContainer)</TD></TR>
<TR><TD ALIGN="LEFT" >+ onRemoved(container: SkillContainer)</TD></TR>
<TR><TD ALIGN="LEFT" >+ registerPropertiesToAnimation(): WeaponInnateSkill</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

MeteorSlamSkill396813401[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)MeteorSlamSkill</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   minDistance: double [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   slamMotions: Map&lt;WeaponCategory, BiFunction&lt;CapabilityItem, PlayerPatch&lt;?&gt;, StaticAnimation&gt;&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ createMeteorSlamBuilder(): Builder</TD></TR>
<TR><TD ALIGN="LEFT" >+ getSlamPower(skillContainer: SkillContainer): float</TD></TR>
<TR><TD ALIGN="LEFT" >+ onInitiate(container: SkillContainer)</TD></TR>
<TR><TD ALIGN="LEFT" >+ onRemoved(container: SkillContainer)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ParryingSkill311085290[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ParryingSkill</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ createActiveGuardBuilder(): Builder</TD></TR>
<TR><TD ALIGN="LEFT" ># getGuardMotion(playerpatch: PlayerPatch&lt;?&gt;, itemCapability: CapabilityItem, blockType: BlockType): StaticAnimation</TD></TR>
<TR><TD ALIGN="LEFT" >+ getTooltipArgsOfScreen(list: List&lt;Object&gt;): List&lt;Object&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ guard(container: SkillContainer, itemCapability: CapabilityItem, event: Pre, knockback: float, impact: float, advanced: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" ># isBlockableSource(damageSource: DamageSource, advanced: boolean): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ onInitiate(container: SkillContainer)</TD></TR>
<TR><TD ALIGN="LEFT" >+ onRemoved(container: SkillContainer)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PassiveSkill1441897516[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PassiveSkill</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   passiveStats: Map&lt;Attribute, AttributeModifier&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ createPassiveBuilder(): Builder&lt;PassiveSkill&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ onInitiate(container: SkillContainer)</TD></TR>
<TR><TD ALIGN="LEFT" >+ onRemoved(container: SkillContainer)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SimpleWeaponInnateSkill1402578624[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SimpleWeaponInnateSkill</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   attackAnimation: StaticAnimation [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ createSimpleWeaponInnateBuilder(): Builder</TD></TR>
<TR><TD ALIGN="LEFT" >+ executeOnServer(executer: ServerPlayerPatch, args: FriendlyByteBuf)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getTooltipOnItem(itemStack: ItemStack, cap: CapabilityItem, playerCap: PlayerPatch&lt;?&gt;): List&lt;Component&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ registerPropertiesToAnimation(): WeaponInnateSkill</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Skill1729445901[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Skill</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   activateType: ActivateType [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   category: SkillCategory [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   consumption: float [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   maxDuration: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   maxStackSize: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   registryName: ResourceLocation [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   requiredXp: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   resource: Resource [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ canExecute(executer: PlayerPatch&lt;?&gt;): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ cancelOnClient(executer: LocalPlayerPatch, args: FriendlyByteBuf)</TD></TR>
<TR><TD ALIGN="LEFT" >+ cancelOnServer(executer: ServerPlayerPatch, args: FriendlyByteBuf)</TD></TR>
<TR><TD ALIGN="LEFT" >+ checkExecuteCondition(executer: PlayerPatch&lt;?&gt;): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ createBuilder(): Builder&lt;Skill&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ createIdentityBuilder(): Builder&lt;Skill&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ drawOnGui(gui: BattleModeGui, container: SkillContainer, matStackIn: PoseStack, x: float, y: float, scale: float, width: int, height: int)</TD></TR>
<TR><TD ALIGN="LEFT" >+ executeOnServer(executer: ServerPlayerPatch, args: FriendlyByteBuf)</TD></TR>
<TR><TD ALIGN="LEFT" >+ gatherArguments(executer: LocalPlayerPatch, controllEngine: ControllEngine): FriendlyByteBuf</TD></TR>
<TR><TD ALIGN="LEFT" >+ getCooldownRegenPerSecond(player: PlayerPatch&lt;?&gt;): float</TD></TR>
<TR><TD ALIGN="LEFT" >+ getExecutionPacket(executer: LocalPlayerPatch, args: FriendlyByteBuf): Object</TD></TR>
<TR><TD ALIGN="LEFT" >+ getTooltipArgsOfScreen(list: List&lt;Object&gt;): List&lt;Object&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getTooltipOnItem(itemStack: ItemStack, cap: CapabilityItem, playerpatch: PlayerPatch&lt;?&gt;): List&lt;Component&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ isExecutableState(executer: PlayerPatch&lt;?&gt;): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ onInitiate(container: SkillContainer)</TD></TR>
<TR><TD ALIGN="LEFT" >+ onRemoved(container: SkillContainer)</TD></TR>
<TR><TD ALIGN="LEFT" >+ onReset(container: SkillContainer)</TD></TR>
<TR><TD ALIGN="LEFT" >+ onScreen(playerpatch: LocalPlayerPatch, resolutionX: float, resolutionY: float)</TD></TR>
<TR><TD ALIGN="LEFT" >+ resourcePredicate(playerpatch: PlayerPatch&lt;?&gt;): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ shouldDeactivateAutomatically(executer: PlayerPatch&lt;?&gt;): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ shouldDraw(container: SkillContainer): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ updateContainer(container: SkillContainer)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SkillContainer1729445901[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SkillContainer</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   containingSkill: Skill [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   disabled: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   duration: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   executer: PlayerPatch&lt;?&gt; [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   isActivated: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   maxDuration: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   maxResource: float [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   prevDuration: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   prevResource: float [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   resource: float [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   skillDataManager: SkillDataManager [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   slot: SkillSlot [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   stack: int [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ activate()</TD></TR>
<TR><TD ALIGN="LEFT" >+ canExecute(executer: PlayerPatch&lt;?&gt;): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ deactivate()</TD></TR>
<TR><TD ALIGN="LEFT" >+ getDurationRatio(partialTicks: float): float</TD></TR>
<TR><TD ALIGN="LEFT" >+ getResource(partialTicks: float): float</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasSkill(skill: Skill): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ requestExecute(executer: ServerPlayerPatch, buf: FriendlyByteBuf): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ resetValues()</TD></TR>
<TR><TD ALIGN="LEFT" >+ sendExecuteRequest(executer: LocalPlayerPatch, packetStorage: Set&lt;Object&gt;): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ setSkill(skill: Skill): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ update()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SkillDataKey1965326925[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SkillDataKey&lt;T&gt;</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   id: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   valueType: ValueType&lt;T&gt; [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ createDataKey(valueType: ValueType&lt;V&gt;): SkillDataKey&lt;V&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findById(id: int): SkillDataKey&lt;?&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SkillDataManager1729445901[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SkillDataManager</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   data: Map&lt;Integer, Data&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   slotIndex: int [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ getDataValue(key: SkillDataKey&lt;T&gt;): T</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasData(key: SkillDataKey&lt;?&gt;): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ registerData(key: SkillDataKey&lt;T&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" >+ reset()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

StaminaPillagerSkill1441897516[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)StaminaPillagerSkill</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   regenRate: float [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ getTooltipArgsOfScreen(list: List&lt;Object&gt;): List&lt;Object&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ onInitiate(container: SkillContainer)</TD></TR>
<TR><TD ALIGN="LEFT" >+ onRemoved(container: SkillContainer)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

StepSkill308138524[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)StepSkill</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ getExecutionPacket(executer: LocalPlayerPatch, args: FriendlyByteBuf): Object</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SwordmasterSkill1441897516[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SwordmasterSkill</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   speedBonus: float [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ getTooltipArgsOfScreen(list: List&lt;Object&gt;): List&lt;Object&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ onInitiate(container: SkillContainer)</TD></TR>
<TR><TD ALIGN="LEFT" >+ onRemoved(container: SkillContainer)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TechnicianSkill1441897516[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TechnicianSkill</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ onInitiate(container: SkillContainer)</TD></TR>
<TR><TD ALIGN="LEFT" >+ onRemoved(container: SkillContainer)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ThunderPunishmentSkill1402578624[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ThunderPunishmentSkill</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ getTooltipOnItem(itemStack: ItemStack, cap: CapabilityItem, playerCap: PlayerPatch&lt;?&gt;): List&lt;Component&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ registerPropertiesToAnimation(): WeaponInnateSkill</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

WeaponInnateSkill1402578624[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)WeaponInnateSkill</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   properties: List&lt;Map&lt;AttackPhaseProperty&lt;?&gt;, Object&gt;&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addProperty(propertyKey: AttackPhaseProperty&lt;T&gt;, object: T): WeaponInnateSkill</TD></TR>
<TR><TD ALIGN="LEFT" >+ canExecute(executer: PlayerPatch&lt;?&gt;): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ createWeaponInnateBuilder(): Builder&lt;WeaponInnateSkill&gt;</TD></TR>
<TR><TD ALIGN="LEFT" ># generateTooltipforPhase(list: List&lt;Component&gt;, itemstack: ItemStack, cap: CapabilityItem, playerpatch: PlayerPatch&lt;?&gt;, propertyMap: Map&lt;AttackPhaseProperty&lt;?&gt;, Object&gt;, title: String)</TD></TR>
<TR><TD ALIGN="LEFT" ># getProperty(propertyKey: AttackPhaseProperty&lt;V&gt;, map: Map&lt;AttackPhaseProperty&lt;?&gt;, Object&gt;): Optional&lt;V&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getTooltipOnItem(itemstack: ItemStack, cap: CapabilityItem, playerCap: PlayerPatch&lt;?&gt;): List&lt;Component&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ newProperty(): WeaponInnateSkill</TD></TR>
<TR><TD ALIGN="LEFT" >+ registerPropertiesToAnimation(): WeaponInnateSkill</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];
} 

subgraph cluster_1328513577 { 
   	label=api
	labeljust=l
	fillcolor="#d8d8d8"
	style=filled
   
   ActionAnimation932445219[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ActionAnimation</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addProperty(propertyType: ActionAnimationProperty&lt;V&gt;, value: V): ActionAnimation</TD></TR>
<TR><TD ALIGN="LEFT" >+ begin(entitypatch: LivingEntityPatch&lt;?&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" ># getCoordVector(entitypatch: LivingEntityPatch&lt;?&gt;, animation: DynamicAnimation): Vec3</TD></TR>
<TR><TD ALIGN="LEFT" >+ linkTick(entitypatch: LivingEntityPatch&lt;?&gt;, linkAnimation: DynamicAnimation)</TD></TR>
<TR><TD ALIGN="LEFT" >+ modifyPose(pose: Pose, entitypatch: LivingEntityPatch&lt;?&gt;, time: float)</TD></TR>
<TR><TD ALIGN="LEFT" ># move(entitypatch: LivingEntityPatch&lt;?&gt;, animation: DynamicAnimation)</TD></TR>
<TR><TD ALIGN="LEFT" ># shouldMove(currentTime: float): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ tick(entitypatch: LivingEntityPatch&lt;?&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" ># validateMovement(entitypatch: LivingEntityPatch&lt;?&gt;, animation: DynamicAnimation): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ActionAnimationProperty1189771108[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ActionAnimationProperty&lt;T&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AimAnimation932445219[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AimAnimation</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+   lookDown: StaticAnimation [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   lookUp: StaticAnimation [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   lying: StaticAnimation [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addProperty(propertyType: StaticAnimationProperty&lt;V&gt;, value: V): StaticAnimation</TD></TR>
<TR><TD ALIGN="LEFT" >+ getPoseByTime(entitypatch: LivingEntityPatch&lt;?&gt;, time: float, partialTicks: float): Pose</TD></TR>
<TR><TD ALIGN="LEFT" >+ loadAnimation(resourceManager: ResourceManager)</TD></TR>
<TR><TD ALIGN="LEFT" >+ modifyPose(pose: Pose, entitypatch: LivingEntityPatch&lt;?&gt;, time: float)</TD></TR>
<TR><TD ALIGN="LEFT" >+ tick(entitypatch: LivingEntityPatch&lt;?&gt;)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AnimationEvent1055311857[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AnimationEvent</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   event: AnimationEventConsumer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   executionSide: Side [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   params: Object[] [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ create(event: AnimationEventConsumer, isRemote: Side): AnimationEvent</TD></TR>
<TR><TD ALIGN="LEFT" >+ executeIfRightSide(entitypatch: LivingEntityPatch&lt;?&gt;, animation: StaticAnimation)</TD></TR>
<TR><TD ALIGN="LEFT" >+ params(params: Object...): AnimationEvent</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AnimationManager940194734[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AnimationManager</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   animationById: Map&lt;Integer, Map&lt;Integer, StaticAnimation&gt;&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   animationByName: Map&lt;ResourceLocation, StaticAnimation&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   counter: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   modid: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   namespaceHash: int [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># apply(objectIn: Map&lt;Integer, Map&lt;Integer, StaticAnimation&gt;&gt;, resourceManager: ResourceManager, profilerIn: ProfilerFiller)</TD></TR>
<TR><TD ALIGN="LEFT" >+ findAnimationById(namespaceId: int, animationId: int): StaticAnimation</TD></TR>
<TR><TD ALIGN="LEFT" >+ findAnimationByPath(resourceLocation: String): StaticAnimation</TD></TR>
<TR><TD ALIGN="LEFT" >+ loadAnimationsOnServer()</TD></TR>
<TR><TD ALIGN="LEFT" ># prepare(resourceManager: ResourceManager, profilerIn: ProfilerFiller): Map&lt;Integer, Map&lt;Integer, StaticAnimation&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ registerAnimations()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AnimationPlayer940194734[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AnimationPlayer</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   doNotResetNext: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   elapsedTime: float [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   isEnd: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   play: DynamicAnimation [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   prevElapsedTime: float [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   reversed: boolean [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ getCurrentPose(entitypatch: LivingEntityPatch&lt;?&gt;, partialTicks: float): Pose</TD></TR>
<TR><TD ALIGN="LEFT" >+ markToDoNotReset()</TD></TR>
<TR><TD ALIGN="LEFT" >+ reset()</TD></TR>
<TR><TD ALIGN="LEFT" >+ synchronize(animationPlayer: AnimationPlayer)</TD></TR>
<TR><TD ALIGN="LEFT" >+ tick(entitypatch: LivingEntityPatch&lt;?&gt;)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AnimationProperty1055311857[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AnimationProperty&lt;T&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Animator940194734[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Animator</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   entitypatch: LivingEntityPatch&lt;?&gt; [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   livingAnimations: Map&lt;LivingMotion, StaticAnimation&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addLivingAnimation(livingMotion: LivingMotion, animation: StaticAnimation)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getLivingAnimation(livingMotion: LivingMotion, defaultGetter: StaticAnimation): StaticAnimation</TD></TR>
<TR><TD ALIGN="LEFT" >+ getPlayerFor(playingAnimation: DynamicAnimation): AnimationPlayer</TD></TR>
<TR><TD ALIGN="LEFT" >+ init()</TD></TR>
<TR><TD ALIGN="LEFT" >+ playAnimation(nextAnimation: StaticAnimation, convertTimeModifier: float)</TD></TR>
<TR><TD ALIGN="LEFT" >+ playAnimation(namespaceId: int, id: int, convertTimeModifier: float)</TD></TR>
<TR><TD ALIGN="LEFT" >+ playAnimationInstantly(nextAnimation: StaticAnimation)</TD></TR>
<TR><TD ALIGN="LEFT" >+ playAnimationInstantly(namespaceId: int, id: int)</TD></TR>
<TR><TD ALIGN="LEFT" >+ playDeathAnimation()</TD></TR>
<TR><TD ALIGN="LEFT" >+ poseTick()</TD></TR>
<TR><TD ALIGN="LEFT" >+ reserveAnimation(nextAnimation: StaticAnimation)</TD></TR>
<TR><TD ALIGN="LEFT" >+ resetMotions()</TD></TR>
<TR><TD ALIGN="LEFT" >+ tick()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Armature706790665[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Armature</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   actionAnimationCoord: TransformSheet [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   currentPose: Pose [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   jointById: Map&lt;Integer, Joint&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   jointByName: Map&lt;String, Joint&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   jointNumber: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   pathIndexMap: Map&lt;String, Integer&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   prevPose: Pose [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   rootJoint: Joint [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >- copyHierarchy(joint: Joint, oldToNewJoint: Map&lt;String, Joint&gt;): Joint</TD></TR>
<TR><TD ALIGN="LEFT" >+ deepCopy(): Armature</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAllPoseTransform(partialTicks: float): OpenMatrix4f[]</TD></TR>
<TR><TD ALIGN="LEFT" >- getBindedJointTransformByIndexInternal(pose: Pose, joint: Joint, parentTransform: OpenMatrix4f, pathIndex: int): OpenMatrix4f</TD></TR>
<TR><TD ALIGN="LEFT" >+ getBindedTransformByJointIndex(pose: Pose, pathIndex: int): OpenMatrix4f</TD></TR>
<TR><TD ALIGN="LEFT" >+ getBindedTransformFor(pose: Pose, joint: Joint): OpenMatrix4f</TD></TR>
<TR><TD ALIGN="LEFT" >+ getBindedTransformForCurrentPose(joint: Joint): OpenMatrix4f</TD></TR>
<TR><TD ALIGN="LEFT" ># getOrLogException(jointMap: Map&lt;String, Joint&gt;, name: String): Joint</TD></TR>
<TR><TD ALIGN="LEFT" >+ getPose(partialTicks: float): Pose</TD></TR>
<TR><TD ALIGN="LEFT" >- getPoseTransform(joint: Joint, parentTransform: OpenMatrix4f, pose: Pose, jointMatrices: OpenMatrix4f[])</TD></TR>
<TR><TD ALIGN="LEFT" >+ initializeTransform()</TD></TR>
<TR><TD ALIGN="LEFT" >+ searchJointById(id: int): Joint</TD></TR>
<TR><TD ALIGN="LEFT" >+ searchJointByName(name: String): Joint</TD></TR>
<TR><TD ALIGN="LEFT" >+ searchPathIndex(joint: String): int</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AttackAnimation932445219[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AttackAnimation</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+   phases: Phase[] [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addProperty(propertyType: AttackAnimationProperty&lt;V&gt;, value: V): AttackAnimation</TD></TR>
<TR><TD ALIGN="LEFT" >+ addProperty(propertyType: AttackPhaseProperty&lt;V&gt;, value: V): AttackAnimation</TD></TR>
<TR><TD ALIGN="LEFT" >+ addProperty(propertyType: AttackPhaseProperty&lt;V&gt;, value: V, index: int): AttackAnimation</TD></TR>
<TR><TD ALIGN="LEFT" ># attackTick(entitypatch: LivingEntityPatch&lt;?&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" >+ begin(entitypatch: LivingEntityPatch&lt;?&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" ># bindPhaseState(phase: Phase)</TD></TR>
<TR><TD ALIGN="LEFT" >+ changeCollider(newCollider: Collider, index: int)</TD></TR>
<TR><TD ALIGN="LEFT" >+ end(entitypatch: LivingEntityPatch&lt;?&gt;, isEnd: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getCollider(entitypatch: LivingEntityPatch&lt;?&gt;, elapsedTime: float): Collider</TD></TR>
<TR><TD ALIGN="LEFT" >+ getEpicFightDamageSource(entitypatch: LivingEntityPatch&lt;?&gt;, target: Entity, phase: Phase): EpicFightDamageSource</TD></TR>
<TR><TD ALIGN="LEFT" ># getHitSound(entitypatch: LivingEntityPatch&lt;?&gt;, phase: Phase): SoundEvent</TD></TR>
<TR><TD ALIGN="LEFT" >+ getJointOn(elapsedTime: float): Joint</TD></TR>
<TR><TD ALIGN="LEFT" ># getMaxStrikes(entitypatch: LivingEntityPatch&lt;?&gt;, phase: Phase): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getPhaseByTime(elapsedTime: float): Phase</TD></TR>
<TR><TD ALIGN="LEFT" >+ getPlaySpeed(entitypatch: LivingEntityPatch&lt;?&gt;): float</TD></TR>
<TR><TD ALIGN="LEFT" ># getSwingSound(entitypatch: LivingEntityPatch&lt;?&gt;, phase: Phase): SoundEvent</TD></TR>
<TR><TD ALIGN="LEFT" >+ getTrueEntity(entity: Entity): LivingEntity</TD></TR>
<TR><TD ALIGN="LEFT" ># hurtCollidingEntities(entitypatch: LivingEntityPatch&lt;?&gt;, prevElapsedTime: float, elapsedTime: float, prevState: EntityState, state: EntityState, phase: Phase)</TD></TR>
<TR><TD ALIGN="LEFT" >+ linkTick(entitypatch: LivingEntityPatch&lt;?&gt;, linkAnimation: DynamicAnimation)</TD></TR>
<TR><TD ALIGN="LEFT" >+ renderDebugging(poseStack: PoseStack, buffer: MultiBufferSource, entitypatch: LivingEntityPatch&lt;?&gt;, playTime: float, partialTicks: float)</TD></TR>
<TR><TD ALIGN="LEFT" ># spawnHitParticle(world: ServerLevel, attacker: LivingEntityPatch&lt;?&gt;, hit: Entity, phase: Phase)</TD></TR>
<TR><TD ALIGN="LEFT" >+ tick(entitypatch: LivingEntityPatch&lt;?&gt;)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AttackAnimationProperty1189771108[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AttackAnimationProperty&lt;T&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AttackPhaseProperty1189771108[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AttackPhaseProperty&lt;T&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AttackResult699248513[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AttackResult</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+   damage: float [1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   resultType: ResultType [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ blocked(damage: float): AttackResult</TD></TR>
<TR><TD ALIGN="LEFT" >+ missed(damage: float): AttackResult</TD></TR>
<TR><TD ALIGN="LEFT" >+ of(resultType: ResultType, damage: float): AttackResult</TD></TR>
<TR><TD ALIGN="LEFT" >+ success(damage: float): AttackResult</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BasicAttackAnimation932445219[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BasicAttackAnimation</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># bindPhaseState(phase: Phase)</TD></TR>
<TR><TD ALIGN="LEFT" ># getCoordVector(entitypatch: LivingEntityPatch&lt;?&gt;, dynamicAnimation: DynamicAnimation): Vec3</TD></TR>
<TR><TD ALIGN="LEFT" ># onLoaded()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Blueprint1184302865[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Blueprint</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   currentState: StatesInTime [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   timePairs: Set&lt;StatesInTime&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addConditionalState(metadata: int, factor: StateFactor&lt;T&gt;, val: T): Blueprint</TD></TR>
<TR><TD ALIGN="LEFT" >+ addState(factor: StateFactor&lt;T&gt;, val: T): Blueprint</TD></TR>
<TR><TD ALIGN="LEFT" >+ addStateIfNotExist(factor: StateFactor&lt;T&gt;, val: T): Blueprint</TD></TR>
<TR><TD ALIGN="LEFT" >+ addStateRemoveOld(factor: StateFactor&lt;T&gt;, val: T): Blueprint</TD></TR>
<TR><TD ALIGN="LEFT" >+ clear(): Blueprint</TD></TR>
<TR><TD ALIGN="LEFT" >+ newConditionalTimePair(condition: Function&lt;LivingEntityPatch&lt;?&gt;, Integer&gt;, start: float, end: float): Blueprint</TD></TR>
<TR><TD ALIGN="LEFT" >+ newTimePair(start: float, end: float): Blueprint</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Builder32278506[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Builder</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   bCol: float [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   end: Vec3 [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   endTime: float [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   fadeTime: float [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   gCol: float [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   hand: InteractionHand [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   interpolateCount: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   joint: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   particle: SimpleParticleType [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   rCol: float [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   start: Vec3 [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   startTime: float [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   texturePath: ResourceLocation [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   trailLifetime: int [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ b(bCol: float): Builder</TD></TR>
<TR><TD ALIGN="LEFT" >+ create(): TrailInfo</TD></TR>
<TR><TD ALIGN="LEFT" >+ endPos(end: Vec3): Builder</TD></TR>
<TR><TD ALIGN="LEFT" >+ fadeTime(fadeTime: float): Builder</TD></TR>
<TR><TD ALIGN="LEFT" >+ g(gCol: float): Builder</TD></TR>
<TR><TD ALIGN="LEFT" >+ interpolations(interpolateCount: int): Builder</TD></TR>
<TR><TD ALIGN="LEFT" >+ itemSkinHand(itemSkinHand: InteractionHand): Builder</TD></TR>
<TR><TD ALIGN="LEFT" >+ joint(joint: String): Builder</TD></TR>
<TR><TD ALIGN="LEFT" >+ lifetime(trailLifetime: int): Builder</TD></TR>
<TR><TD ALIGN="LEFT" >+ r(rCol: float): Builder</TD></TR>
<TR><TD ALIGN="LEFT" >+ startPos(start: Vec3): Builder</TD></TR>
<TR><TD ALIGN="LEFT" >+ texture(texturePath: String): Builder</TD></TR>
<TR><TD ALIGN="LEFT" >+ texture(texturePath: ResourceLocation): Builder</TD></TR>
<TR><TD ALIGN="LEFT" >+ time(startTime: float, endTime: float): Builder</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(particle: SimpleParticleType): Builder</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ClientAnimator7285613[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ClientAnimator</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+   baseLayer: BaseLayer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   compositeLivingAnimations: Map&lt;LivingMotion, StaticAnimation&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   currentCompositeMotion: LivingMotion [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   currentMotion: LivingMotion [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   defaultCompositeLivingAnimations: Map&lt;LivingMotion, StaticAnimation&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   defaultLivingAnimations: Map&lt;LivingMotion, StaticAnimation&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># addBaseLivingAnimation(livingMotion: LivingMotion, animation: StaticAnimation)</TD></TR>
<TR><TD ALIGN="LEFT" ># addCompositeLivingAnimation(livingMotion: LivingMotion, animation: StaticAnimation)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addLivingAnimation(livingMotion: LivingMotion, animation: StaticAnimation)</TD></TR>
<TR><TD ALIGN="LEFT" >+ applyBindModifier(result: Pose, joint: Joint, poses: Map&lt;Priority, Pair&lt;DynamicAnimation, Pose&gt;&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" >+ compareCompositeMotion(motion: LivingMotion): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ compareMotion(motion: LivingMotion): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAnimator(entitypatch: LivingEntityPatch&lt;?&gt;): Animator</TD></TR>
<TR><TD ALIGN="LEFT" >+ getComposedLayerPose(partialTicks: float): Pose</TD></TR>
<TR><TD ALIGN="LEFT" >+ getComposedLayerPoseBelow(priorityLimit: Priority, partialTicks: float): Pose</TD></TR>
<TR><TD ALIGN="LEFT" >+ getCompositeLayer(priority: Priority): Layer</TD></TR>
<TR><TD ALIGN="LEFT" >+ getCompositeLivingMotion(motion: LivingMotion): StaticAnimation</TD></TR>
<TR><TD ALIGN="LEFT" >+ getLivingMotion(motion: LivingMotion): StaticAnimation</TD></TR>
<TR><TD ALIGN="LEFT" >+ getPlayerFor(playingAnimation: DynamicAnimation): AnimationPlayer</TD></TR>
<TR><TD ALIGN="LEFT" >+ init()</TD></TR>
<TR><TD ALIGN="LEFT" >+ playAnimation(nextAnimation: StaticAnimation, convertTimeModifier: float)</TD></TR>
<TR><TD ALIGN="LEFT" >+ playAnimationInstantly(nextAnimation: StaticAnimation)</TD></TR>
<TR><TD ALIGN="LEFT" >+ playDeathAnimation()</TD></TR>
<TR><TD ALIGN="LEFT" >+ playReboundAnimation()</TD></TR>
<TR><TD ALIGN="LEFT" >+ poseTick()</TD></TR>
<TR><TD ALIGN="LEFT" >+ reserveAnimation(nextAnimation: StaticAnimation)</TD></TR>
<TR><TD ALIGN="LEFT" >+ resetCompositeMotion()</TD></TR>
<TR><TD ALIGN="LEFT" >+ resetMotion()</TD></TR>
<TR><TD ALIGN="LEFT" >+ resetMotions()</TD></TR>
<TR><TD ALIGN="LEFT" >+ tick()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DodgeAnimation932445219[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DodgeAnimation</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ end(entitypatch: LivingEntityPatch&lt;?&gt;, isEnd: boolean)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DynamicAnimation932445219[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DynamicAnimation</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   convertTime: float [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   isRepeat: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   jointTransforms: Map&lt;String, TransformSheet&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   totalTime: float [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addSheet(jointName: String, sheet: TransformSheet)</TD></TR>
<TR><TD ALIGN="LEFT" >+ begin(entitypatch: LivingEntityPatch&lt;?&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" >+ canBePlayedReverse(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ end(entitypatch: LivingEntityPatch&lt;?&gt;, isEnd: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getBindModifier(entitypatch: LivingEntityPatch&lt;?&gt;, joint: String): BindModifier</TD></TR>
<TR><TD ALIGN="LEFT" >+ getPlaySpeed(entitypatch: LivingEntityPatch&lt;?&gt;): float</TD></TR>
<TR><TD ALIGN="LEFT" >+ getPoseByTime(entitypatch: LivingEntityPatch&lt;?&gt;, time: float, partialTicks: float): Pose</TD></TR>
<TR><TD ALIGN="LEFT" >+ getProperty(propertyType: AnimationProperty&lt;V&gt;): Optional&lt;V&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getSingleState(stateFactor: StateFactor&lt;T&gt;, entitypatch: LivingEntityPatch&lt;?&gt;, time: float): T</TD></TR>
<TR><TD ALIGN="LEFT" >+ getState(entitypatch: LivingEntityPatch&lt;?&gt;, time: float): EntityState</TD></TR>
<TR><TD ALIGN="LEFT" >+ isJointEnabled(entitypatch: LivingEntityPatch&lt;?&gt;, joint: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ linkTick(entitypatch: LivingEntityPatch&lt;?&gt;, linkAnimation: DynamicAnimation)</TD></TR>
<TR><TD ALIGN="LEFT" >+ modifyPose(pose: Pose, entitypatch: LivingEntityPatch&lt;?&gt;, time: float)</TD></TR>
<TR><TD ALIGN="LEFT" >+ putOnPlayer(player: AnimationPlayer)</TD></TR>
<TR><TD ALIGN="LEFT" >+ renderDebugging(poseStack: PoseStack, buffer: MultiBufferSource, entitypatch: LivingEntityPatch&lt;?&gt;, playTime: float, partialTicks: float)</TD></TR>
<TR><TD ALIGN="LEFT" >+ tick(entitypatch: LivingEntityPatch&lt;?&gt;)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EnderDragonActionAnimation1898981842[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EnderDragonActionAnimation</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   ikInfos: IKInfo[] [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   tipPointTransforms: Map&lt;String, TransformSheet&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ begin(entitypatch: LivingEntityPatch&lt;?&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getPoseByTime(entitypatch: LivingEntityPatch&lt;?&gt;, time: float, partialTicks: float): Pose</TD></TR>
<TR><TD ALIGN="LEFT" >+ loadAnimation(resourceManager: ResourceManager)</TD></TR>
<TR><TD ALIGN="LEFT" >+ renderDebugging(poseStack: PoseStack, buffer: MultiBufferSource, entitypatch: LivingEntityPatch&lt;?&gt;, playTime: float, partialTicks: float)</TD></TR>
<TR><TD ALIGN="LEFT" >+ tick(entitypatch: LivingEntityPatch&lt;?&gt;)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EnderDragonAttackAnimation1898981842[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EnderDragonAttackAnimation</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   ikInfos: IKInfo[] [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   tipPointTransform: Map&lt;String, TransformSheet&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ begin(entitypatch: LivingEntityPatch&lt;?&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getPoseByTime(entitypatch: LivingEntityPatch&lt;?&gt;, time: float, partialTicks: float): Pose</TD></TR>
<TR><TD ALIGN="LEFT" >+ loadAnimation(resourceManager: ResourceManager)</TD></TR>
<TR><TD ALIGN="LEFT" >+ renderDebugging(poseStack: PoseStack, buffer: MultiBufferSource, entitypatch: LivingEntityPatch&lt;?&gt;, playTime: float, partialTicks: float)</TD></TR>
<TR><TD ALIGN="LEFT" >+ tick(entitypatch: LivingEntityPatch&lt;?&gt;)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EnderDragonDeathAnimation1898981842[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EnderDragonDeathAnimation</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ loadAnimation(resourceManager: ResourceManager)</TD></TR>
<TR><TD ALIGN="LEFT" >+ modifyPose(pose: Pose, entitypatch: LivingEntityPatch&lt;?&gt;, time: float)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EnderDragonDynamicActionAnimation1898981842[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EnderDragonDynamicActionAnimation</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   ikInfos: IKInfo[] [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   tipPointTransform: Map&lt;String, TransformSheet&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ begin(entitypatch: LivingEntityPatch&lt;?&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getPoseByTime(entitypatch: LivingEntityPatch&lt;?&gt;, time: float, partialTicks: float): Pose</TD></TR>
<TR><TD ALIGN="LEFT" >+ loadAnimation(resourceManager: ResourceManager)</TD></TR>
<TR><TD ALIGN="LEFT" >+ renderDebugging(poseStack: PoseStack, buffer: MultiBufferSource, entitypatch: LivingEntityPatch&lt;?&gt;, playTime: float, partialTicks: float)</TD></TR>
<TR><TD ALIGN="LEFT" >+ tick(entitypatch: LivingEntityPatch&lt;?&gt;)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EnderDraonWalkAnimation1898981842[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EnderDraonWalkAnimation</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   ikInfos: IKInfo[] [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   tipPointTransform: Map&lt;String, TransformSheet&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ begin(entitypatch: LivingEntityPatch&lt;?&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getPoseByTime(entitypatch: LivingEntityPatch&lt;?&gt;, time: float, partialTicks: float): Pose</TD></TR>
<TR><TD ALIGN="LEFT" >+ loadAnimation(resourceManager: ResourceManager)</TD></TR>
<TR><TD ALIGN="LEFT" >+ renderDebugging(poseStack: PoseStack, buffer: MultiBufferSource, entitypatch: LivingEntityPatch&lt;?&gt;, playTime: float, partialTicks: float)</TD></TR>
<TR><TD ALIGN="LEFT" >+ tick(entitypatch: LivingEntityPatch&lt;?&gt;)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EntityState932445219[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EntityState</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   attackResult: Function&lt;DamageSource, ResultType&gt; [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   attacking: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   canBasicAttack: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   canSkillExecution: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   hurt: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   inaction: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   knockDown: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   movementLocked: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   phaseLevel: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   turningLocked: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   unsafeToCounter: boolean [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ attackResult(damagesource: DamageSource): ResultType</TD></TR>
<TR><TD ALIGN="LEFT" >+ attacking(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ canBasicAttack(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ canUseSkill(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hurt(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ inaction(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ knockDown(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ movementLocked(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ turningLocked(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ unsafeToCounter(): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ExtendableEnumManager699248513[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ExtendableEnumManager&lt;T&gt;</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   enumMapByName: Map&lt;String, T&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   enumMapByOrdinal: Map&lt;Integer, T&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   lastOrdinal: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   namespace: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ assign(value: T): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ get(id: int): T</TD></TR>
<TR><TD ALIGN="LEFT" >+ get(name: String): T</TD></TR>
<TR><TD ALIGN="LEFT" >+ loadPreemptive(targetClss: Class&lt;?&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" >+ toTranslated(e: ExtendableEnum): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ universalValues(): Collection&lt;T&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

FABRIK1408080105[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)FABRIK</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   armature: Armature [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   chains: List&lt;Chain&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   pose: Pose [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   startPos: Vec3f [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   target: Vec3f [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addChain(pose: Pose, startJoint: Joint, endJoint: Joint)</TD></TR>
<TR><TD ALIGN="LEFT" >- addChainInternal(pose: Pose, parentTransform: OpenMatrix4f, joint: Joint, pathIndex: int)</TD></TR>
<TR><TD ALIGN="LEFT" >- backward()</TD></TR>
<TR><TD ALIGN="LEFT" >- forward()</TD></TR>
<TR><TD ALIGN="LEFT" >+ run(target: Vec3f, iteration: int)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Formulars1408080105[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Formulars</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ getAttackSpeedPenalty(weight: float, weaponAttackSpeed: float, entitypatch: EntityPatch&lt;?&gt;): float</TD></TR>
<TR><TD ALIGN="LEFT" >+ getStaminarConsumePenalty(weight: double, originalConsumption: float, entitypatch: EntityPatch&lt;?&gt;): float</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

IKInfo1898981842[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)IKInfo</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   clipAnimation: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   endFrame: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   endJoint: Joint [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   endpos: Vec3f [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   ikPose: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   opponentJoint: Joint [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   pathToEndJoint: List&lt;String&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   rayLeastHeight: float [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   startFrame: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   startJoint: Joint [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   startToEnd: Vec3f [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   startpos: Vec3f [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   touchingGround: boolean[] [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ make(startJoint: Joint, endJoint: Joint, opponentJoint: Joint, clipFrame: Pair&lt;Integer, Integer&gt;, rayLeastHeight: float, ikFrame: int, touchGround: boolean[]): IKInfo</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InvincibleAnimation932445219[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InvincibleAnimation</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ItemSkin1236888648[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ItemSkin</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+   trailInfo: TrailInfo [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ deserialize(element: JsonElement): ItemSkin</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ItemSkins1236888648[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ItemSkins</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># apply(objectIn: Map&lt;ResourceLocation, JsonElement&gt;, resourceManager: ResourceManager, profileFiller: ProfilerFiller)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getItemSkin(item: Item): ItemSkin</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Joint940194734[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Joint</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   jointId: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   jointName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   localTransform: OpenMatrix4f [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   poseTransform: OpenMatrix4f [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   subJoints: List&lt;Joint&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   toOrigin: OpenMatrix4f [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addSubJoint(joints: Joint...)</TD></TR>
<TR><TD ALIGN="LEFT" >- getAllJoints(list: List&lt;Joint&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" >+ initOriginTransform(parentTransform: OpenMatrix4f)</TD></TR>
<TR><TD ALIGN="LEFT" >+ resetPoseTransforms()</TD></TR>
<TR><TD ALIGN="LEFT" >+ searchPath(path: String, joint: String): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

JointMask56848592[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)JointMask</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   bindModifier: BindModifier [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   jointName: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ of(jointName: String, bindModifier: BindModifier): JointMask</TD></TR>
<TR><TD ALIGN="LEFT" >+ of(jointName: String): JointMask</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

JointMaskEntry56848592[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)JointMaskEntry</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   defaultMask: List&lt;JointMask&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   masks: Map&lt;LivingMotion, List&lt;JointMask&gt;&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ builder(): Builder</TD></TR>
<TR><TD ALIGN="LEFT" >+ getMask(livingmotion: LivingMotion): List&lt;JointMask&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ isMasked(livingmotion: LivingMotion, jointName: String): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

JointTransform940194734[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)JointTransform</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   entries: Map&lt;String, TransformEntry&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   rotation: Quaternion [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   scale: Vec3f [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   translation: Vec3f [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ copy(): JointTransform</TD></TR>
<TR><TD ALIGN="LEFT" >+ copyFrom(jt: JointTransform): JointTransform</TD></TR>
<TR><TD ALIGN="LEFT" >+ empty(): JointTransform</TD></TR>
<TR><TD ALIGN="LEFT" >+ fromMatrix(matrix: OpenMatrix4f): JointTransform</TD></TR>
<TR><TD ALIGN="LEFT" >+ fromMatrixNoScale(matrix: OpenMatrix4f): JointTransform</TD></TR>
<TR><TD ALIGN="LEFT" >+ frontResult(transform: JointTransform, multiplyFunction: MatrixOperation)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAnimationBindedMatrix(joint: Joint, parentTransform: OpenMatrix4f): OpenMatrix4f</TD></TR>
<TR><TD ALIGN="LEFT" >+ getRotation(quat: Quaternion): JointTransform</TD></TR>
<TR><TD ALIGN="LEFT" >+ getScale(vec: Vec3f): JointTransform</TD></TR>
<TR><TD ALIGN="LEFT" >+ getTranslation(vec: Vec3f): JointTransform</TD></TR>
<TR><TD ALIGN="LEFT" >+ interpolate(prev: JointTransform, next: JointTransform, progression: float): JointTransform</TD></TR>
<TR><TD ALIGN="LEFT" >- interpolateSimple(prev: JointTransform, next: JointTransform, progression: float): JointTransform</TD></TR>
<TR><TD ALIGN="LEFT" >+ jointLocal(transform: JointTransform, multiplyFunction: MatrixOperation)</TD></TR>
<TR><TD ALIGN="LEFT" >+ overwriteRotation(transform: JointTransform)</TD></TR>
<TR><TD ALIGN="LEFT" >+ parent(transform: JointTransform, multiplyFunction: MatrixOperation)</TD></TR>
<TR><TD ALIGN="LEFT" >+ rotation(): Quaternion</TD></TR>
<TR><TD ALIGN="LEFT" >+ scale(): Vec3f</TD></TR>
<TR><TD ALIGN="LEFT" >+ toMatrix(): OpenMatrix4f</TD></TR>
<TR><TD ALIGN="LEFT" >+ translation(): Vec3f</TD></TR>
<TR><TD ALIGN="LEFT" >+ translationRotation(vec: Vec3f, quat: Quaternion): JointTransform</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

JsonModelLoader706790665[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)JsonModelLoader</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   resourceManager: ResourceManager [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   rootJson: JsonObject [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ getJoint(object: JsonObject, nameAsVertexGroups: JsonArray, jointMap: Map&lt;String, Joint&gt;, start: boolean): Joint</TD></TR>
<TR><TD ALIGN="LEFT" >- getTransformSheet(times: float[], trasnformMatrix: float[], invLocalTransform: OpenMatrix4f, correct: boolean): TransformSheet</TD></TR>
<TR><TD ALIGN="LEFT" >+ loadAnimatedMesh(constructor: MeshContructor&lt;AnimatedVertexIndicator, T&gt;): T</TD></TR>
<TR><TD ALIGN="LEFT" >+ loadArmature(constructor: ArmatureContructor&lt;T&gt;): T</TD></TR>
<TR><TD ALIGN="LEFT" >+ loadMesh(constructor: MeshContructor&lt;VertexIndicator, T&gt;): T</TD></TR>
<TR><TD ALIGN="LEFT" >+ loadStaticAnimation(animation: StaticAnimation)</TD></TR>
<TR><TD ALIGN="LEFT" >+ loadStaticAnimationBothSide(animation: StaticAnimation)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Keyframe940194734[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Keyframe</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   timeStamp: float [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   transform: JointTransform [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ copyFrom(target: Keyframe)</TD></TR>
<TR><TD ALIGN="LEFT" >+ time(): float</TD></TR>
<TR><TD ALIGN="LEFT" >+ transform(): JointTransform</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Layer7285613[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Layer</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+   animationPlayer: AnimationPlayer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   concurrentLinkAnimationStorage: ConcurrentLinkAnimation [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   disabled: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   layerOffAnimation: LayerOffAnimation [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   linkAnimationStorage: LinkAnimation [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   nextAnimation: DynamicAnimation [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   paused: boolean [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ off(entitypatch: LivingEntityPatch&lt;?&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" >+ pause()</TD></TR>
<TR><TD ALIGN="LEFT" >+ playAnimation(nextAnimation: StaticAnimation, entitypatch: LivingEntityPatch&lt;?&gt;, convertTimeModifier: float)</TD></TR>
<TR><TD ALIGN="LEFT" ># playAnimationConcurrent(nextAnimation: StaticAnimation, entitypatch: LivingEntityPatch&lt;?&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" >+ playAnimationInstant(nextAnimation: DynamicAnimation, entitypatch: LivingEntityPatch&lt;?&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" >+ resume()</TD></TR>
<TR><TD ALIGN="LEFT" >+ update(entitypatch: LivingEntityPatch&lt;?&gt;)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

LongHitAnimation932445219[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)LongHitAnimation</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

MainFrameAnimation932445219[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)MainFrameAnimation</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ begin(entitypatch: LivingEntityPatch&lt;?&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" >+ tick(entitypatch: LivingEntityPatch&lt;?&gt;)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

MathUtils1408080105[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)MathUtils</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ bezierCurve(t: double): double</TD></TR>
<TR><TD ALIGN="LEFT" >- fastInvSqrt(number: float): float</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAngleBetween(a: Vec3f, b: Vec3f): double</TD></TR>
<TR><TD ALIGN="LEFT" >+ getModelMatrixIntegral(prevPosX: float, posX: float, prevPosY: float, posY: float, prevPosZ: float, posZ: float, prevPitch: float, pitch: float, prevYaw: float, yaw: float, partialTick: float, scaleX: float, scaleY: float, scaleZ: float): OpenMatrix4f</TD></TR>
<TR><TD ALIGN="LEFT" >- getQuaternionFromMatrix(mat: OpenMatrix4f): Quaternion</TD></TR>
<TR><TD ALIGN="LEFT" >- getScaleVectorFromMatrix(mat: OpenMatrix4f): Vector3f</TD></TR>
<TR><TD ALIGN="LEFT" >+ getVectorForRotation(pitch: float, yaw: float): Vec3</TD></TR>
<TR><TD ALIGN="LEFT" >+ getXRotOfVector(vec: Vec3): double</TD></TR>
<TR><TD ALIGN="LEFT" >+ getYRotOfVector(vec: Vec3): double</TD></TR>
<TR><TD ALIGN="LEFT" >+ lerpBetween(f1: float, f2: float, zero2one: float): float</TD></TR>
<TR><TD ALIGN="LEFT" >+ lerpMojangVector(start: Vector3f, end: Vector3f, weight: float): Vector3f</TD></TR>
<TR><TD ALIGN="LEFT" >+ lerpQuaternion(from: Quaternion, to: Quaternion, lerpAmount: float): Quaternion</TD></TR>
<TR><TD ALIGN="LEFT" >+ lerpVector(start: Vec3f, end: Vec3f, weight: float): Vec3f</TD></TR>
<TR><TD ALIGN="LEFT" >+ mulQuaternion(left: Quaternion, right: Quaternion, dest: Quaternion): Quaternion</TD></TR>
<TR><TD ALIGN="LEFT" >- normalizeQuaternion(quaternion: Quaternion)</TD></TR>
<TR><TD ALIGN="LEFT" >+ projectVector(from: Vec3, to: Vec3): Vec3</TD></TR>
<TR><TD ALIGN="LEFT" >+ rotateStack(mStack: PoseStack, mat: OpenMatrix4f)</TD></TR>
<TR><TD ALIGN="LEFT" >+ rotlerp(from: float, to: float, limit: float): float</TD></TR>
<TR><TD ALIGN="LEFT" >+ scaleStack(mStack: PoseStack, mat: OpenMatrix4f)</TD></TR>
<TR><TD ALIGN="LEFT" >+ translateStack(mStack: PoseStack, mat: OpenMatrix4f)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Meshes1236888648[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Meshes</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addMesh(rl: ResourceLocation, animatedMesh: AnimatedMesh)</TD></TR>
<TR><TD ALIGN="LEFT" >+ build(resourceManager: ResourceManager)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getOrCreateAnimatedMesh(rm: ResourceManager, rl: ResourceLocation, constructor: MeshContructor&lt;AnimatedVertexIndicator, M&gt;): M</TD></TR>
<TR><TD ALIGN="LEFT" >+ getOrCreateRawMesh(rm: ResourceManager, rl: ResourceLocation, constructor: MeshContructor&lt;VertexIndicator, M&gt;): M</TD></TR>
<TR><TD ALIGN="LEFT" >+ reload(stage: PreparationBarrier, resourceManager: ResourceManager, preparationsProfiler: ProfilerFiller, reloadProfiler: ProfilerFiller, backgroundExecutor: Executor, gameExecutor: Executor): CompletableFuture&lt;Void&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

MirrorAnimation932445219[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)MirrorAnimation</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+   mirror: StaticAnimation [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   original: StaticAnimation [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addProperty(propertyType: StaticAnimationProperty&lt;V&gt;, value: V): StaticAnimation</TD></TR>
<TR><TD ALIGN="LEFT" >+ begin(entitypatch: LivingEntityPatch&lt;?&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" >- checkHandAndReturnAnimation(hand: InteractionHand): StaticAnimation</TD></TR>
<TR><TD ALIGN="LEFT" >+ loadAnimation(resourceManager: ResourceManager)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

MovementAnimation932445219[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)MovementAnimation</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ canBePlayedReverse(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ getPlaySpeed(entitypatch: LivingEntityPatch&lt;?&gt;): float</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

OffAnimation932445219[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)OffAnimation</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ begin(entitypatch: LivingEntityPatch&lt;?&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" >+ loadAnimation(resourceManager: ResourceManager)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

OpenMatrix4f1408080105[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)OpenMatrix4f</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+   m00: float [1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   m01: float [1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   m02: float [1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   m03: float [1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   m10: float [1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   m11: float [1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   m12: float [1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   m13: float [1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   m20: float [1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   m21: float [1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   m22: float [1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   m23: float [1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   m30: float [1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   m31: float [1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   m32: float [1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   m33: float [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ add(left: OpenMatrix4f, right: OpenMatrix4f, dest: OpenMatrix4f): OpenMatrix4f</TD></TR>
<TR><TD ALIGN="LEFT" >+ createRotatorDeg(angle: float, axis: Vec3f): OpenMatrix4f</TD></TR>
<TR><TD ALIGN="LEFT" >+ createScale(x: float, y: float, z: float): OpenMatrix4f</TD></TR>
<TR><TD ALIGN="LEFT" >+ createTranslation(x: float, y: float, z: float): OpenMatrix4f</TD></TR>
<TR><TD ALIGN="LEFT" >+ determinant(): float</TD></TR>
<TR><TD ALIGN="LEFT" >- determinant3x3(t00: float, t01: float, t02: float, t10: float, t11: float, t12: float, t20: float, t21: float, t22: float): float</TD></TR>
<TR><TD ALIGN="LEFT" >+ exportToMojangMatrix(visibleMat: OpenMatrix4f): Matrix4f</TD></TR>
<TR><TD ALIGN="LEFT" >+ fromQuaternion(quaternion: Quaternion): OpenMatrix4f</TD></TR>
<TR><TD ALIGN="LEFT" >+ importFromMojangMatrix(mat4f: Matrix4f): OpenMatrix4f</TD></TR>
<TR><TD ALIGN="LEFT" >+ invert(): OpenMatrix4f</TD></TR>
<TR><TD ALIGN="LEFT" >+ invert(src: OpenMatrix4f, dest: OpenMatrix4f): OpenMatrix4f</TD></TR>
<TR><TD ALIGN="LEFT" >+ load(src: OpenMatrix4f): OpenMatrix4f</TD></TR>
<TR><TD ALIGN="LEFT" >+ load(src: OpenMatrix4f, dest: OpenMatrix4f): OpenMatrix4f</TD></TR>
<TR><TD ALIGN="LEFT" >+ load(mat: OpenMatrix4f, buf: FloatBuffer): OpenMatrix4f</TD></TR>
<TR><TD ALIGN="LEFT" >+ load(buf: FloatBuffer): OpenMatrix4f</TD></TR>
<TR><TD ALIGN="LEFT" >+ mul(left: OpenMatrix4f, right: OpenMatrix4f, dest: OpenMatrix4f): OpenMatrix4f</TD></TR>
<TR><TD ALIGN="LEFT" >+ mulAsOrigin(left: OpenMatrix4f, right: OpenMatrix4f, dest: OpenMatrix4f): OpenMatrix4f</TD></TR>
<TR><TD ALIGN="LEFT" >+ mulAsOriginFront(left: OpenMatrix4f, right: OpenMatrix4f, dest: OpenMatrix4f): OpenMatrix4f</TD></TR>
<TR><TD ALIGN="LEFT" >+ mulBack(mulTransform: OpenMatrix4f): OpenMatrix4f</TD></TR>
<TR><TD ALIGN="LEFT" >+ mulFront(mulTransform: OpenMatrix4f): OpenMatrix4f</TD></TR>
<TR><TD ALIGN="LEFT" >+ overwriteRotation(left: OpenMatrix4f, right: OpenMatrix4f, dest: OpenMatrix4f): OpenMatrix4f</TD></TR>
<TR><TD ALIGN="LEFT" >+ removeTranslation(): OpenMatrix4f</TD></TR>
<TR><TD ALIGN="LEFT" >+ removeTranslation(src: OpenMatrix4f): OpenMatrix4f</TD></TR>
<TR><TD ALIGN="LEFT" >+ rotate(angle: float, axis: Vec3f): OpenMatrix4f</TD></TR>
<TR><TD ALIGN="LEFT" >+ rotate(angle: float, axis: Vec3f, dest: OpenMatrix4f): OpenMatrix4f</TD></TR>
<TR><TD ALIGN="LEFT" >+ rotate(angle: float, axis: Vec3f, src: OpenMatrix4f, dest: OpenMatrix4f): OpenMatrix4f</TD></TR>
<TR><TD ALIGN="LEFT" >+ rotateDeg(angle: float, axis: Vec3f): OpenMatrix4f</TD></TR>
<TR><TD ALIGN="LEFT" >+ scale(x: float, y: float, z: float): OpenMatrix4f</TD></TR>
<TR><TD ALIGN="LEFT" >+ scale(vec: Vec3f): OpenMatrix4f</TD></TR>
<TR><TD ALIGN="LEFT" >+ scale(vec: Vec3f, src: OpenMatrix4f, dest: OpenMatrix4f): OpenMatrix4f</TD></TR>
<TR><TD ALIGN="LEFT" >+ setIdentity(): OpenMatrix4f</TD></TR>
<TR><TD ALIGN="LEFT" >+ setIdentity(m: OpenMatrix4f): OpenMatrix4f</TD></TR>
<TR><TD ALIGN="LEFT" >+ store(buf: FloatBuffer): OpenMatrix4f</TD></TR>
<TR><TD ALIGN="LEFT" >+ toQuaternion(): Quaternion</TD></TR>
<TR><TD ALIGN="LEFT" >+ toQuaternion(matrix: OpenMatrix4f): Quaternion</TD></TR>
<TR><TD ALIGN="LEFT" >+ toScaleVector(): Vec3f</TD></TR>
<TR><TD ALIGN="LEFT" >+ toTranslationVector(): Vec3f</TD></TR>
<TR><TD ALIGN="LEFT" >+ toVector(matrix: OpenMatrix4f): Vec3f</TD></TR>
<TR><TD ALIGN="LEFT" >+ transform(matrix: OpenMatrix4f, src: Vec4f, dest: Vec4f): Vec4f</TD></TR>
<TR><TD ALIGN="LEFT" >+ transform(matrix: OpenMatrix4f, src: Vec3): Vec3</TD></TR>
<TR><TD ALIGN="LEFT" >+ transform3v(matrix: OpenMatrix4f, src: Vec3f, dest: Vec3f): Vec3f</TD></TR>
<TR><TD ALIGN="LEFT" >+ translate(x: float, y: float, z: float): OpenMatrix4f</TD></TR>
<TR><TD ALIGN="LEFT" >+ translate(vec: Vec3f): OpenMatrix4f</TD></TR>
<TR><TD ALIGN="LEFT" >+ translate(vec: Vec3f, dest: OpenMatrix4f): OpenMatrix4f</TD></TR>
<TR><TD ALIGN="LEFT" >+ translate(vec: Vec3f, src: OpenMatrix4f, dest: OpenMatrix4f): OpenMatrix4f</TD></TR>
<TR><TD ALIGN="LEFT" >+ transpose(): OpenMatrix4f</TD></TR>
<TR><TD ALIGN="LEFT" >+ transpose(dest: OpenMatrix4f): OpenMatrix4f</TD></TR>
<TR><TD ALIGN="LEFT" >+ transpose(src: OpenMatrix4f, dest: OpenMatrix4f): OpenMatrix4f</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ParseUtil699248513[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ParseUtil</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ toAttributeModifier(tag: CompoundTag): AttributeModifier</TD></TR>
<TR><TD ALIGN="LEFT" >+ toFloatArray(array: JsonArray): float[]</TD></TR>
<TR><TD ALIGN="LEFT" >+ toIntArray(array: JsonArray): int[]</TD></TR>
<TR><TD ALIGN="LEFT" >+ toVector3d(array: JsonArray): Vec3</TD></TR>
<TR><TD ALIGN="LEFT" >+ toVector3f(array: JsonArray): Vec3f</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Phase688201195[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Phase</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+   antic: float [1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   collider: Collider [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   contact: float [1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   end: float [1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   hand: InteractionHand [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   joint: Joint [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   noStateBind: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   preDelay: float [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   properties: Map&lt;AttackPhaseProperty&lt;?&gt;, Object&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >+   recovery: float [1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   start: float [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addProperties(set: Set&lt;Entry&lt;AttackPhaseProperty&lt;?&gt;, Object&gt;&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addProperty(propertyType: AttackPhaseProperty&lt;V&gt;, value: V): Phase</TD></TR>
<TR><TD ALIGN="LEFT" >+ getProperty(propertyType: AttackPhaseProperty&lt;V&gt;): Optional&lt;V&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Pose940194734[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Pose</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   jointTransformData: Map&lt;String, JointTransform&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ getOrDefaultTransform(jointName: String): JointTransform</TD></TR>
<TR><TD ALIGN="LEFT" >+ interpolatePose(pose1: Pose, pose2: Pose, pregression: float): Pose</TD></TR>
<TR><TD ALIGN="LEFT" >+ putJointData(name: String, transform: JointTransform)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ReboundAnimation932445219[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ReboundAnimation</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ tick(entitypatch: LivingEntityPatch&lt;?&gt;)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ServerAnimator940194734[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ServerAnimator</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+   animationPlayer: AnimationPlayer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   linkAnimation: LinkAnimation [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   nextPlaying: DynamicAnimation [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   pause: boolean [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ getAnimator(entitypatch: LivingEntityPatch&lt;?&gt;): Animator</TD></TR>
<TR><TD ALIGN="LEFT" >+ getPlayerFor(playingAnimation: DynamicAnimation): AnimationPlayer</TD></TR>
<TR><TD ALIGN="LEFT" >+ init()</TD></TR>
<TR><TD ALIGN="LEFT" >+ playAnimation(nextAnimation: StaticAnimation, modifyTime: float)</TD></TR>
<TR><TD ALIGN="LEFT" >+ playAnimationInstantly(nextAnimation: StaticAnimation)</TD></TR>
<TR><TD ALIGN="LEFT" >+ poseTick()</TD></TR>
<TR><TD ALIGN="LEFT" >+ reserveAnimation(nextAnimation: StaticAnimation)</TD></TR>
<TR><TD ALIGN="LEFT" >+ tick()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SkillBuildEvent90245[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SkillBuildEvent</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   builders: Map&lt;ResourceLocation, Pair&lt;? extends Builder&lt;?&gt;, Function&lt;? extends Builder&lt;?&gt;, ? extends Skill&gt;&gt;&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   learnableSkills: Map&lt;ResourceLocation, Skill&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   skills: Map&lt;ResourceLocation, Skill&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ build(modid: String, name: String): T</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SkillLootTableRegistryEvent90245[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SkillLootTableRegistryEvent</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   builders: Map&lt;EntityType&lt;?&gt;, Builder&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ add(entityType: EntityType&lt;?&gt;, builder: Builder): SkillLootTableRegistryEvent</TD></TR>
<TR><TD ALIGN="LEFT" >+ get(entityType: EntityType&lt;?&gt;): Builder</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SkillManager1141039208[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SkillManager</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># apply(objectIn: Map&lt;ResourceLocation, JsonElement&gt;, resourceManager: ResourceManager, profileFiller: ProfilerFiller)</TD></TR>
<TR><TD ALIGN="LEFT" >+ buildAll()</TD></TR>
<TR><TD ALIGN="LEFT" >+ getLearnableSkillNames(predicate: Predicate&lt;Builder&lt;?&gt;&gt;): Stream&lt;ResourceLocation&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getSkill(name: String): Skill</TD></TR>
<TR><TD ALIGN="LEFT" >+ processServerPacket(packet: SPDatapackSync)</TD></TR>
<TR><TD ALIGN="LEFT" >+ register(constructor: Function&lt;B, T&gt;, builder: B, modid: String, name: String)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

StateSpectrum932445219[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)StateSpectrum</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   timePairs: Set&lt;StatesInTime&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ bindStates(entitypatch: LivingEntityPatch&lt;?&gt;, time: float): EntityState</TD></TR>
<TR><TD ALIGN="LEFT" >+ getSingleState(stateFactor: StateFactor&lt;T&gt;, entitypatch: LivingEntityPatch&lt;?&gt;, time: float): T</TD></TR>
<TR><TD ALIGN="LEFT" >- getStateMap(entitypatch: LivingEntityPatch&lt;?&gt;, time: float): TypeFlexibleHashMap&lt;StateFactor&lt;?&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" ># readFrom(blueprint: Blueprint)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

StatesInTime1184302865[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)StatesInTime</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   condition: Function&lt;LivingEntityPatch&lt;?&gt;, Integer&gt; [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   conditionalStates: Map&lt;Integer, Set&lt;Pair&lt;StateFactor&lt;?&gt;, ?&gt;&gt;&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   end: float [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   start: float [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   states: Set&lt;Pair&lt;StateFactor&lt;?&gt;, ?&gt;&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addConditionalState(metadata: int, factor: StateFactor&lt;T&gt;, val: T): StatesInTime</TD></TR>
<TR><TD ALIGN="LEFT" >+ addState(factor: StateFactor&lt;T&gt;, val: T): StatesInTime</TD></TR>
<TR><TD ALIGN="LEFT" >+ getStates(entitypatch: LivingEntityPatch&lt;?&gt;): Set&lt;Pair&lt;StateFactor&lt;?&gt;, ?&gt;&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

StaticAnimation932445219[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)StaticAnimation</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   animationId: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   armature: Armature [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   namespaceId: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   properties: Map&lt;AnimationProperty&lt;?&gt;, Object&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   resourceLocation: ResourceLocation [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   stateSpectrum: StateSpectrum [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   stateSpectrumBlueprint: Blueprint [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addConditionalState(metadata: int, factor: StateFactor&lt;T&gt;, val: T): StaticAnimation</TD></TR>
<TR><TD ALIGN="LEFT" >+ addEvents(key: StaticAnimationProperty&lt;?&gt;, events: AnimationEvent...): StaticAnimation</TD></TR>
<TR><TD ALIGN="LEFT" >+ addEvents(events: TimeStampedEvent...): StaticAnimation</TD></TR>
<TR><TD ALIGN="LEFT" >+ addEvents(events: TimePeriodEvent...): StaticAnimation</TD></TR>
<TR><TD ALIGN="LEFT" >+ addProperty(propertyType: StaticAnimationProperty&lt;V&gt;, value: V): StaticAnimation</TD></TR>
<TR><TD ALIGN="LEFT" >+ addState(factor: StateFactor&lt;T&gt;, val: T): StaticAnimation</TD></TR>
<TR><TD ALIGN="LEFT" >+ addStateIfNotExist(factor: StateFactor&lt;T&gt;, val: T): StaticAnimation</TD></TR>
<TR><TD ALIGN="LEFT" >+ addStateRemoveOld(factor: StateFactor&lt;T&gt;, val: T): StaticAnimation</TD></TR>
<TR><TD ALIGN="LEFT" >+ begin(entitypatch: LivingEntityPatch&lt;?&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" >+ between(a1: StaticAnimation, a2: StaticAnimation): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ end(entitypatch: LivingEntityPatch&lt;?&gt;, isEnd: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getBindModifier(entitypatch: LivingEntityPatch&lt;?&gt;, joint: String): BindModifier</TD></TR>
<TR><TD ALIGN="LEFT" >+ getPlaySpeed(entitypatch: LivingEntityPatch&lt;?&gt;): float</TD></TR>
<TR><TD ALIGN="LEFT" >+ getProperty(propertyType: AnimationProperty&lt;V&gt;): Optional&lt;V&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getSingleState(stateFactor: StateFactor&lt;T&gt;, entitypatch: LivingEntityPatch&lt;?&gt;, time: float): T</TD></TR>
<TR><TD ALIGN="LEFT" >+ getState(entitypatch: LivingEntityPatch&lt;?&gt;, time: float): EntityState</TD></TR>
<TR><TD ALIGN="LEFT" >+ isJointEnabled(entitypatch: LivingEntityPatch&lt;?&gt;, joint: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ load(resourceManager: ResourceManager, animation: StaticAnimation)</TD></TR>
<TR><TD ALIGN="LEFT" >+ loadAnimation(resourceManager: ResourceManager)</TD></TR>
<TR><TD ALIGN="LEFT" >+ loadBothSide(resourceManager: ResourceManager, animation: StaticAnimation)</TD></TR>
<TR><TD ALIGN="LEFT" >+ modifyPose(pose: Pose, entitypatch: LivingEntityPatch&lt;?&gt;, time: float)</TD></TR>
<TR><TD ALIGN="LEFT" >+ newConditionalTimePair(condition: Function&lt;LivingEntityPatch&lt;?&gt;, Integer&gt;, start: float, end: float): StaticAnimation</TD></TR>
<TR><TD ALIGN="LEFT" >+ newTimePair(start: float, end: float): StaticAnimation</TD></TR>
<TR><TD ALIGN="LEFT" ># onLoaded()</TD></TR>
<TR><TD ALIGN="LEFT" >+ tick(entitypatch: LivingEntityPatch&lt;?&gt;)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

StaticAnimationProperty1189771108[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)StaticAnimationProperty&lt;T&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TimePairList699248513[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TimePairList</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   timePairs: TimePair[] [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ create(times: float...): TimePairList</TD></TR>
<TR><TD ALIGN="LEFT" >+ isTimeInPairs(time: float): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TimePeriodEvent1473702605[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TimePeriodEvent</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   end: float [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   start: float [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ compareTo(arg0: TimePeriodEvent): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ create(start: float, end: float, event: AnimationEventConsumer, isRemote: Side): TimePeriodEvent</TD></TR>
<TR><TD ALIGN="LEFT" >+ executeIfRightSide(entitypatch: LivingEntityPatch&lt;?&gt;, animation: StaticAnimation, prevElapsed: float, elapsed: float)</TD></TR>
<TR><TD ALIGN="LEFT" >+ params(params: Object...): TimePeriodEvent</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TimeStampedEvent1473702605[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TimeStampedEvent</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   time: float [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ compareTo(arg0: TimeStampedEvent): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ create(time: float, event: AnimationEventConsumer, isRemote: Side): TimeStampedEvent</TD></TR>
<TR><TD ALIGN="LEFT" >+ executeIfRightSide(entitypatch: LivingEntityPatch&lt;?&gt;, animation: StaticAnimation, prevElapsed: float, elapsed: float)</TD></TR>
<TR><TD ALIGN="LEFT" >+ params(params: Object...): TimeStampedEvent</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TipPointAnimation1898981842[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TipPointAnimation</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   animation: TransformSheet [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   dt: float [1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   ikSetter: IKInfo [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   isTouchingGround: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   isWorking: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   startTime: float [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   targetpos: Vec3f [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   time: float [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   totalTime: float [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ getTime(partialTicks: float): float</TD></TR>
<TR><TD ALIGN="LEFT" >+ getTipPosition(partialTicks: float): Vec3f</TD></TR>
<TR><TD ALIGN="LEFT" >+ getTipTransform(partialTicks: float): JointTransform</TD></TR>
<TR><TD ALIGN="LEFT" >+ newTargetPosition(targetpos: Vec3f)</TD></TR>
<TR><TD ALIGN="LEFT" >+ start(targetpos: Vec3f, animation: TransformSheet, speed: float)</TD></TR>
<TR><TD ALIGN="LEFT" >+ tick()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TrailInfo56848592[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TrailInfo</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+   bCol: float [1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   end: Vec3 [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   endTime: float [1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   fadeTime: float [1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   gCol: float [1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   hand: InteractionHand [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   interpolateCount: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   joint: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   particle: SimpleParticleType [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   rCol: float [1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   start: Vec3 [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   startTime: float [1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   texturePath: ResourceLocation [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   trailLifetime: int [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ builder(): Builder</TD></TR>
<TR><TD ALIGN="LEFT" >+ deserialize(json: JsonElement): TrailInfo</TD></TR>
<TR><TD ALIGN="LEFT" >+ overwrite(trailInfo: TrailInfo): TrailInfo</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TransformSheet940194734[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TransformSheet</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   keyframes: Keyframe[] [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ copy(start: int, end: int): TransformSheet</TD></TR>
<TR><TD ALIGN="LEFT" >+ copyAll(): TransformSheet</TD></TR>
<TR><TD ALIGN="LEFT" >+ correctAnimationByNewPosition(startpos: Vec3f, startToEnd: Vec3f, modifiedStart: Vec3f, modifiedStartToEnd: Vec3f)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getCorrectedModelCoord(entitypatch: LivingEntityPatch&lt;?&gt;, start: Vec3, dest: Vec3, startFrame: int, endFrame: int): TransformSheet</TD></TR>
<TR><TD ALIGN="LEFT" >+ getCorrectedWorldCoord(entitypatch: LivingEntityPatch&lt;?&gt;, start: Vec3, dest: Vec3, xRot: float, yRot: float, startFrame: int, endFrame: int): TransformSheet</TD></TR>
<TR><TD ALIGN="LEFT" >+ getInterpolatedRotation(currentTime: float): Quaternion</TD></TR>
<TR><TD ALIGN="LEFT" >+ getInterpolatedTransform(currentTime: float): JointTransform</TD></TR>
<TR><TD ALIGN="LEFT" >+ getInterpolatedTranslation(currentTime: float): Vec3f</TD></TR>
<TR><TD ALIGN="LEFT" >- getInterpolationInfo(currentTime: float): InterpolationInfo</TD></TR>
<TR><TD ALIGN="LEFT" >+ readFrom(opponent: TransformSheet): TransformSheet</TD></TR>
<TR><TD ALIGN="LEFT" >+ transform(transformFunc: Consumer&lt;JointTransform&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" >+ transform(transformFunc: Consumer&lt;JointTransform&gt;, start: int, end: int)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TypeFlexibleHashMap699248513[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TypeFlexibleHashMap&lt;A extends TypeKey&lt;?&gt;&gt;</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ get(typeKey: TypeKey&lt;T&gt;): T</TD></TR>
<TR><TD ALIGN="LEFT" >+ getOrDefault(typeKey: TypeKey&lt;T&gt;, defaultVal: T): T</TD></TR>
<TR><TD ALIGN="LEFT" >+ put(typeKey: TypeKey&lt;T&gt;, val: T): T</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ValueModifier1408080105[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ValueModifier</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   adders: float [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   multipliers: float [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   setters: float [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ adder(arg: float): ValueModifier</TD></TR>
<TR><TD ALIGN="LEFT" >+ empty(): ValueModifier</TD></TR>
<TR><TD ALIGN="LEFT" >+ getTotalValue(value: float): float</TD></TR>
<TR><TD ALIGN="LEFT" >+ merge(valueCorrector: ValueModifier)</TD></TR>
<TR><TD ALIGN="LEFT" >+ multiplier(arg: float): ValueModifier</TD></TR>
<TR><TD ALIGN="LEFT" >+ setter(arg: float): ValueModifier</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Vec3f1408080105[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Vec3f</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+   z: float [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ add(x: float, y: float, z: float): Vec3f</TD></TR>
<TR><TD ALIGN="LEFT" >+ add(vec: Vec3f): Vec3f</TD></TR>
<TR><TD ALIGN="LEFT" >+ add(left: Vec3f, right: Vec3f, dest: Vec3f): Vec3f</TD></TR>
<TR><TD ALIGN="LEFT" >+ copy(): Vec3f</TD></TR>
<TR><TD ALIGN="LEFT" >+ cross(left: Vec3f, right: Vec3f, dest: Vec3f): Vec3f</TD></TR>
<TR><TD ALIGN="LEFT" >+ distanceSqr(opponent: Vec3f): float</TD></TR>
<TR><TD ALIGN="LEFT" >+ dot(left: Vec3f, right: Vec3f): float</TD></TR>
<TR><TD ALIGN="LEFT" >+ fromDoubleVector(vec3: Vec3): Vec3f</TD></TR>
<TR><TD ALIGN="LEFT" >+ fromMojangVector(vec3: Vector3f): Vec3f</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAngleBetween(a: Vec3f, b: Vec3f): float</TD></TR>
<TR><TD ALIGN="LEFT" >+ getRotatorBetween(a: Vec3f, b: Vec3f): Quaternion</TD></TR>
<TR><TD ALIGN="LEFT" >+ length(): float</TD></TR>
<TR><TD ALIGN="LEFT" >+ lengthSqr(): float</TD></TR>
<TR><TD ALIGN="LEFT" >+ multiply(vec: Vec3f): Vec3f</TD></TR>
<TR><TD ALIGN="LEFT" >+ multiply(x: float, y: float, z: float): Vec3f</TD></TR>
<TR><TD ALIGN="LEFT" >+ multiply(src: Vec3f, dest: Vec3f, x: float, y: float, z: float): Vec3f</TD></TR>
<TR><TD ALIGN="LEFT" >+ normalise(): Vec3f</TD></TR>
<TR><TD ALIGN="LEFT" >+ scale(f: float): Vec3f</TD></TR>
<TR><TD ALIGN="LEFT" >+ scale(src: Vec3f, dest: Vec3f, f: float): Vec3f</TD></TR>
<TR><TD ALIGN="LEFT" >+ sub(vec: Vec3f): Vec3f</TD></TR>
<TR><TD ALIGN="LEFT" >+ sub(left: Vec3f, right: Vec3f, dest: Vec3f): Vec3f</TD></TR>
<TR><TD ALIGN="LEFT" >+ toDoubleVector(): Vec3</TD></TR>
<TR><TD ALIGN="LEFT" >+ toMojangVector(): Vector3f</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

VertexIndicator1236888648[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)VertexIndicator</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+   normal: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   position: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   uv: int [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ create(drawingIndices: int[]): List&lt;VertexIndicator&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ createAnimated(drawingIndices: int[], vCounts: int[], animationIndices: int[]): List&lt;AnimatedVertexIndicator&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

WeaponCapabilityPresetRegistryEvent90245[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)WeaponCapabilityPresetRegistryEvent</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   typeEntry: Map&lt;String, Function&lt;Item, Builder&gt;&gt; [0..*]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];
} 

subgraph cluster_1407072107 { 
   	label=network
	labeljust=l
	fillcolor="#d8d8d8"
	style=filled
   
   EpicFightNetworkManager149000368[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EpicFightNetworkManager</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ registerPackets()</TD></TR>
<TR><TD ALIGN="LEFT" >+ sendToAll(message: MSG)</TD></TR>
<TR><TD ALIGN="LEFT" >+ sendToAllPlayerTrackingThisEntity(message: MSG, entity: Entity)</TD></TR>
<TR><TD ALIGN="LEFT" >+ sendToAllPlayerTrackingThisEntityWithSelf(message: MSG, entity: ServerPlayer)</TD></TR>
<TR><TD ALIGN="LEFT" >+ sendToClient(message: MSG, packetTarget: PacketTarget)</TD></TR>
<TR><TD ALIGN="LEFT" >+ sendToPlayer(message: MSG, player: ServerPlayer)</TD></TR>
<TR><TD ALIGN="LEFT" >+ sendToServer(message: MSG)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];
} 

subgraph cluster_1765827469 { 
   	label=data
	labeljust=l
	fillcolor="#d8d8d8"
	style=filled
   
   SetSkillFunction882169528[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SetSkillFunction</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   skillsAndWeight: List&lt;Pair&lt;Float, String&gt;&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ apply(itemstack: ItemStack, lootContext: LootContext): ItemStack</TD></TR>
<TR><TD ALIGN="LEFT" >+ builder(skills: String...): Builder</TD></TR>
<TR><TD ALIGN="LEFT" >+ builder(skillAndWeight: Object...): Builder</TD></TR>
<TR><TD ALIGN="LEFT" >- getSkillForSeed(seed: float): Skill</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SkillBookLootModifier367894286[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SkillBookLootModifier</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ createSkillLootTable()</TD></TR>
<TR><TD ALIGN="LEFT" ># doApply(generatedLoot: List&lt;ItemStack&gt;, context: LootContext): List&lt;ItemStack&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getLootTableFor(entityType: EntityType&lt;?&gt;): LootTable</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];
} 

subgraph cluster_429325038 { 
   	label=client
	labeljust=l
	fillcolor="#d8d8d8"
	style=filled
   
   AbstractClientPlayerPatch958924470[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AbstractClientPlayerPatch&lt;T extends AbstractClientPlayer&gt;</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   bodyYaw: float [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   prevBodyYaw: float [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   prevHeldItem: Item [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   prevHeldItemOffHand: Item [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   prevYaw: float [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># clientTick(event: LivingUpdateEvent)</TD></TR>
<TR><TD ALIGN="LEFT" >+ consumeStamina(amount: float): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ getHeadMatrix(partialTick: float): OpenMatrix4f</TD></TR>
<TR><TD ALIGN="LEFT" >+ getLadderDirection(state: BlockState, world: Level, pos: BlockPos, entity: LivingEntity): Direction</TD></TR>
<TR><TD ALIGN="LEFT" >+ getModelMatrix(partialTick: float): OpenMatrix4f</TD></TR>
<TR><TD ALIGN="LEFT" >+ onJoinWorld(entityIn: T, event: EntityJoinWorldEvent)</TD></TR>
<TR><TD ALIGN="LEFT" >+ overrideRender(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ playAnimationSynchronized(animation: StaticAnimation, convertTimeModifier: float, packetProvider: AnimationPacketProvider)</TD></TR>
<TR><TD ALIGN="LEFT" >+ reserveAnimation(animation: StaticAnimation)</TD></TR>
<TR><TD ALIGN="LEFT" >+ updateHeldItem(mainHandCap: CapabilityItem, offHandCap: CapabilityItem)</TD></TR>
<TR><TD ALIGN="LEFT" >+ updateMotion(considerInaction: boolean)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BattleModeGui589115338[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BattleModeGui</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+   font: Font [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   skillIcons: List&lt;SkillContainer&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   sliding: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   slidingToggle: boolean [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >- drawWeaponInnateIcon(playerpatch: LocalPlayerPatch, container: SkillContainer, matStack: PoseStack, partialTicks: float)</TD></TR>
<TR><TD ALIGN="LEFT" >+ renderGui(playerpatch: LocalPlayerPatch, partialTicks: float)</TD></TR>
<TR><TD ALIGN="LEFT" >+ slideDown()</TD></TR>
<TR><TD ALIGN="LEFT" >+ slideUp()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ClientEngine1764602473[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ClientEngine</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   armorModelDebuggingMode: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   controllEngine: ControllEngine [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   minecraft: Minecraft [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   renderEngine: RenderEngine [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   triangleDrawingMode: boolean [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ switchArmorModelDebuggingMode(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ turnOffTriangleDrawingMode(stack: PoseStack)</TD></TR>
<TR><TD ALIGN="LEFT" >+ turnOnTriangleDrawingMode(stack: PoseStack)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ControllEngine1079770638[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ControllEngine</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   hotbarLocked: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   keyFunctions: Map&lt;KeyMapping, BiConsumer&lt;KeyMapping, Integer&gt;&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   keyHash: KeyBindingMap [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   lastHotbarLockedTime: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   lightPress: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   minecraft: Minecraft [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   mouseLeftPressCounter: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   mouseLeftPressToggle: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   options: Options [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   packets: Set&lt;Object&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   player: LocalPlayer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   playerpatch: LocalPlayerPatch [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   reserveCounter: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   reservedKey: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   sneakPressCounter: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   sneakPressToggle: boolean [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >- attackKeyPressed(key: KeyMapping, action: int)</TD></TR>
<TR><TD ALIGN="LEFT" >+ canPlayerMove(playerState: EntityState): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ canPlayerRotate(playerState: EntityState): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >- dodgeKeyPressed(key: KeyMapping, action: int)</TD></TR>
<TR><TD ALIGN="LEFT" >+ isKeyDown(key: KeyMapping): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ lockHotkeys()</TD></TR>
<TR><TD ALIGN="LEFT" >- lockonPressed(key: KeyMapping, action: int)</TD></TR>
<TR><TD ALIGN="LEFT" >- reserveKey(slot: SkillSlot)</TD></TR>
<TR><TD ALIGN="LEFT" >- resetReservedKey()</TD></TR>
<TR><TD ALIGN="LEFT" >- swapHandKeyPressed(key: KeyMapping, action: int)</TD></TR>
<TR><TD ALIGN="LEFT" >- switchModeKeyPressed(key: KeyMapping, action: int)</TD></TR>
<TR><TD ALIGN="LEFT" >+ tick()</TD></TR>
<TR><TD ALIGN="LEFT" >+ unlockHotkeys()</TD></TR>
<TR><TD ALIGN="LEFT" >- weaponInnateSkillKeyPressed(key: KeyMapping, action: int)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EntityIndicator589115338[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EntityIndicator</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ drawIndicator(entityIn: LivingEntity, matStackIn: PoseStack, VertexConsumer: MultiBufferSource, partialTicks: float)</TD></TR>
<TR><TD ALIGN="LEFT" >+ drawTexturedModalRect2DPlane(matrix: Matrix4f, vertexBuilder: VertexConsumer, minX: float, minY: float, maxX: float, maxY: float, minTexU: float, minTexV: float, maxTexU: float, maxTexV: float)</TD></TR>
<TR><TD ALIGN="LEFT" >+ drawTexturedModalRect3DPlane(matrix: Matrix4f, vertexBuilder: VertexConsumer, minX: float, minY: float, minZ: float, maxX: float, maxY: float, maxZ: float, minTexU: float, minTexV: float, maxTexU: float, maxTexV: float)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getMVMatrix(matStackIn: PoseStack, entityIn: LivingEntity, correctionX: float, correctionY: float, correctionZ: float, lockRotation: boolean, partialTicks: float): Matrix4f</TD></TR>
<TR><TD ALIGN="LEFT" >+ getMVMatrix(matStackIn: PoseStack, posX: float, posY: float, posZ: float, lockRotation: boolean): Matrix4f</TD></TR>
<TR><TD ALIGN="LEFT" >+ init()</TD></TR>
<TR><TD ALIGN="LEFT" >+ shouldDraw(player: LocalPlayer, entityIn: LivingEntity): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EpicFightRenderTypes1661413032[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EpicFightRenderTypes</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ debugCollider(): RenderType</TD></TR>
<TR><TD ALIGN="LEFT" >+ debugQuads(): RenderType</TD></TR>
<TR><TD ALIGN="LEFT" >+ entityIndicator(locationIn: ResourceLocation): RenderType</TD></TR>
<TR><TD ALIGN="LEFT" >+ getArmorFoilBufferTriangles(bufferSource: MultiBufferSource, renderType: RenderType, isEntity: boolean, hasEffect: boolean): VertexConsumer</TD></TR>
<TR><TD ALIGN="LEFT" >- getTriangleBuffer(bufferSource: MultiBufferSource, renderType: RenderType): VertexConsumer</TD></TR>
<TR><TD ALIGN="LEFT" >+ triangles(renderType: RenderType): RenderType</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

HealthBarIndicator589115338[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)HealthBarIndicator</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ drawIndicator(entityIn: LivingEntity, matStackIn: PoseStack, bufferIn: MultiBufferSource, partialTicks: float)</TD></TR>
<TR><TD ALIGN="LEFT" >- renderStunShield(entitypatch: LivingEntityPatch&lt;?&gt;, mvMatrix: Matrix4f, vertexBuilder: VertexConsumer)</TD></TR>
<TR><TD ALIGN="LEFT" >+ shouldDraw(player: LocalPlayer, entityIn: LivingEntity): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

LearnSkillButton855079773[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)LearnSkillButton</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   skill: Skill [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># clickedNoCountActive(x: double, y: double): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ mouseClicked(x: double, y: double, pressType: int): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ render(PoseStack: PoseStack, mouseX: int, mouseY: int, partialTicks: float)</TD></TR>
<TR><TD ALIGN="LEFT" >+ setActive(active: boolean): LearnSkillButton</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

LocalPlayerPatch958924470[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)LocalPlayerPatch</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   lockOnXRot: float [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   lockOnXRotO: float [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   lockOnYRot: float [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   lockOnYRotO: float [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   minecraft: Minecraft [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   prevStamina: float [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   rayTarget: LivingEntity [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   targetLockedOn: boolean [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ clientTick(event: LivingUpdateEvent)</TD></TR>
<TR><TD ALIGN="LEFT" >+ consumeStamina(amount: float): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ correctRotation()</TD></TR>
<TR><TD ALIGN="LEFT" >+ getLerpedLockOnX(partial: double): float</TD></TR>
<TR><TD ALIGN="LEFT" >+ getLerpedLockOnY(partial: double): float</TD></TR>
<TR><TD ALIGN="LEFT" >+ onConstructed(entity: LocalPlayer)</TD></TR>
<TR><TD ALIGN="LEFT" >+ onDeath()</TD></TR>
<TR><TD ALIGN="LEFT" >+ onJoinWorld(entityIn: LocalPlayer, event: EntityJoinWorldEvent)</TD></TR>
<TR><TD ALIGN="LEFT" >+ onRespawnLocalPlayer(event: RespawnEvent)</TD></TR>
<TR><TD ALIGN="LEFT" >+ openSkillBook(itemstack: ItemStack, hand: InteractionHand)</TD></TR>
<TR><TD ALIGN="LEFT" >+ playAnimationSynchronized(animation: StaticAnimation, convertTimeModifier: float, packetProvider: AnimationPacketProvider)</TD></TR>
<TR><TD ALIGN="LEFT" ># playReboundAnimation()</TD></TR>
<TR><TD ALIGN="LEFT" >+ shouldBlockMoving(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ toBattleMode(synchronize: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" >+ toMiningMode(synchronize: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" >+ toggleLockOn()</TD></TR>
<TR><TD ALIGN="LEFT" >+ tryHurt(damageSource: DamageSource, amount: float): AttackResult</TD></TR>
<TR><TD ALIGN="LEFT" >+ updateHeldItem(mainHandCap: CapabilityItem, offHandCap: CapabilityItem)</TD></TR>
<TR><TD ALIGN="LEFT" >+ updateMotion(considerInaction: boolean)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ModIngameGui589115338[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ModIngameGui</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ drawTexturedModalRectFixCoord(matrix: Matrix4f, xCoord: float, yCoord: float, minU: int, minV: int, maxU: int, maxV: int)</TD></TR>
<TR><TD ALIGN="LEFT" >+ drawTexturedModalRectFixCoord(matrix: Matrix4f, minX: float, minY: float, maxX: float, maxY: float, z: float, minU: float, minV: float, maxU: float, maxV: float)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RenderEngine1079770638[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RenderEngine</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+   aimHelper: AimHelperRenderer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   aiming: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   basicHumanoidRenderer: PHumanoidRenderer&lt;?, ?, ?, ?&gt; [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   cameraXRot: float [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   cameraYRot: float [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   entityRendererCache: Map&lt;EntityType&lt;?&gt;, PatchedEntityRenderer&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   entityRendererProvider: Map&lt;EntityType&lt;?&gt;, Supplier&lt;PatchedEntityRenderer&gt;&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   firstPersonRenderer: FirstPersonRenderer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   guiSkillBar: BattleModeGui [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   isPlayerRotationLocked: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   itemRendererMapByClass: Map&lt;Class&lt;? extends Item&gt;, RenderItemBase&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   itemRendererMapByInstance: Map&lt;Item, RenderItemBase&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   minecraft: Minecraft [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   overlayManager: OverlayManager [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   zoomCount: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   zoomMaxCount: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   zoomOutTimer: int [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ clearCustomEntityRenerer()</TD></TR>
<TR><TD ALIGN="LEFT" >+ correctCamera(event: CameraSetup, partialTicks: float)</TD></TR>
<TR><TD ALIGN="LEFT" >+ downSlideSkillUI()</TD></TR>
<TR><TD ALIGN="LEFT" >- findMatchingRendererByClass(clazz: Class&lt;?&gt;): RenderItemBase</TD></TR>
<TR><TD ALIGN="LEFT" >+ getEntityRenderer(entity: Entity): PatchedEntityRenderer</TD></TR>
<TR><TD ALIGN="LEFT" >+ getItemRenderer(item: Item): RenderItemBase</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasRendererFor(entity: Entity): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ registerCustomEntityRenderer(entityType: EntityType&lt;?&gt;, renderer: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ registerRenderer()</TD></TR>
<TR><TD ALIGN="LEFT" >+ renderEntityArmatureModel(livingEntity: LivingEntity, entitypatch: LivingEntityPatch&lt;?&gt;, renderer: LivingEntityRenderer&lt;? extends Entity, ?&gt;, buffer: MultiBufferSource, matStack: PoseStack, packedLightIn: int, partialTicks: float)</TD></TR>
<TR><TD ALIGN="LEFT" >+ rotateCameraByMouseInput(dx: float, dy: float)</TD></TR>
<TR><TD ALIGN="LEFT" >+ unlockRotation(cameraEntity: Entity)</TD></TR>
<TR><TD ALIGN="LEFT" >+ upSlideSkillUI()</TD></TR>
<TR><TD ALIGN="LEFT" >+ zoomIn()</TD></TR>
<TR><TD ALIGN="LEFT" >+ zoomOut(timer: int)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RenderingTool1661413032[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RenderingTool</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ drawCube(poseStack: PoseStack, vertexBuilder: VertexConsumer, pos: Vec3f, size: float, r: float, g: float, b: float)</TD></TR>
<TR><TD ALIGN="LEFT" >+ drawQuad(poseStack: PoseStack, vertexBuilder: VertexConsumer, pos: Vec3f, size: float, r: float, g: float, b: float)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SkillBookScreen1779895588[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SkillBookScreen</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   hand: InteractionHand [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   lowerScreen: Screen [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   opener: Player [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   playerpatch: LocalPlayerPatch [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   skill: Skill [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># init()</TD></TR>
<TR><TD ALIGN="LEFT" ># learnSkill(skillContainer: SkillContainer)</TD></TR>
<TR><TD ALIGN="LEFT" >+ onClose()</TD></TR>
<TR><TD ALIGN="LEFT" >+ render(matrixStack: PoseStack, mouseX: int, mouseY: int, partialTicks: float)</TD></TR>
<TR><TD ALIGN="LEFT" >+ render(matrixStack: PoseStack, mouseX: int, mouseY: int, partialTicks: float, asBackground: boolean)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SkillEditScreen1779895588[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SkillEditScreen</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   learnedSkillButtons: List&lt;LearnSkillButton&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   player: Player [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   selectedSlotButton: SlotButton [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   skills: CapabilitySkill [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   slotButtons: Map&lt;SkillSlot, SlotButton&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   start: int [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >- canPress(button: Button): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >- canScroll(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ init()</TD></TR>
<TR><TD ALIGN="LEFT" >+ mouseScrolled(x: double, y: double, wheel: double): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ render(poseStack: PoseStack, mouseX: int, mouseY: int, partialTicks: float)</TD></TR>
<TR><TD ALIGN="LEFT" >+ renderBackground(PoseStack: PoseStack)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SlotButton855079773[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SlotButton</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iconSkill: Skill [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   slot: SkillSlot [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ render(poseStack: PoseStack, mouseX: int, mouseY: int, partialTicks: float)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SlotSelectScreen1779895588[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SlotSelectScreen</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   containers: List&lt;SkillContainer&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   parent: SkillBookScreen [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># init()</TD></TR>
<TR><TD ALIGN="LEFT" >+ onClose()</TD></TR>
<TR><TD ALIGN="LEFT" >+ render(matrixStack: PoseStack, mouseX: int, mouseY: int, partialTicks: float)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TargetIndicator589115338[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TargetIndicator</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ drawIndicator(entityIn: LivingEntity, matStackIn: PoseStack, bufferIn: MultiBufferSource, partialTicks: float)</TD></TR>
<TR><TD ALIGN="LEFT" >+ shouldDraw(player: LocalPlayer, entityIn: LivingEntity): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];
} 

subgraph cluster_544946409 { 
   	label=particle
	labeljust=l
	fillcolor="#d8d8d8"
	style=filled
   
   HitParticleType448660060[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)HitParticleType</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+   argumentProvider: BiFunction&lt;Entity, Entity, Vector3d&gt; [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   positionProvider: BiFunction&lt;Entity, Entity, Vector3d&gt; [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ spawnParticleWithArgument(world: ServerLevel, e1: Entity, e2: Entity)</TD></TR>
<TR><TD ALIGN="LEFT" >+ spawnParticleWithArgument(world: ServerLevel, positionProvider: BiFunction&lt;Entity, Entity, Vector3d&gt;, argumentProvider: BiFunction&lt;Entity, Entity, Vector3d&gt;, e1: Entity, e2: Entity)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];
} 
} 

subgraph cluster_1547837119 { 
   	label=kingdomkeys
	labeljust=l
	fillcolor="#ececec"
	style=filled
   
   subgraph cluster_368365072 { 
   	label=kingdomkeys
	labeljust=l
	fillcolor="#d8d8d8"
	style=filled
   
   ComboExtender1995739160[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ComboExtender</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   NumberOfComboPlus: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   NumberOfFinishingPlus: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   TotalComboOffset: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   combo: SkillDataKey&lt;Integer&gt; [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   finisherData: SkillDataKey&lt;Integer&gt; [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   finisherPlacement: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   lastBasicAttackFromEnd: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   numberOfNegativeCombo: int [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ executeOnServer(executer: ServerPlayerPatch, args: FriendlyByteBuf)</TD></TR>
<TR><TD ALIGN="LEFT" >+ onInitiate(container: SkillContainer)</TD></TR>
<TR><TD ALIGN="LEFT" >+ onRemoved(container: SkillContainer)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

KKWeaponCapabilities2006620404[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)KKWeaponCapabilities</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   guardMap: Map&lt;String, GuardObject&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ getGuardMotion(skill: GuardSkill, blockType: BlockType, playerpatch: PlayerPatch&lt;?&gt;): StaticAnimation</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ModCapabilities1404457265[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ModCapabilities</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ attachCapabilities(event: AttachCapabilitiesEvent&lt;Entity&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" >+ attachWorldCapabilities(event: AttachCapabilitiesEvent&lt;Level&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getGlobal(e: LivingEntity): IGlobalCapabilities</TD></TR>
<TR><TD ALIGN="LEFT" >+ getPlayer(player: Player): IPlayerCapabilities</TD></TR>
<TR><TD ALIGN="LEFT" >+ getWorld(w: Level): IWorldCapabilities</TD></TR>
<TR><TD ALIGN="LEFT" >+ register(event: RegisterCapabilitiesEvent)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PlayerCapabilities1404457265[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PlayerCapabilities</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   abilityMap: LinkedHashMap&lt;String, int[]&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   aerialDodgeTicks: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   alignment: OrgMember [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   antipoints: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   choice: SoAState [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   choicePedestal: BlockPos [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   defense: Stat [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   dfMessages: List&lt;String&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   dp: double [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   driveForm: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   driveForms: LinkedHashMap&lt;String, int[]&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   dualStyle: DualChoices [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   equippedAccessories: Map&lt;Integer, ItemStack&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   equippedArmors: Map&lt;Integer, ItemStack&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   equippedItems: Map&lt;Integer, ItemStack&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   equippedKeychains: Map&lt;ResourceLocation, ItemStack&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   equippedShotlock: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   equippedWeapon: ItemStack [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   exp: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   expGiven: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   focus: double [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   fp: double [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   hasJumpedAerealDodge: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   hasShotMaxShotlock: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   hearts: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   isGliding: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   level: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   limitCooldownTicks: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   magic: Stat [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   magicCooldown: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   magicList: LinkedHashMap&lt;String, int[]&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   materials: TreeMap&lt;String, Integer&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   maxAP: Stat [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   maxDP: double [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   maxFocus: double [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   maxHp: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   maxMP: double [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   messages: List&lt;String&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   mp: double [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   munny: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   partyList: List&lt;String&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   reactionList: List&lt;String&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   recharge: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   recipeList: List&lt;ResourceLocation&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   reflectActive: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   reflectLevel: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   reflectTicks: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   remainingExp: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   remainingSynthExp: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   returnDim: ResourceKey&lt;Level&gt; [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   returnPos: Vec3 [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   sacrifice: SoAState [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   sacrificePedestal: BlockPos [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   shortcutsMap: LinkedHashMap&lt;Integer, String&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   shotlockEnemies: List&lt;Integer&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   shotlockList: List&lt;String&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   singleStyle: SingleChoices [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   soAState: SoAState [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   strength: Stat [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   synthExp: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   synthLevel: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   weaponUnlocks: Set&lt;ItemStack&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addAbility(ability: String, notification: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addAbility(ability: String, displayName: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addDP(dp: double)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addDefense(def: int)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addDriveFormExperience(drive: String, player: ServerPlayer, value: int)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addEquippedAbilityLevel(ability: String, level: int)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addExperience(player: Player, exp: int, shareXP: boolean, sound: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addFP(fp: double)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addFocus(focus: double)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addHearts(hearts: int)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addKnownRecipe(recipe: ResourceLocation)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addMP(mp: double)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addMagic(mag: int)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addMagicUses(name: String, uses: int)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addMaterial(material: Material, amount: int)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addMaxAP(ap: int)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addMaxFocus(focus: double)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addMaxHP(hp: int)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addMaxMP(mp: double)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addPartiesInvited(partyName: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addReactionCommand(command: String, player: Player): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ addShotlockEnemy(entity: Integer)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addShotlockToList(shotlock: String, notification: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addStrength(str: int)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addSynthExperience(exp: int)</TD></TR>
<TR><TD ALIGN="LEFT" >+ canEquipAccessory(slot: int, stack: ItemStack): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ canEquipArmor(slot: int, stack: ItemStack): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ canEquipItem(slot: int, stack: ItemStack): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ canEquipKeychain(form: ResourceLocation, stack: ItemStack): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ changeShortcut(position: int, name: String, level: int)</TD></TR>
<TR><TD ALIGN="LEFT" >+ clearAbilities()</TD></TR>
<TR><TD ALIGN="LEFT" >+ clearDFMessages()</TD></TR>
<TR><TD ALIGN="LEFT" >+ clearMaterials()</TD></TR>
<TR><TD ALIGN="LEFT" >+ clearMessages()</TD></TR>
<TR><TD ALIGN="LEFT" >+ clearRecipes(type: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ deserializeNBT(nbt: CompoundTag)</TD></TR>
<TR><TD ALIGN="LEFT" >+ displayDriveFormLevelUpMessage(player: Player, driveForm: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ equipAbility(ability: String, index: int)</TD></TR>
<TR><TD ALIGN="LEFT" >+ equipAbilityToggle(ability: String, index: int)</TD></TR>
<TR><TD ALIGN="LEFT" >+ equipAccessory(slot: int, stack: ItemStack): ItemStack</TD></TR>
<TR><TD ALIGN="LEFT" >+ equipAllAccessories(accessories: Map&lt;Integer, ItemStack&gt;, force: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" >+ equipAllArmors(armors: Map&lt;Integer, ItemStack&gt;, force: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" >+ equipAllItems(Items: Map&lt;Integer, ItemStack&gt;, force: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" >+ equipAllKeychains(keychains: Map&lt;ResourceLocation, ItemStack&gt;, force: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" >+ equipArmor(slot: int, stack: ItemStack): ItemStack</TD></TR>
<TR><TD ALIGN="LEFT" >+ equipItem(slot: int, stack: ItemStack): ItemStack</TD></TR>
<TR><TD ALIGN="LEFT" >+ equipKeychain(form: ResourceLocation, stack: ItemStack): ItemStack</TD></TR>
<TR><TD ALIGN="LEFT" >+ equipWeapon(weapon: ItemStack)</TD></TR>
<TR><TD ALIGN="LEFT" >+ equipWeapon(registryName: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAbilityQuantity(ability: String): int</TD></TR>
<TR><TD ALIGN="LEFT" >- getAccessoriesAP(type: String): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getDefense(combined: boolean): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getDriveFormExp(name: String): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getDriveFormLevel(name: String): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getEquippedAbilityLevel(string: String): int[]</TD></TR>
<TR><TD ALIGN="LEFT" >+ getEquippedAccessory(slot: int): ItemStack</TD></TR>
<TR><TD ALIGN="LEFT" >+ getEquippedArmor(slot: int): ItemStack</TD></TR>
<TR><TD ALIGN="LEFT" >+ getEquippedItem(slot: int): ItemStack</TD></TR>
<TR><TD ALIGN="LEFT" >+ getEquippedKeychain(form: ResourceLocation): ItemStack</TD></TR>
<TR><TD ALIGN="LEFT" >+ getExpNeeded(level: int, currentExp: int): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getMagic(combined: boolean): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getMagicLevel(name: String): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getMagicUses(name: String): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getMaterialAmount(material: Material): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getMaxAP(combined: boolean): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getNumberOfAbilitiesEquipped(ability: String): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getStrength(combined: boolean): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getSynthExpNeeded(level: int, currentExp: int): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasKnownRecipe(recipe: ResourceLocation): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isAbilityEquipped(string: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isAbilityEquipped(ability: String, index: int): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isWeaponUnlocked(weapon: Item): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ levelUpStatsAndDisplayMessage(player: Player, sound: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" >+ remDP(dp: double)</TD></TR>
<TR><TD ALIGN="LEFT" >+ remFP(cost: double)</TD></TR>
<TR><TD ALIGN="LEFT" >+ remFocus(cost: double)</TD></TR>
<TR><TD ALIGN="LEFT" >+ remMP(amount: double)</TD></TR>
<TR><TD ALIGN="LEFT" >+ remMagicCooldownTicks(ticks: int)</TD></TR>
<TR><TD ALIGN="LEFT" >+ remMagicUses(name: String, uses: int)</TD></TR>
<TR><TD ALIGN="LEFT" >+ remReflectTicks(ticks: int)</TD></TR>
<TR><TD ALIGN="LEFT" >+ removeAbility(ability: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ removeHearts(hearts: int)</TD></TR>
<TR><TD ALIGN="LEFT" >+ removeKnownRecipe(recipe: ResourceLocation)</TD></TR>
<TR><TD ALIGN="LEFT" >+ removeMaterial(material: Material, amount: int)</TD></TR>
<TR><TD ALIGN="LEFT" >+ removePartiesInvited(partyName: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ removeReactionCommand(command: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ removeShortcut(position: int)</TD></TR>
<TR><TD ALIGN="LEFT" >+ removeShotlockFromList(shotlock: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ serializeNBT(): CompoundTag</TD></TR>
<TR><TD ALIGN="LEFT" >+ unequipAbility(ability: String, index: int)</TD></TR>
<TR><TD ALIGN="LEFT" >+ unlockWeapon(weapon: ItemStack)</TD></TR>
<TR><TD ALIGN="LEFT" >+ unlockWeapon(registryName: String)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ShieldCapabilities2006620404[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ShieldCapabilities</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ canHoldInOffhandAlone(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ getLivingMotionModifier(player: LivingEntityPatch&lt;?&gt;, hand: InteractionHand): Map&lt;LivingMotion, StaticAnimation&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getUseAnimation(playerpatch: LivingEntityPatch&lt;?&gt;): UseAnim</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];
} 
} 

'edges    
AbstractClientPlayerPatch958924470 -> LocalPlayerPatch958924470[arrowhead=none, arrowtail=empty, dir=both];
ActionAnimation932445219 -> Armature706790665[label="modifyPose() -> searchJointByName()"];
ActionAnimation932445219 -> AttackAnimation932445219[arrowhead=none, arrowtail=empty, dir=both];
ActionAnimation932445219 -> BasicAttackAnimation932445219[label="getCoordVector() -> getCoordVector()"];
ActionAnimation932445219 -> BowAtkAnim407581839[label="getCoordVector() -> getCoordVector()"];
ActionAnimation932445219 -> DodgeAnimation932445219[arrowhead=none, arrowtail=empty, dir=both];
ActionAnimation932445219 -> EnderDragonActionAnimation1898981842[arrowhead=none, arrowtail=empty, dir=both];
ActionAnimation932445219 -> EnderDragonDeathAnimation1898981842[label="modifyPose() -> modifyPose()"];
ActionAnimation932445219 -> EnderDragonDynamicActionAnimation1898981842[arrowhead=none, arrowtail=empty, dir=both];
ActionAnimation932445219 -> EntityState932445219[label="move() -> inaction()"];
ActionAnimation932445219 -> FallAtkLoopAnim407581839[arrowhead=none, arrowtail=empty, dir=both];
ActionAnimation932445219 -> FallAtkStartAnim407581839[arrowhead=none, arrowtail=empty, dir=both];
ActionAnimation932445219 -> InvincibleAnimation932445219[arrowhead=none, arrowtail=empty, dir=both];
ActionAnimation932445219 -> JointTransform940194734[label="modifyPose() -> translation()"];
ActionAnimation932445219 -> LongHitAnimation932445219[arrowhead=none, arrowtail=empty, dir=both];
ActionAnimation932445219 -> MixedActionAnimation407581839[arrowhead=none, arrowtail=empty, dir=both];
ActionAnimation932445219 -> Pose940194734[label="modifyPose() -> getOrDefaultTransform()"];
ActionAnimation932445219 -> Vec3f1408080105[label="getCoordVector() -> toDoubleVector()"];
AimAnimation932445219 -> ClientAnimator7285613[label="tick() -> getCompositeLayer()"];
AimAnimation932445219 -> Layer7285613[label="tick() -> pause()"];
AimAnimation932445219 -> MathUtils1408080105[label="modifyPose() -> mulQuaternion()"];
AimAnimation932445219 -> ReboundAnimation932445219[arrowhead=none, arrowtail=empty, dir=both];
AimAnimation932445219 -> StaticAnimation932445219[label="lookDown
[0..1]"];
AimAnimation932445219 -> StaticAnimation932445219[label="lookUp
[0..1]"];
AimAnimation932445219 -> StaticAnimation932445219[label="lying
[0..1]"];
AirAttack1729445901 -> CapabilityItem1526551569[label="executeOnServer() -> getAutoAttckMotion()"];
AirAttack1729445901 -> EntityState932445219[label="isExecutableState() -> canBasicAttack()"];
AnimationEvent1055311857 -> TimePeriodEvent1473702605[arrowhead=none, arrowtail=empty, dir=both];
AnimationEvent1055311857 -> TimeStampedEvent1473702605[arrowhead=none, arrowtail=empty, dir=both];
AnimationManager940194734 -> StaticAnimation932445219[label="animationById
[0..*]"];
AnimationManager940194734 -> StaticAnimation932445219[label="animationByName
[0..*]"];
AnimationProperty1055311857 -> ActionAnimationProperty1189771108[arrowhead=none, arrowtail=empty, dir=both];
AnimationProperty1055311857 -> AttackAnimationProperty1189771108[arrowhead=none, arrowtail=empty, dir=both];
AnimationProperty1055311857 -> AttackPhaseProperty1189771108[arrowhead=none, arrowtail=empty, dir=both];
AnimationProperty1055311857 -> StaticAnimationProperty1189771108[arrowhead=none, arrowtail=empty, dir=both];
AttackAnimation932445219 -> EnderDragonAttackAnimation1898981842[arrowhead=none, arrowtail=empty, dir=both];
AttackEndEvent2128632067 -> FallAttackEvent513460519[arrowhead=none, arrowtail=empty, dir=both];
AttackSpeedModifyEvent2128632067 -> CapabilityItem1526551569[label="item
[0..1]"];
BasicAttack1729445901 -> EntityState932445219[label="isExecutableState() -> canBasicAttack()"];
BasicAttack1729445901 -> PlayerPatch187378472[label="executeOnServer() -> getSkill()"];
BasicAttack1729445901 -> SAOBasicAtkPatch1359210750[arrowhead=none, arrowtail=empty, dir=both];
BattleModeGui589115338 -> SkillContainer1729445901[label="skillIcons
[0..*]"];
Battojutsu1729445901 -> ServerPlayerPatch187378472[label="onReset() -> modifyLivingMotionByCurrentItem()"];
BerserkerSkill1441897516 -> ModIngameGui589115338[label="drawOnGui() -> drawTexturedModalRectFixCoord()"];
BladeRushSkill1402578624 -> StaticAnimation932445219[label="comboAnimations
[0..*]"];
Blueprint1184302865 -> StatesInTime1184302865[label="currentState
[0..1]"];
Blueprint1184302865 -> StatesInTime1184302865[label="timePairs
[0..*]"];
Builder1811032241 -> Skill1729445901[label="innateSkillByStyle
[0..*]"];
Builder1811032241 -> Skill1729445901[label="passiveSkill
[0..1]"];
Builder1816620056 -> Builder1811032241[arrowhead=none, arrowtail=empty, dir=both];
Builder1816620056 -> Builder49968088[arrowhead=none, arrowtail=empty, dir=both];
Builder2084080048 -> CapabilityItem1526551569[label="advancedGuardMotions
[0..*]"];
Builder2084080048 -> CapabilityItem1526551569[label="guardBreakMotions
[0..*]"];
Builder2084080048 -> CapabilityItem1526551569[label="guardMotions
[0..*]"];
Builder292324470 -> Builder2084080048[arrowhead=none, arrowtail=empty, dir=both];
Builder799340811 -> CapabilityItem1526551569[label="slamMotions
[0..*]"];
Builder957730873 -> Builder59794576[label="behaviorSeriesList
[0..*]"];
CapabilityItem1526551569 -> ArmorCapability1526551569[arrowhead=none, arrowtail=empty, dir=both];
CapabilityItem1526551569 -> RangedWeaponCapability1526551569[arrowhead=none, arrowtail=empty, dir=both];
CapabilityItem1526551569 -> ShieldCapability1526551569[arrowhead=none, arrowtail=empty, dir=both];
CapabilityItem1526551569 -> TagBasedSeparativeCapability1526551569[arrowhead=none, arrowtail=empty, dir=both];
CapabilityItem1526551569 -> WeaponCapability1526551569[arrowhead=none, arrowtail=empty, dir=both];
CapabilitySkill87429395 -> Skill1729445901[label="learnedSkills
[0..1]"];
CapabilitySkill87429395 -> SkillContainer1729445901[label="skillContainers
[0..*]"];
CapabilitySkill87429395 -> SkillContainer1729445901[label="slotByCategory
[0..1]"];
ClientEngine1764602473 -> RenderEngine1079770638[label="renderEngine
[0..1]"];
ComboExtender1995739160 -> CapabilityItem1526551569[label="onInitiate() -> getAutoAttckMotion()"];
ComboExtender1995739160 -> ModCapabilities1404457265[label="onInitiate() -> getPlayer()"];
ComboExtender1995739160 -> PlayerCapabilities1404457265[arrowhead=none];
ComboExtender1995739160 -> PlayerPatch187378472[label="onInitiate() -> getSkill()"];
ComboExtender1995739160 -> SkillDataKey1965326925[label="combo
[0..1]"];
ComboExtender1995739160 -> SkillDataKey1965326925[label="finisherData
[0..1]"];
ComboExtender1995739160 -> SkillDataManager1729445901[label="onInitiate() -> getDataValue()"];
ConditionalWeaponInnateSkill1402578624 -> FatalDrawSkill1402578624[arrowhead=none, arrowtail=empty, dir=both];
ConditionalWeaponInnateSkill1402578624 -> LivingEntityPatch1466425223[label="executeOnServer() -> playAnimationSynchronized()"];
ConditionalWeaponInnateSkill1402578624 -> Phase688201195[label="registerPropertiesToAnimation() -> addProperties()"];
ConditionalWeaponInnateSkill1402578624 -> ServerPlayerPatch187378472[label="selector
[0..1]"];
ConditionalWeaponInnateSkill1402578624 -> Skill1729445901[label="executeOnServer() -> executeOnServer()"];
ConditionalWeaponInnateSkill1402578624 -> StaticAnimation932445219[label="attackAnimations
[0..*]"];
ControllEngine1079770638 -> CapabilityItem1526551569[label="swapHandKeyPressed() -> canBePlacedOffhand()"];
ControllEngine1079770638 -> LivingEntityPatch1466425223[label="swapHandKeyPressed() -> getHoldingItemCapability()"];
ControllEngine1079770638 -> LocalPlayerPatch958924470[label="playerpatch
[0..1]"];
ControllEngine1079770638 -> Skill1729445901[label="dodgeKeyPressed() -> isExecutableState()"];
DamageSourceElements1271590204 -> ExtraDamageInstance1271590204[label="extraDamages
[0..*]"];
DamageSourceElements1271590204 -> ValueModifier1408080105[label="damageModifier
[0..1]"];
DodgeSkill308138524 -> EntityState932445219[label="isExecutableState() -> canUseSkill()"];
DodgeSkill308138524 -> KnockdownWakeupSkill308138524[arrowhead=none, arrowtail=empty, dir=both];
DodgeSkill308138524 -> LivingEntityPatch1466425223[label="executeOnServer() -> playAnimationSynchronized()"];
DodgeSkill308138524 -> PlayerPatch187378472[label="getExecutionPacket() -> getSkill()"];
DodgeSkill308138524 -> ServerPlayerPatch187378472[label="executeOnServer() -> changeModelYRot()"];
DodgeSkill308138524 -> StaticAnimation932445219[label="animations
[0..*]"];
DodgeSkill308138524 -> StepSkill308138524[arrowhead=none, arrowtail=empty, dir=both];
DynamicAnimation932445219 -> StaticAnimation932445219[arrowhead=none, arrowtail=empty, dir=both];
EnderDragonAttackAnimation1898981842 -> Animator940194734[label="tick() -> getPlayerFor()"];
EnderDragonAttackAnimation1898981842 -> DynamicAnimation932445219[label="getPoseByTime() -> getPoseByTime()"];
EnderDragonAttackAnimation1898981842 -> EnderDragonActionAnimation1898981842[arrowhead=none];
EnderDragonAttackAnimation1898981842 -> EnderDragonDynamicActionAnimation1898981842[arrowhead=none];
EnderDragonAttackAnimation1898981842 -> EnderDraonWalkAnimation1898981842[arrowhead=none];
EnderDragonAttackAnimation1898981842 -> EpicFightRenderTypes1661413032[label="renderDebugging() -> debugQuads()"];
EnderDragonAttackAnimation1898981842 -> FABRIK1408080105[label="applyFabrikToJoint() -> run()", arrowhead=none];
EnderDragonAttackAnimation1898981842 -> IKInfo1898981842[label="ikInfos
[0..*]"];
EnderDragonAttackAnimation1898981842 -> Joint940194734[label="setIKInfo() -> searchPath()", arrowhead=none];
EnderDragonAttackAnimation1898981842 -> LivingEntityPatch1466425223[label="getPoseByTime() -> getModelMatrix()"];
EnderDragonAttackAnimation1898981842 -> Pose940194734[label="renderDebugging() -> putJointData()"];
EntityIndicator589115338 -> HealthBarIndicator589115338[arrowhead=none, arrowtail=empty, dir=both];
EntityIndicator589115338 -> TargetIndicator589115338[arrowhead=none, arrowtail=empty, dir=both];
EntityPatch1466425223 -> AbstractClientPlayerPatch958924470[label="clientTick() -> clientTick()"];
EntityPatch1466425223 -> DragonFireballPatch529362023[label="onJoinWorld() -> onJoinWorld()"];
EntityPatch1466425223 -> HumanoidMobPatch1466425223[label="onStartTracking() -> onStartTracking()"];
EntityPatch1466425223 -> HurtableEntityPatch1466425223[arrowhead=none, arrowtail=empty, dir=both];
EntityPatch1466425223 -> MathUtils1408080105[label="getMatrix() -> getModelMatrixIntegral()"];
EntityPatch1466425223 -> MobPatch1466425223[label="onJoinWorld() -> onJoinWorld()"];
EntityPatch1466425223 -> PiglinPatch1713023975[label="processSpawnData() -> processSpawnData()"];
EntityPatch1466425223 -> ProjectilePatch529362023[arrowhead=none, arrowtail=empty, dir=both];
EntityPatch1466425223 -> ServerPlayerPatch187378472[label="onStartTracking() -> onStartTracking()"];
EntityPatch1466425223 -> WitherPatch1564462732[label="clientTick() -> clientTick()"];
EntityPatch1466425223 -> WitherSkullPatch529362023[label="onJoinWorld() -> onJoinWorld()"];
EntityPatch1466425223 -> ZombiePatch1713023975[label="processSpawnData() -> processSpawnData()"];
EpicFightEntityDamageSource1271590204 -> DamageSourceElements1271590204[label="damageSourceElements
[0..1]"];
EpicFightEntityDamageSource1271590204 -> StaticAnimation932445219[label="animation
[0..1]"];
EviscerateSkill1402578624 -> AnimationPlayer940194734[label="onInitiate() -> reset()"];
EviscerateSkill1402578624 -> LivingEntityPatch1466425223[label="executeOnServer() -> playAnimationSynchronized()"];
EviscerateSkill1402578624 -> ServerAnimator940194734[label="onInitiate() -> getPlayerFor()"];
EviscerateSkill1402578624 -> ServerPlayerPatch187378472[label="onInitiate() -> reserveAnimation()"];
EviscerateSkill1402578624 -> StaticAnimation932445219[label="first
[0..1]"];
EviscerateSkill1402578624 -> StaticAnimation932445219[label="second
[0..1]"];
ExtraDamageInstance1271590204 -> ExtraDamage702480138[label="calculator
[0..1]"];
GSBasicAtkPatch1569942983 -> EntityState932445219[label="isExecutableState() -> canBasicAttack()"];
GSBowInternal1569942983 -> Builder292324470[label="GetBuilder() -> setCategory()"];
GSFallAttack1569942983 -> CapabilityItem1526551569[label="executeOnServer() -> getAutoAttckMotion()"];
GSFallAttack1569942983 -> EntityState932445219[label="isExecutableState() -> canBasicAttack()"];
GSFallAttack1569942983 -> SkillDataManager1729445901[label="onInitiate() -> registerData()"];
GraspingSpireSkill1402578624 -> AttackAnimation932445219[label="first
[0..1]"];
GraspingSpireSkill1402578624 -> AttackAnimation932445219[label="second
[0..1]"];
GraspingSpireSkill1402578624 -> LivingEntityPatch1466425223[label="executeOnServer() -> playAnimationSynchronized()"];
GuardSkill311085290 -> CapabilityItem1526551569[label="advancedGuardMotions
[0..*]"];
GuardSkill311085290 -> CapabilityItem1526551569[label="guardBreakMotions
[0..*]"];
GuardSkill311085290 -> CapabilityItem1526551569[label="guardMotions
[0..*]"];
GuardSkill311085290 -> EntityState932445219[label="isExecutableState() -> hurt()"];
GuardSkill311085290 -> EpicFightCapabilities1229700656[label="dealEvent() -> getEntityPatch()"];
GuardSkill311085290 -> ExtendableEnumManager699248513[label="getTooltipArgsOfScreen() -> toTranslated()"];
GuardSkill311085290 -> HitParticleType448660060[label="guard() -> spawnParticleWithArgument()"];
GuardSkill311085290 -> HurtableEntityPatch1466425223[label="guard() -> knockBackEntity()"];
GuardSkill311085290 -> ImpactGuardSkill311085290[arrowhead=none, arrowtail=empty, dir=both];
GuardSkill311085290 -> ModIngameGui589115338[label="drawOnGui() -> drawTexturedModalRectFixCoord()"];
GuardSkill311085290 -> ParryingSkill311085290[arrowhead=none, arrowtail=empty, dir=both];
GuardSkill311085290 -> PlayerPatch187378472[label="advancedGuardMotions
[0..*]"];
GuardSkill311085290 -> PlayerPatch187378472[label="guardBreakMotions
[0..*]"];
GuardSkill311085290 -> PlayerPatch187378472[label="guardMotions
[0..*]"];
GuardSkill311085290 -> ServerPlayerPatch187378472[label="guard() -> consumeStamina()"];
HurtEvent2128632067 -> Post1021056518[arrowhead=none, arrowtail=empty, dir=both];
HurtEvent2128632067 -> Pre1021056518[arrowhead=none, arrowtail=empty, dir=both];
HurtableEntityPatch1466425223 -> EnderDragonPatch398217887[label="serverTick() -> serverTick()"];
HurtableEntityPatch1466425223 -> EndermanPatch1713023975[label="serverTick() -> serverTick()"];
HurtableEntityPatch1466425223 -> GlobalMobPatch1466425223[arrowhead=none, arrowtail=empty, dir=both];
HurtableEntityPatch1466425223 -> LivingEntityPatch1466425223[arrowhead=none, arrowtail=empty, dir=both];
HurtableEntityPatch1466425223 -> PlayerPatch187378472[label="serverTick() -> serverTick()"];
HurtableEntityPatch1466425223 -> WitherPatch1564462732[label="serverTick() -> serverTick()"];
HyperVitalitySkill1441897516 -> ModIngameGui589115338[label="drawOnGui() -> drawTexturedModalRectFixCoord()"];
IndirectEpicFightDamageSource1271590204 -> DamageSourceElements1271590204[label="damageSourceElements
[0..1]"];
ItemCapabilityProvider1270927377 -> CapabilityItem1526551569[label="capability
[0..1]"];
ItemCapabilityProvider1270927377 -> CapabilityItem1526551569[label="optional
[0..1]"];
ItemSkins1236888648 -> ItemSkin1236888648[label="apply() -> deserialize()"];
JointMaskEntry56848592 -> JointMask56848592[label="defaultMask
[0..*]"];
JointMaskEntry56848592 -> JointMask56848592[label="masks
[0..*]"];
JsonModelLoader706790665 -> ActionAnimation932445219[label="loadStaticAnimation() -> addProperty()"];
LearnSkillButton855079773 -> Skill1729445901[label="skill
[0..1]"];
LethalSliceSkill1402578624 -> AttackAnimation932445219[label="doubleSwing
[0..1]"];
LethalSliceSkill1402578624 -> AttackAnimation932445219[label="elbow
[0..1]"];
LethalSliceSkill1402578624 -> AttackAnimation932445219[label="swing
[0..1]"];
LethalSliceSkill1402578624 -> LivingEntityPatch1466425223[label="executeOnServer() -> playAnimationSynchronized()"];
LiechtenauerSkill1402578624 -> CapabilityItem1526551569[label="canExecute() -> getInnateSkill()"];
LiechtenauerSkill1402578624 -> EpicFightCapabilities1229700656[label="canExecute() -> getItemStackCapability()"];
LiechtenauerSkill1402578624 -> HitParticleType448660060[label="onInitiate() -> spawnParticleWithArgument()"];
LiechtenauerSkill1402578624 -> HurtableEntityPatch1466425223[label="onInitiate() -> knockBackEntity()"];
LiechtenauerSkill1402578624 -> ServerPlayerPatch187378472[label="executeOnServer() -> modifyLivingMotionByCurrentItem()"];
LivingEntityPatch1466425223 -> PlayerPatch187378472[arrowhead=none, arrowtail=empty, dir=both];
LocalPlayerPatch958924470 -> EntityPatch1466425223[label="clientTick() -> getAngleTo()"];
LocalPlayerPatch958924470 -> EntityState932445219[label="clientTick() -> turningLocked()"];
MainFrameAnimation932445219 -> ActionAnimation932445219[arrowhead=none, arrowtail=empty, dir=both];
MeteorSlamSkill396813401 -> CapabilityItem1526551569[label="slamMotions
[0..*]"];
MeteorSlamSkill396813401 -> PlayerPatch187378472[label="slamMotions
[0..*]"];
MeteorSlamSkill396813401 -> StaticAnimation932445219[label="slamMotions
[0..*]"];
MirrorAnimation932445219 -> ClientAnimator7285613[label="begin() -> playAnimation()"];
MirrorAnimation932445219 -> StaticAnimation932445219[label="mirror
[0..1]"];
MirrorAnimation932445219 -> StaticAnimation932445219[label="original
[0..1]"];
MobPatch1466425223 -> WitherPatch1564462732[arrowhead=none, arrowtail=empty, dir=both];
ModIngameGui589115338 -> BattleModeGui589115338[arrowhead=none, arrowtail=empty, dir=both];
ModIngameGui589115338 -> EntityIndicator589115338[arrowhead=none, arrowtail=empty, dir=both];
OffAnimation932445219 -> Animator940194734[label="begin() -> playAnimation()"];
OffAnimation932445219 -> Layer7285613[label="begin() -> off()"];
PassiveSkill1441897516 -> BerserkerSkill1441897516[arrowhead=none, arrowtail=empty, dir=both];
PassiveSkill1441897516 -> DeathHarvestSkill1441897516[arrowhead=none, arrowtail=empty, dir=both];
PassiveSkill1441897516 -> EmergencyEscapeSkill1441897516[arrowhead=none, arrowtail=empty, dir=both];
PassiveSkill1441897516 -> EnduranceSkill1441897516[arrowhead=none, arrowtail=empty, dir=both];
PassiveSkill1441897516 -> ForbiddenStrengthSkill1441897516[arrowhead=none, arrowtail=empty, dir=both];
PassiveSkill1441897516 -> HyperVitalitySkill1441897516[arrowhead=none, arrowtail=empty, dir=both];
PassiveSkill1441897516 -> StaminaPillagerSkill1441897516[arrowhead=none, arrowtail=empty, dir=both];
PassiveSkill1441897516 -> SwordmasterSkill1441897516[arrowhead=none, arrowtail=empty, dir=both];
PassiveSkill1441897516 -> TechnicianSkill1441897516[arrowhead=none, arrowtail=empty, dir=both];
PlayerEvent2128632067 -> ActionEvent2128632067[arrowhead=none, arrowtail=empty, dir=both];
PlayerEvent2128632067 -> AttackEndEvent2128632067[arrowhead=none, arrowtail=empty, dir=both];
PlayerEvent2128632067 -> AttackSpeedModifyEvent2128632067[arrowhead=none, arrowtail=empty, dir=both];
PlayerEvent2128632067 -> BasicAttackEvent2128632067[arrowhead=none, arrowtail=empty, dir=both];
PlayerEvent2128632067 -> DealtDamageEvent2128632067[arrowhead=none, arrowtail=empty, dir=both];
PlayerEvent2128632067 -> HurtEvent2128632067[arrowhead=none, arrowtail=empty, dir=both];
PlayerEvent2128632067 -> ItemUseEndEvent2128632067[arrowhead=none, arrowtail=empty, dir=both];
PlayerEvent2128632067 -> ModifyBaseDamageEvent2128632067[arrowhead=none, arrowtail=empty, dir=both];
PlayerEvent2128632067 -> MovementInputEvent2128632067[arrowhead=none, arrowtail=empty, dir=both];
PlayerEvent2128632067 -> ProjectileHitEvent2128632067[arrowhead=none, arrowtail=empty, dir=both];
PlayerEvent2128632067 -> RightClickItemEvent2128632067[arrowhead=none, arrowtail=empty, dir=both];
PlayerEvent2128632067 -> SkillEvent2128632067[arrowhead=none, arrowtail=empty, dir=both];
PlayerEvent2128632067 -> SkillExecuteEvent2128632067[arrowhead=none, arrowtail=empty, dir=both];
PlayerEvent2128632067 -> StaminaConsumeEvent2128632067[arrowhead=none, arrowtail=empty, dir=both];
PlayerEventListener2128632067 -> EventTrigger2128632067[label="events
[0..*]"];
PlayerEventListener2128632067 -> EventType1955790716[label="events
[0..*]"];
PlayerEventListener2128632067 -> PlayerPatch187378472[label="playerpatch
[0..1]"];
PlayerPatch187378472 -> AbstractClientPlayerPatch958924470[arrowhead=none, arrowtail=empty, dir=both];
PlayerPatch187378472 -> EntityState932445219[label="serverTick() -> inaction()"];
PlayerPatch187378472 -> EpicFightEntityDamageSource1271590204[arrowhead=none];
PlayerPatch187378472 -> ExtendableEnumManager699248513[label="copySkillsFrom() -> universalValues()"];
PlayerPatch187378472 -> Formulars1408080105[label="getModifiedAttackSpeed() -> getAttackSpeedPenalty()"];
PlayerPatch187378472 -> HurtableEntityPatch1466425223[label="serverTick() -> serverTick()"];
PlayerPatch187378472 -> IndirectEpicFightDamageSource1271590204[arrowhead=none];
PlayerPatch187378472 -> PlayerEventListener2128632067[label="eventListeners
[0..1]"];
PlayerPatch187378472 -> ServerPlayerPatch187378472[arrowhead=none, arrowtail=empty, dir=both];
RangedWeaponCapability1526551569 -> TridentCapability1526551569[arrowhead=none, arrowtail=empty, dir=both];
RenderEngine1079770638 -> BattleModeGui589115338[label="guiSkillBar
[0..1]"];
SAOSingleSwordInternal1359210750 -> SkillDataManager1729445901[label="onInitiate() -> registerData()"];
SimpleWeaponInnateSkill1402578624 -> GuillotineAxeSkill1402578624[arrowhead=none, arrowtail=empty, dir=both];
SimpleWeaponInnateSkill1402578624 -> ThunderPunishmentSkill1402578624[arrowhead=none, arrowtail=empty, dir=both];
Skill1729445901 -> AirAttack1729445901[arrowhead=none, arrowtail=empty, dir=both];
Skill1729445901 -> AssassinationSkill396813401[arrowhead=none, arrowtail=empty, dir=both];
Skill1729445901 -> BasicAttack1729445901[arrowhead=none, arrowtail=empty, dir=both];
Skill1729445901 -> Battojutsu1729445901[arrowhead=none, arrowtail=empty, dir=both];
Skill1729445901 -> ChargingJumpSkill316467462[arrowhead=none, arrowtail=empty, dir=both];
Skill1729445901 -> ComboExtender1995739160[arrowhead=none, arrowtail=empty, dir=both];
Skill1729445901 -> ConditionalWeaponInnateSkill1402578624[label="executeOnServer() -> executeOnServer()"];
Skill1729445901 -> CounterSkill396813401[arrowhead=none, arrowtail=empty, dir=both];
Skill1729445901 -> DodgeSkill308138524[arrowhead=none, arrowtail=empty, dir=both];
Skill1729445901 -> EntityState932445219[label="isExecutableState() -> canUseSkill()"];
Skill1729445901 -> EpicFightNetworkManager149000368[label="cancelOnServer() -> sendToPlayer()"];
Skill1729445901 -> GSBasicAtkPatch1569942983[arrowhead=none, arrowtail=empty, dir=both];
Skill1729445901 -> GSBowInternal1569942983[arrowhead=none, arrowtail=empty, dir=both];
Skill1729445901 -> GSFallAttack1569942983[arrowhead=none, arrowtail=empty, dir=both];
Skill1729445901 -> GSSwordInternal1569942983[arrowhead=none, arrowtail=empty, dir=both];
Skill1729445901 -> GuardSkill311085290[arrowhead=none, arrowtail=empty, dir=both];
Skill1729445901 -> MeteorSlamSkill396813401[arrowhead=none, arrowtail=empty, dir=both];
Skill1729445901 -> PassiveSkill1441897516[arrowhead=none, arrowtail=empty, dir=both];
Skill1729445901 -> SAOSingleSwordInternal1359210750[arrowhead=none, arrowtail=empty, dir=both];
Skill1729445901 -> SimpleWeaponInnateSkill1402578624[label="executeOnServer() -> executeOnServer()"];
Skill1729445901 -> StaminaPillagerSkill1441897516[label="getTooltipArgsOfScreen() -> getTooltipArgsOfScreen()"];
Skill1729445901 -> SwordmasterSkill1441897516[label="getTooltipArgsOfScreen() -> getTooltipArgsOfScreen()"];
Skill1729445901 -> WeaponInnateSkill1402578624[arrowhead=none, arrowtail=empty, dir=both];
SkillBookScreen1779895588 -> Skill1729445901[label="skill
[0..1]"];
SkillBuildEvent90245 -> Skill1729445901[label="learnableSkills
[0..*]"];
SkillBuildEvent90245 -> Skill1729445901[label="skills
[0..*]"];
SkillCapabilityProvider1270927377 -> CapabilitySkill87429395[label="capability
[0..1]"];
SkillCapabilityProvider1270927377 -> CapabilitySkill87429395[label="optional
[0..1]"];
SkillContainer1729445901 -> PlayerPatch187378472[label="executer
[0..1]"];
SkillContainer1729445901 -> RenderEngine1079770638[label="sendExecuteRequest() -> unlockRotation()"];
SkillContainer1729445901 -> Skill1729445901[label="containingSkill
[0..1]"];
SkillContainer1729445901 -> SkillDataManager1729445901[label="skillDataManager
[0..1]"];
SkillEditScreen1779895588 -> CapabilitySkill87429395[label="skills
[0..1]"];
SkillEditScreen1779895588 -> LearnSkillButton855079773[label="learnedSkillButtons
[0..*]"];
SkillEditScreen1779895588 -> SlotButton855079773[label="selectedSlotButton
[0..1]"];
SkillEditScreen1779895588 -> SlotButton855079773[label="slotButtons
[0..*]"];
SkillEvent2128632067 -> Check1201309306[arrowhead=none, arrowtail=empty, dir=both];
SkillEvent2128632067 -> Consume1201309306[arrowhead=none, arrowtail=empty, dir=both];
SkillEvent2128632067 -> Skill1729445901[label="skill
[0..1]"];
SkillExecuteEvent2128632067 -> SkillContainer1729445901[label="skillContainer
[0..1]"];
SkillManager1141039208 -> Builder292324470[label="register() -> setRegistryName()"];
SkillManager1141039208 -> SkillBookLootModifier367894286[label="buildAll() -> createSkillLootTable()"];
SlotButton855079773 -> Skill1729445901[label="iconSkill
[0..1]"];
SlotSelectScreen1779895588 -> SkillBookScreen1779895588[label="parent
[0..1]"];
SlotSelectScreen1779895588 -> SkillContainer1729445901[label="containers
[0..*]"];
StateSpectrum932445219 -> StatesInTime1184302865[label="timePairs
[0..*]"];
StaticAnimation932445219 -> ActionAnimation932445219[label="modifyPose() -> modifyPose()"];
StaticAnimation932445219 -> AimAnimation932445219[arrowhead=none, arrowtail=empty, dir=both];
StaticAnimation932445219 -> AnimationManager940194734[label="loadAnimation() -> findAnimationById()"];
StaticAnimation932445219 -> AnimationProperty1055311857[label="properties
[0..*]"];
StaticAnimation932445219 -> Armature706790665[label="armature
[0..1]"];
StaticAnimation932445219 -> BasicAttackAnimation932445219[label="onLoaded() -> onLoaded()"];
StaticAnimation932445219 -> Blueprint1184302865[label="stateSpectrumBlueprint
[0..1]"];
StaticAnimation932445219 -> DodgeAnimation932445219[label="end() -> end()"];
StaticAnimation932445219 -> EnderDragonActionAnimation1898981842[label="loadAnimation() -> loadAnimation()"];
StaticAnimation932445219 -> EnderDragonAttackAnimation1898981842[label="loadAnimation() -> loadAnimation()"];
StaticAnimation932445219 -> EnderDragonDeathAnimation1898981842[label="loadAnimation() -> loadAnimation()"];
StaticAnimation932445219 -> EnderDragonDynamicActionAnimation1898981842[label="loadAnimation() -> loadAnimation()"];
StaticAnimation932445219 -> EnderDraonWalkAnimation1898981842[arrowhead=none, arrowtail=empty, dir=both];
StaticAnimation932445219 -> FallAtkLoopAnim407581839[label="end() -> end()"];
StaticAnimation932445219 -> FallAtkStartAnim407581839[label="end() -> end()"];
StaticAnimation932445219 -> ItemSkins1236888648[label="begin() -> getItemSkin()"];
StaticAnimation932445219 -> JointMask56848592[label="getBindModifier() -> of()"];
StaticAnimation932445219 -> MainFrameAnimation932445219[arrowhead=none, arrowtail=empty, dir=both];
StaticAnimation932445219 -> MirrorAnimation932445219[arrowhead=none, arrowtail=empty, dir=both];
StaticAnimation932445219 -> MovementAnimation932445219[arrowhead=none, arrowtail=empty, dir=both];
StaticAnimation932445219 -> OffAnimation932445219[arrowhead=none, arrowtail=empty, dir=both];
StaticAnimation932445219 -> StateSpectrum932445219[label="stateSpectrum
[0..1]"];
StaticAnimation932445219 -> TimePeriodEvent1473702605[label="tick() -> executeIfRightSide()"];
StaticAnimation932445219 -> TimeStampedEvent1473702605[label="tick() -> executeIfRightSide()"];
StaticAnimation932445219 -> TrailInfo56848592[label="begin() -> overwrite()"];
TagBasedSeparativeCapability1526551569 -> CapabilityItem1526551569[label="defaultCapability
[0..1]"];
TagBasedSeparativeCapability1526551569 -> CapabilityItem1526551569[label="variations
[0..*]"];
WeaponCapability1526551569 -> GenShinBowCap818137714[arrowhead=none, arrowtail=empty, dir=both];
WeaponCapability1526551569 -> KKWeaponCapabilities2006620404[arrowhead=none, arrowtail=empty, dir=both];
WeaponCapability1526551569 -> KnuckleCapability1526551569[arrowhead=none, arrowtail=empty, dir=both];
WeaponCapability1526551569 -> ShieldCapabilities2006620404[arrowhead=none, arrowtail=empty, dir=both];
WeaponCapability1526551569 -> SingleSwordCap818137714[arrowhead=none, arrowtail=empty, dir=both];
WeaponCapability1526551569 -> Skill1729445901[label="innateSkill
[0..*]"];
WeaponCapability1526551569 -> Skill1729445901[label="passiveSkill
[0..1]"];
WeaponCapabilityPresetRegistryEvent90245 -> Builder1816620056[label="typeEntry
[0..*]"];
WeaponInnateSkill1402578624 -> BladeRushSkill1402578624[arrowhead=none, arrowtail=empty, dir=both];
WeaponInnateSkill1402578624 -> ConditionalWeaponInnateSkill1402578624[arrowhead=none, arrowtail=empty, dir=both];
WeaponInnateSkill1402578624 -> EviscerateSkill1402578624[arrowhead=none, arrowtail=empty, dir=both];
WeaponInnateSkill1402578624 -> GraspingSpireSkill1402578624[arrowhead=none, arrowtail=empty, dir=both];
WeaponInnateSkill1402578624 -> LethalSliceSkill1402578624[arrowhead=none, arrowtail=empty, dir=both];
WeaponInnateSkill1402578624 -> LiechtenauerSkill1402578624[arrowhead=none, arrowtail=empty, dir=both];
WeaponInnateSkill1402578624 -> SimpleWeaponInnateSkill1402578624[arrowhead=none, arrowtail=empty, dir=both];
WitherPatch1564462732 -> AttackResult699248513[label="tryHurt() -> blocked()"];
WitherPatch1564462732 -> Builder957730873[label="initAI() -> build()"];
WitherPatch1564462732 -> EntityPatch1466425223[label="clientTick() -> clientTick()"];
WitherPatch1564462732 -> HurtableEntityPatch1466425223[label="serverTick() -> serverTick()"];
WitherPatch1564462732 -> LivingEntityPatch1466425223[label="blockingEntity
[0..1]"];
    
}
@enduml