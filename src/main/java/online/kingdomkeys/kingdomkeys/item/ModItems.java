package online.kingdomkeys.kingdomkeys.item;

import net.minecraft.client.gui.ScreenManager;
import net.minecraft.inventory.EquipmentSlotType;
import net.minecraft.inventory.container.ContainerType;
import net.minecraft.item.Food;
import net.minecraft.item.Item;
import net.minecraft.util.ResourceLocation;
import net.minecraftforge.api.distmarker.Dist;
import net.minecraftforge.common.extensions.IForgeContainerType;
import net.minecraftforge.event.RegistryEvent;
import net.minecraftforge.eventbus.api.SubscribeEvent;
import net.minecraftforge.fml.DistExecutor;
import net.minecraftforge.fml.common.Mod;
import net.minecraftforge.registries.IForgeRegistry;
import net.minecraftforge.registries.IForgeRegistryEntry;
import online.kingdomkeys.kingdomkeys.KingdomKeys;
import online.kingdomkeys.kingdomkeys.client.gui.GuiSynthesisBag;
import online.kingdomkeys.kingdomkeys.client.sound.ModSounds;
import online.kingdomkeys.kingdomkeys.container.ContainerSynthesisBag;
import online.kingdomkeys.kingdomkeys.lib.Strings;
import online.kingdomkeys.kingdomkeys.synthesis.material.SynthesisItem;

public class ModItems {
    //Organization
    public static Item malice, sanction, overlord, veneration, autocracy, conquest, terminus, judgement, discipline, aristocracy, superiority, aggression, fury, despair, triumph, ruination, domination, annihilation, tyrant, magnificence, infinity, interdiction, roundFan, absolute, standalone, killerbee, stingray, counterweight, precision, dualHead, bahamut, gullwing, blueFrame, starShell, sunrise, ignition, armstrong, hardBoiledHeat, diabloEye, doubleTap, stardust, energyMuzzle, crimeAndPunishment, cupidsArrow, finalWeapon, sharpshooter, dryer, trumpet, zephyr, moonglade, aer, nescience, brume, asura, crux, paladin, fellking, nightcloud, shimmer, vortex, scission, heavenfall, aether, mazzaroth, hegemon, foxfire, yaksha, cynosura, dragonreign, lindworm, broom, wyvern, testerZero, productOne, deepFreeze, cryoliteShield, falseTheory, glacier, absoluteZero, gunz, mindel, snowslide, iceberg, inquisition, scrutiny, empiricism, edification, contrivance, wurm, subzero, coldBlood, diamondShield, aegis, frozenPride, potLid, snowman, reticence, goliath, copperRed, daybreak, colossus, ursaMajor, megacosm, terrene, fuligin, hardWinter, firefly, harbinger, redwood, sequoia, ironBlack, earthshine, octiron, hyperion, clarity, oneThousandAndOneNights, cardinalVirtue, skysplitter, bleepBloopBop, monolith, blackPrimer, whiteTome, illicitResearch, buriedSecrets, arcaneCompendium, dissentersNotes, nefariousCodex, mysticAlbum, cursedManual, tabooText, eldritchEsoterica, freakishBestiary, madmansVita, untitledWritings, abandonedDogma, atlasOfOmens, revoltingScrapbook, lostHeterodoxy, otherworldlyTales, indescribableLore, radicalTreatise, bookOfRetribution, midnightSnack, dearDiary, newMoon, werewolf, artemis, luminary, selene, moonrise, astrologia, crater, lunarPhase, crescent, gibbous, berserker, twilight, queenOfTheNight, balsamicMoon, orbit, lightYear, kingOfTheNight, moonset, horoscope, dichotomy, lunatic, justDesserts, bunnymoon, ashes, doldrums, delayedAction, diveBombers, combustion, moulinRouge, blazeOfGlory, prometheus, ifrit, magmaOcean, volcanics, inferno, sizzlingEdge, corona, ferrisWheel, burnout, omegaTrinity, outbreak, doubleEdge, wildfire, prominence, eternalFlames, pizzaCut, conformers, basicModel, tuneUp, quartet, quintet, overture, oldHand, daCapo, powerChord, fermata, interlude, serenade, songbird, riseToFame, rockStar, eightFinger, concerto, harmonics, millionBucks, fortissimo, upToEleven, sanctuary, arpeggio, princeOfAwesome, afterSchool, theFool, theMagician, theStar, theMoon, justice, theHierophant, theWorld, temperance, theHighPriestess, theTower, theHangedMan, death, theHermit, strength, theLovers, theChariot, theSun, theDevil, theEmpress, theEmperor, theJoker, fairGame, finestFantasy13, highRollersSecret, fickleErica, jiltedAnemone, proudAmaryllis, madSafflower, poorMelissa, tragicAllium, mournfulCineria, pseudoSilene, faithlessDigitalis, grimMuscari, docileVallota, quietBelladonna, partingIpheion, loftyGerbera, gallantAchillea, noblePeony, fearsomeAnise, vindictiveThistle, fairHelianthus, solemnMagnolia, hallowedLotus, gracefulDahlia, stirringLadle, daintyBellflowers, trancheuse, orage, tourbillon, tempete, carmin, meteore, etoile, irregulier, dissonance, eruption, soleilCouchant, indigo, vague, deluge, rafale, typhon, extirpeur, croixDuSud, lumineuse, clairDeLune, volDeNuit, foudre, demoiselle, ampoule;
    //Keyblades
    public static Item abaddonPlasma, abyssalTide, acedsKeyblade, allForOne, astralBlast, aubade, avasKeyblade, bondOfFlame, brightcrest, chaosRipper, circleOfLife, counterpoint, crabclaw, crownOfGuilt, darkerThanDark, darkgnaw, decisivePumpkin, destinysEmbrace, diamondDust, divewing, divineRose, dualDisc, earthshaker, endOfPain, endsOfTheEarth, fairyHarp, fairyStars, fatalCrest, fenrir, ferrisGear, flameLiberator, followtheWind, frolicFlame, glimpseOfDarkness, guardianBell, guardianSoul, gulasKeyblade, gullWing, herosCrest, hiddenDragon, hyperdrive, incompleteKiblade, invisKeyblade, irasKeyblade, jungleKing, keybladeOfPeoplesHearts, kiblade, kingdomKey, kingdomKeyD, knockoutPunch, ladyLuck, leviathan, lionheart, lostMemory, lunarEclipse, markOfAHero, mastersDefender, maverickFlare, metalChocobo, midnightRoar, mirageSplit, missingAche, monochrome, moogleOGlory, mysteriousAbyss, nightmaresEnd, nightmaresEndAndMirageSplit, noName, noNameBBS, oathkeeper, oblivion, oceansRage, olympia, omegaWeapon, ominousBlight, oneWingedAngel, painOfSolitude, photonDebugger, pixiePetal, pumpkinhead, rainfell, rejectionOfFate, royalRadiance, rumblingRose, shootingStar, signOfInnocence, silentDirge, skullNoise, sleepingLion, soulEater, spellbinder, starSeeker, starlight, stormfall, strokeOfMidnight, sweetDreams, sweetMemories, sweetstack, threeWishes, totalEclipse, treasureTrove, trueLightsFlight, twilightBlaze, twoBecomeOne, ultimaWeaponBBS, ultimaWeaponDDD, ultimaWeaponKH1, ultimaWeaponKH2, ultimaWeaponKH3, umbrella, unbound, victoryLine, voidGear, waytotheDawn, waywardWind, winnersProof, wishingLamp, wishingStar, woodenKeyblade, woodenStick, youngXehanortsKeyblade, zeroOne;
    //Keychains
    public static Item abaddonPlasmaChain, abyssalTideChain, acedsKeybladeChain, allForOneChain, astralBlastChain, aubadeChain, avasKeybladeChain, bondOfFlameChain, brightcrestChain, chaosRipperChain, circleOfLifeChain, counterpointChain, crabclawChain, crownOfGuiltChain, darkerThanDarkChain, darkgnawChain, decisivePumpkinChain, destinysEmbraceChain, diamondDustChain, divewingChain, divineRoseChain, dualDiscChain, earthshakerChain, endOfPainChain, endsOfTheEarthChain, fairyHarpChain, fairyStarsChain, fatalCrestChain, fenrirChain, ferrisGearChain, flameLiberatorChain, followtheWindChain, frolicFlameChain, glimpseOfDarknessChain, guardianBellChain, guardianSoulChain, gulasKeybladeChain, gullWingChain, herosCrestChain, hiddenDragonChain, hyperdriveChain, incompleteKibladeChain, invisKeybladeChain, irasKeybladeChain, jungleKingChain, keybladeOfPeoplesHeartsChain, kibladeChain, kingdomKeyChain, kingdomKeyDChain, knockoutPunchChain, ladyLuckChain, leviathanChain, lionheartChain, lostMemoryChain, lunarEclipseChain, markOfAHeroChain, mastersDefenderChain, maverickFlareChain, metalChocoboChain, midnightRoarChain, mirageSplitChain, missingAcheChain, monochromeChain, moogleOGloryChain, mysteriousAbyssChain, nightmaresEndChain, nightmaresEndAndMirageSplitChain, noNameChain, noNameBBSChain, oathkeeperChain, oblivionChain, oceansRageChain, olympiaChain, omegaWeaponChain, ominousBlightChain, oneWingedAngelChain, painOfSolitudeChain, photonDebuggerChain, pixiePetalChain, pumpkinheadChain, rainfellChain, rejectionOfFateChain, royalRadianceChain, rumblingRoseChain, shootingStarChain, signOfInnocenceChain, silentDirgeChain, skullNoiseChain, sleepingLionChain, soulEaterChain, spellbinderChain, starSeekerChain, starlightChain, stormfallChain, strokeOfMidnightChain, sweetDreamsChain, sweetMemoriesChain, sweetstackChain, threeWishesChain, totalEclipseChain, treasureTroveChain, trueLightsFlightChain, twilightBlazeChain, twoBecomeOneChain, ultimaWeaponBBSChain, ultimaWeaponDDDChain, ultimaWeaponKH1Chain, ultimaWeaponKH2Chain, ultimaWeaponKH3Chain, umbrellaChain, unboundChain, victoryLineChain, voidGearChain, waytotheDawnChain, waywardWindChain, winnersProofChain, wishingLampChain, wishingStarChain, youngXehanortsKeybladeChain, zeroOneChain;    //Music discs
    //Music
    public static Item disc_Birth_by_Sleep_A_Link_to_the_Future, disc_Darkness_of_the_Unknown, disc_Dearly_Beloved_Symphony_Version, disc_Dream_Drop_Distance_The_Next_Awakening, disc_Hikari_KINGDOM_Instrumental_Version, disc_L_Oscurita_Dell_Ignoto, disc_Musique_pour_la_tristesse_de_Xion, disc_No_More_Bugs_Bug_Version, disc_Organization_XIII, disc_Sanctuary, disc_Simple_And_Clean_PLANITb_Remix, disc_Sinister_Sundown, disc_The_13th_Anthology;
    //Armor
    public static Item organizationRobe_Helmet, organizationRobe_Chestplate, organizationRobe_Leggings, organizationRobe_Boots, xemnas_Helmet, xemnas_Chestplate, xemnas_Leggings, xemnas_Boots, terra_Helmet, terra_Chestplate, terra_Leggings, terra_Boots, aqua_Helmet, aqua_Chestplate, aqua_Leggings, aqua_Boots, ventus_Helmet, ventus_Chestplate, ventus_Leggings, ventus_Boots, eraqus_Helmet, eraqus_Chestplate, eraqus_Leggings, eraqus_Boots, nightmareVentus_Helmet, nightmareVentus_Chestplate, nightmareVentus_Leggings, nightmareVentus_Boots, antiCoat_Helmet, antiCoat_Chestplate, antiCoat_Leggings, antiCoat_Boots, vanitas_Helmet, vanitas_Chestplate, vanitas_Leggings, vanitas_Boots;
    //Misc (Some of those won't be used) 
    public static Item  frostInfusedSnowBall, stormyInfusedIron, mythrilInfusedDiamond, lightningInfusedGold, brightInfusedGlowStone, darkInfusedIron, abandonedKnowledge, dreamShield, dreamStaff, dreamSword, gummiShip, panacaea, defenseBoost, magicBoost, powerBoost, aPBoost, driveRecovery, highDriveRecovery, munny, emptyBottle, potion, hiPotion, megaPotion, ether, megaEther, elixir, megalixir, hpOrb, driveOrb, magicOrb, heart, darkHeart, pureHeart, kingdomHearts, darkLeather, synthesisMaterial, recipe, iceCream, winnerStick, levelUpMagicFire, levelUpMagicBlizzard, levelUpMagicThunder, levelUpMagicCure, levelUpMagicAero, levelUpMagicStop, levelUpValor, levelUpWisdom, levelUpLimit, levelUpMaster, levelUpFinal, synthesisBag, synthesisBagM, synthesisBagL;
	public static Item blazingCrystal, blazingGem, blazingShard, blazingStone, brightCrystal, brightGem, brightShard, brightStone, frostShard, frostStone, frostGem, frostCrystal, lightningShard, lightningStone, lightningGem, lightningCrystal, lucidShard, lucidStone, lucidGem, lucidCrystal, powerShard, powerStone, powerGem, powerCrystal, darkShard, darkStone, darkGem, darkCrystal, denseShard, denseStone, denseGem, denseCrystal, twilightShard, twilightStone, twilightGem, twilightCrystal, mythrilShard, mythrilStone, mythrilGem, mythrilCrystal, stormyShard, stormyStone, stormyGem, stormyCrystal, remembranceShard,remembranceStone, remembranceGem, remembranceCrystal, energyShard, energyStone, energyGem, energyCrystal,serenityShard, serenityStone, serenityGem, serenityCrystal, orichalcum, orichalcumPlus, manifestIllusion, lostIllusion, tranquilCrystal, tranquilGem, tranquilShard, tranquilStone;

	@Mod.EventBusSubscriber(bus = Mod.EventBusSubscriber.Bus.MOD)
    public static class Registry {

        @SubscribeEvent
        public static void registerItems(final RegistryEvent.Register<Item> event) {
            //Generic property that will cover most standard items
            Item.Properties genericItemProperties = new Item.Properties().group(KingdomKeys.miscGroup);

            //Register and set item references here, no array needed here as only 1 thing needs to be registered
            event.getRegistry().registerAll(
                    //Keyblades
                    abaddonPlasma = createKeybladeItem(Strings.abaddonPlasma),
                    abyssalTide = createKeybladeItem(Strings.abyssalTide),
                    acedsKeyblade = createKeybladeItem(Strings.acedsKeyblade),
                    allForOne = createKeybladeItem(Strings.allForOne),
                    astralBlast = createKeybladeItem(Strings.astralBlast),
                    aubade = createKeybladeItem(Strings.aubade),
                    avasKeyblade = createKeybladeItem(Strings.avasKeyblade),
                    bondOfFlame = createKeybladeItem(Strings.bondOfFlame),
                    brightcrest = createKeybladeItem(Strings.brightcrest),
                    chaosRipper = createKeybladeItem(Strings.chaosRipper),
                    circleOfLife = createKeybladeItem(Strings.circleOfLife),
                    counterpoint = createKeybladeItem(Strings.counterpoint),
                    crabclaw = createKeybladeItem(Strings.crabclaw),
                    crownOfGuilt = createKeybladeItem(Strings.crownOfGuilt),
                    darkerThanDark = createKeybladeItem(Strings.darkerThanDark),
                    darkgnaw = createKeybladeItem(Strings.darkgnaw),
                    decisivePumpkin = createKeybladeItem(Strings.decisivePumpkin),
                    destinysEmbrace = createKeybladeItem(Strings.destinysEmbrace),
                    diamondDust = createKeybladeItem(Strings.diamondDust),
                    divewing = createKeybladeItem(Strings.divewing),
                    divineRose = createKeybladeItem(Strings.divineRose),
                    dualDisc = createKeybladeItem(Strings.dualDisc),
                    earthshaker = createKeybladeItem(Strings.earthshaker),
                    endOfPain = createKeybladeItem(Strings.endOfPain),
                    endsOfTheEarth = createKeybladeItem(Strings.endsOfTheEarth),
                    fairyHarp = createKeybladeItem(Strings.fairyHarp),
                    fairyStars = createKeybladeItem(Strings.fairyStars),
                    fatalCrest = createKeybladeItem(Strings.fatalCrest),
                    fenrir = createKeybladeItem(Strings.fenrir),
                    ferrisGear = createKeybladeItem(Strings.ferrisGear),
                    flameLiberator = createKeybladeItem(Strings.flameLiberator),
                    followtheWind = createKeybladeItem(Strings.followtheWind),
                    frolicFlame = createKeybladeItem(Strings.frolicFlame),
                    glimpseOfDarkness = createKeybladeItem(Strings.glimpseOfDarkness),
                    guardianBell = createKeybladeItem(Strings.guardianBell),
                    guardianSoul = createKeybladeItem(Strings.guardianSoul),
                    gulasKeyblade = createKeybladeItem(Strings.gulasKeyblade),
                    gullWing = createKeybladeItem(Strings.gullWing),
                    herosCrest = createKeybladeItem(Strings.herosCrest),
                    hiddenDragon = createKeybladeItem(Strings.hiddenDragon),
                    hyperdrive = createKeybladeItem(Strings.hyperdrive),
                    incompleteKiblade = createKeybladeItem(Strings.incompleteKiblade),
                    invisKeyblade = createKeybladeItem(Strings.invisKeyblade),
                    irasKeyblade = createKeybladeItem(Strings.irasKeyblade),
                    jungleKing = createKeybladeItem(Strings.jungleKing),
                    keybladeOfPeoplesHearts = createKeybladeItem(Strings.keybladeOfPeoplesHearts),
                    kiblade = createKeybladeItem(Strings.kiblade),
                    kingdomKey = createKeybladeItem(Strings.kingdomKey),
                    kingdomKeyD = createKeybladeItem(Strings.kingdomKeyD),
                    knockoutPunch = createKeybladeItem(Strings.knockoutPunch),
                    ladyLuck = createKeybladeItem(Strings.ladyLuck),
                    leviathan = createKeybladeItem(Strings.leviathan),
                    lionheart = createKeybladeItem(Strings.lionheart),
                    lostMemory = createKeybladeItem(Strings.lostMemory),
                    lunarEclipse = createKeybladeItem(Strings.lunarEclipse),
                    markOfAHero = createKeybladeItem(Strings.markOfAHero),
                    mastersDefender = createKeybladeItem(Strings.mastersDefender),
                    maverickFlare = createKeybladeItem(Strings.maverickFlare),
                    metalChocobo = createKeybladeItem(Strings.metalChocobo),
                    midnightRoar = createKeybladeItem(Strings.midnightRoar),
                    mirageSplit = createKeybladeItem(Strings.mirageSplit),
                    missingAche = createKeybladeItem(Strings.missingAche),
                    monochrome = createKeybladeItem(Strings.monochrome),
                    moogleOGlory = createKeybladeItem(Strings.moogleOGlory),
                    mysteriousAbyss = createKeybladeItem(Strings.mysteriousAbyss),
                    nightmaresEnd = createKeybladeItem(Strings.nightmaresEnd),
                    nightmaresEndAndMirageSplit = createKeybladeItem(Strings.nightmaresEndAndMirageSplit),
                    noName = createKeybladeItem(Strings.noName),
                    noNameBBS = createKeybladeItem(Strings.noNameBBS),
                    oathkeeper = createKeybladeItem(Strings.oathkeeper),
                    oblivion = createKeybladeItem(Strings.oblivion),
                    oceansRage = createKeybladeItem(Strings.oceansRage),
                    olympia = createKeybladeItem(Strings.olympia),
                    omegaWeapon = createKeybladeItem(Strings.omegaWeapon),
                    ominousBlight = createKeybladeItem(Strings.ominousBlight),
                    oneWingedAngel = createKeybladeItem(Strings.oneWingedAngel),
                    painOfSolitude = createKeybladeItem(Strings.painOfSolitude),
                    photonDebugger = createKeybladeItem(Strings.photonDebugger),
                    pixiePetal = createKeybladeItem(Strings.pixiePetal),
                    pumpkinhead = createKeybladeItem(Strings.pumpkinhead),
                    rainfell = createKeybladeItem(Strings.rainfell),
                    rejectionOfFate = createKeybladeItem(Strings.rejectionOfFate),
                    royalRadiance = createKeybladeItem(Strings.royalRadiance),
                    rumblingRose = createKeybladeItem(Strings.rumblingRose),
                    shootingStar = createKeybladeItem(Strings.shootingStar),
                    signOfInnocence = createKeybladeItem(Strings.signOfInnocence),
                    silentDirge = createKeybladeItem(Strings.silentDirge),
                    skullNoise = createKeybladeItem(Strings.skullNoise),
                    sleepingLion = createKeybladeItem(Strings.sleepingLion),
                    soulEater = createKeybladeItem(Strings.soulEater),
                    spellbinder = createKeybladeItem(Strings.spellbinder),
                    starSeeker = createKeybladeItem(Strings.starSeeker),
                    starlight = createKeybladeItem(Strings.starlight),
                    stormfall = createKeybladeItem(Strings.stormfall),
                    strokeOfMidnight = createKeybladeItem(Strings.strokeOfMidnight),
                    sweetDreams = createKeybladeItem(Strings.sweetDreams),
                    sweetMemories = createKeybladeItem(Strings.sweetMemories),
                    sweetstack = createKeybladeItem(Strings.sweetstack),
                    threeWishes = createKeybladeItem(Strings.threeWishes),
                    totalEclipse = createKeybladeItem(Strings.totalEclipse),
                    treasureTrove = createKeybladeItem(Strings.treasureTrove),
                    trueLightsFlight = createKeybladeItem(Strings.trueLightsFlight),
                    twilightBlaze = createKeybladeItem(Strings.twilightBlaze),
                    twoBecomeOne = createKeybladeItem(Strings.twoBecomeOne),
                    ultimaWeaponBBS = createKeybladeItem(Strings.ultimaWeaponBBS),
                    ultimaWeaponDDD = createKeybladeItem(Strings.ultimaWeaponDDD),
                    ultimaWeaponKH1 = createKeybladeItem(Strings.ultimaWeaponKH1),
                    ultimaWeaponKH2 = createKeybladeItem(Strings.ultimaWeaponKH2),
                    ultimaWeaponKH3 = createKeybladeItem(Strings.ultimaWeaponKH3),
                    umbrella = createKeybladeItem(Strings.umbrella),
                    unbound = createKeybladeItem(Strings.unbound),
                    victoryLine = createKeybladeItem(Strings.victoryLine),
                    voidGear = createKeybladeItem(Strings.voidGear),
                    waytotheDawn = createKeybladeItem(Strings.waytotheDawn),
                    waywardWind = createKeybladeItem(Strings.waywardWind),
                    winnersProof = createKeybladeItem(Strings.winnersProof),
                    wishingLamp = createKeybladeItem(Strings.wishingLamp),
                    wishingStar = createKeybladeItem(Strings.wishingStar),
                    woodenKeyblade = createKeybladeItem(Strings.woodenKeyblade),
                    woodenStick = createKeybladeItem(Strings.woodenStick),
                    youngXehanortsKeyblade = createKeybladeItem(Strings.youngXehanortsKeyblade),
                    zeroOne = createKeybladeItem(Strings.zeroOne),

                    //Keychains
                    abaddonPlasmaChain = new KeychainItem(Strings.abaddonPlasmaChain),
                    abyssalTideChain = new KeychainItem(Strings.abyssalTideChain),
                    acedsKeybladeChain = new KeychainItem(Strings.acedsKeybladeChain),
                    allForOneChain = new KeychainItem(Strings.allForOneChain),
                    astralBlastChain = new KeychainItem(Strings.astralBlastChain),
                    aubadeChain = new KeychainItem(Strings.aubadeChain),
                    avasKeybladeChain = new KeychainItem(Strings.avasKeybladeChain),
                    bondOfFlameChain = new KeychainItem(Strings.bondOfFlameChain),
                    brightcrestChain = new KeychainItem(Strings.brightcrestChain),
                    chaosRipperChain = new KeychainItem(Strings.chaosRipperChain),
                    circleOfLifeChain = new KeychainItem(Strings.circleOfLifeChain),
                    counterpointChain = new KeychainItem(Strings.counterpointChain),
                    crabclawChain = new KeychainItem(Strings.crabclawChain),
                    crownOfGuiltChain = new KeychainItem(Strings.crownOfGuiltChain),
                    darkerThanDarkChain = new KeychainItem(Strings.darkerThanDarkChain),
                    darkgnawChain = new KeychainItem(Strings.darkgnawChain),
                    decisivePumpkinChain = new KeychainItem(Strings.decisivePumpkinChain),
                    destinysEmbraceChain = new KeychainItem(Strings.destinysEmbraceChain),
                    diamondDustChain = new KeychainItem(Strings.diamondDustChain),
                    divewingChain = new KeychainItem(Strings.divewingChain),
                    divineRoseChain = new KeychainItem(Strings.divineRoseChain),
                    dualDiscChain = new KeychainItem(Strings.dualDiscChain),
                    earthshakerChain = new KeychainItem(Strings.earthshakerChain),
                    endOfPainChain = new KeychainItem(Strings.endOfPainChain),
                    endsOfTheEarthChain = new KeychainItem(Strings.endsOfTheEarthChain),
                    fairyHarpChain = new KeychainItem(Strings.fairyHarpChain),
                    fairyStarsChain = new KeychainItem(Strings.fairyStarsChain),
                    fatalCrestChain = new KeychainItem(Strings.fatalCrestChain),
                    fenrirChain = new KeychainItem(Strings.fenrirChain),
                    ferrisGearChain = new KeychainItem(Strings.ferrisGearChain),
                    flameLiberatorChain = new KeychainItem(Strings.flameLiberatorChain),
                    followtheWindChain = new KeychainItem(Strings.followtheWindChain),
                    frolicFlameChain = new KeychainItem(Strings.frolicFlameChain),
                    glimpseOfDarknessChain = new KeychainItem(Strings.glimpseOfDarknessChain),
                    guardianBellChain = new KeychainItem(Strings.guardianBellChain),
                    guardianSoulChain = new KeychainItem(Strings.guardianSoulChain),
                    gulasKeybladeChain = new KeychainItem(Strings.gulasKeybladeChain),
                    gullWingChain = new KeychainItem(Strings.gullWingChain),
                    herosCrestChain = new KeychainItem(Strings.herosCrestChain),
                    hiddenDragonChain = new KeychainItem(Strings.hiddenDragonChain),
                    hyperdriveChain = new KeychainItem(Strings.hyperdriveChain),
                    incompleteKibladeChain = new KeychainItem(Strings.incompleteKibladeChain),
                    invisKeybladeChain = new KeychainItem(Strings.invisKeybladeChain),
                    irasKeybladeChain = new KeychainItem(Strings.irasKeybladeChain),
                    jungleKingChain = new KeychainItem(Strings.jungleKingChain),
                    keybladeOfPeoplesHeartsChain = new KeychainItem(Strings.keybladeOfPeoplesHeartsChain),
                    kibladeChain = new KeychainItem(Strings.kibladeChain),
                    kingdomKeyChain = new KeychainItem(Strings.kingdomKeyChain),
                    kingdomKeyDChain = new KeychainItem(Strings.kingdomKeyDChain),
                    knockoutPunchChain = new KeychainItem(Strings.knockoutPunchChain),
                    ladyLuckChain = new KeychainItem(Strings.ladyLuckChain),
                    leviathanChain = new KeychainItem(Strings.leviathanChain),
                    lionheartChain = new KeychainItem(Strings.lionheartChain),
                    lostMemoryChain = new KeychainItem(Strings.lostMemoryChain),
                    lunarEclipseChain = new KeychainItem(Strings.lunarEclipseChain),
                    markOfAHeroChain = new KeychainItem(Strings.markOfAHeroChain),
                    mastersDefenderChain = new KeychainItem(Strings.mastersDefenderChain),
                    maverickFlareChain = new KeychainItem(Strings.maverickFlareChain),
                    metalChocoboChain = new KeychainItem(Strings.metalChocoboChain),
                    midnightRoarChain = new KeychainItem(Strings.midnightRoarChain),
                    mirageSplitChain = new KeychainItem(Strings.mirageSplitChain),
                    missingAcheChain = new KeychainItem(Strings.missingAcheChain),
                    monochromeChain = new KeychainItem(Strings.monochromeChain),
                    moogleOGloryChain = new KeychainItem(Strings.moogleOGloryChain),
                    mysteriousAbyssChain = new KeychainItem(Strings.mysteriousAbyssChain),
                    nightmaresEndChain = new KeychainItem(Strings.nightmaresEndChain),
                    nightmaresEndAndMirageSplitChain = new KeychainItem(Strings.nightmaresEndAndMirageSplitChain),
                    noNameChain = new KeychainItem(Strings.noNameChain),
                    noNameBBSChain = new KeychainItem(Strings.noNameBBSChain),
                    oathkeeperChain = new KeychainItem(Strings.oathkeeperChain),
                    oblivionChain = new KeychainItem(Strings.oblivionChain),
                    oceansRageChain = new KeychainItem(Strings.oceansRageChain),
                    olympiaChain = new KeychainItem(Strings.olympiaChain),
                    omegaWeaponChain = new KeychainItem(Strings.omegaWeaponChain),
                    ominousBlightChain = new KeychainItem(Strings.ominousBlightChain),
                    oneWingedAngelChain = new KeychainItem(Strings.oneWingedAngelChain),
                    painOfSolitudeChain = new KeychainItem(Strings.painOfSolitudeChain),
                    photonDebuggerChain = new KeychainItem(Strings.photonDebuggerChain),
                    pixiePetalChain = new KeychainItem(Strings.pixiePetalChain),
                    pumpkinheadChain = new KeychainItem(Strings.pumpkinheadChain),
                    rainfellChain = new KeychainItem(Strings.rainfellChain),
                    rejectionOfFateChain = new KeychainItem(Strings.rejectionOfFateChain),
                    royalRadianceChain = new KeychainItem(Strings.royalRadianceChain),
                    rumblingRoseChain = new KeychainItem(Strings.rumblingRoseChain),
                    shootingStarChain = new KeychainItem(Strings.shootingStarChain),
                    signOfInnocenceChain = new KeychainItem(Strings.signOfInnocenceChain),
                    silentDirgeChain = new KeychainItem(Strings.silentDirgeChain),
                    skullNoiseChain = new KeychainItem(Strings.skullNoiseChain),
                    sleepingLionChain = new KeychainItem(Strings.sleepingLionChain),
                    soulEaterChain = new KeychainItem(Strings.soulEaterChain),
                    spellbinderChain = new KeychainItem(Strings.spellbinderChain),
                    starSeekerChain = new KeychainItem(Strings.starSeekerChain),
                    starlightChain = new KeychainItem(Strings.starlightChain),
                    stormfallChain = new KeychainItem(Strings.stormfallChain),
                    strokeOfMidnightChain = new KeychainItem(Strings.strokeOfMidnightChain),
                    sweetDreamsChain = new KeychainItem(Strings.sweetDreamsChain),
                    sweetMemoriesChain = new KeychainItem(Strings.sweetMemoriesChain),
                    sweetstackChain = new KeychainItem(Strings.sweetstackChain),
                    threeWishesChain = new KeychainItem(Strings.threeWishesChain),
                    totalEclipseChain = new KeychainItem(Strings.totalEclipseChain),
                    treasureTroveChain = new KeychainItem(Strings.treasureTroveChain),
                    trueLightsFlightChain = new KeychainItem(Strings.trueLightsFlightChain),
                    twilightBlazeChain = new KeychainItem(Strings.twilightBlazeChain),
                    twoBecomeOneChain = new KeychainItem(Strings.twoBecomeOneChain),
                    ultimaWeaponBBSChain = new KeychainItem(Strings.ultimaWeaponBBSChain),
                    ultimaWeaponDDDChain = new KeychainItem(Strings.ultimaWeaponDDDChain),
                    ultimaWeaponKH1Chain = new KeychainItem(Strings.ultimaWeaponKH1Chain),
                    ultimaWeaponKH2Chain = new KeychainItem(Strings.ultimaWeaponKH2Chain),
                    ultimaWeaponKH3Chain = new KeychainItem(Strings.ultimaWeaponKH3Chain),
                    umbrellaChain = new KeychainItem(Strings.umbrellaChain),
                    unboundChain = new KeychainItem(Strings.unboundChain),
                    victoryLineChain = new KeychainItem(Strings.victoryLineChain),
                    voidGearChain = new KeychainItem(Strings.voidGearChain),
                    waytotheDawnChain = new KeychainItem(Strings.waytotheDawnChain),
                    waywardWindChain = new KeychainItem(Strings.waywardWindChain),
                    winnersProofChain = new KeychainItem(Strings.winnersProofChain),
                    wishingLampChain = new KeychainItem(Strings.wishingLampChain),
                    wishingStarChain = new KeychainItem(Strings.wishingStarChain),
                    youngXehanortsKeybladeChain = new KeychainItem(Strings.youngXehanortsKeybladeChain),
                    zeroOneChain = new KeychainItem(Strings.zeroOneChain),
                    
                    //recipe = new RecipeItem(Strings.recipe),
					organizationRobe_Helmet = createArmorItem(Strings.organizationHood, KKArmorMaterial.ORGANIZATION, EquipmentSlotType.HEAD),
					organizationRobe_Chestplate = createArmorItem(Strings.organizationChestplate, KKArmorMaterial.ORGANIZATION, EquipmentSlotType.CHEST),
					organizationRobe_Leggings = createArmorItem(Strings.organizationLeggings, KKArmorMaterial.ORGANIZATION, EquipmentSlotType.LEGS),
					organizationRobe_Boots = createArmorItem(Strings.organizationBoots, KKArmorMaterial.ORGANIZATION, EquipmentSlotType.FEET),

					terra_Helmet = createArmorItem(Strings.terraHelmet,KKArmorMaterial.TERRA, EquipmentSlotType.HEAD),
					terra_Chestplate = createArmorItem(Strings.terraChestplate, KKArmorMaterial.TERRA, EquipmentSlotType.CHEST),
					terra_Leggings = createArmorItem(Strings.terraLeggings, KKArmorMaterial.TERRA, EquipmentSlotType.LEGS),
					terra_Boots = createArmorItem(Strings.terraBoots, KKArmorMaterial.TERRA,EquipmentSlotType.FEET),

					ventus_Helmet = createArmorItem(Strings.ventusHelmet, KKArmorMaterial.VENTUS, EquipmentSlotType.HEAD),
					ventus_Chestplate = createArmorItem(Strings.ventusChestplate, KKArmorMaterial.VENTUS, EquipmentSlotType.CHEST),
					ventus_Leggings = createArmorItem(Strings.ventusLeggings, KKArmorMaterial.VENTUS, EquipmentSlotType.LEGS),
					ventus_Boots = createArmorItem(Strings.ventusBoots, KKArmorMaterial.VENTUS, EquipmentSlotType.FEET),

					aqua_Helmet = createArmorItem(Strings.aquaHelmet, KKArmorMaterial.Aqua, EquipmentSlotType.HEAD),
					aqua_Chestplate = createArmorItem(Strings.aquaChestplate, KKArmorMaterial.Aqua, EquipmentSlotType.CHEST),
					aqua_Leggings = createArmorItem(Strings.aquaLeggings, KKArmorMaterial.Aqua, EquipmentSlotType.LEGS),
					aqua_Boots = createArmorItem(Strings.aquaBoots, KKArmorMaterial.Aqua, EquipmentSlotType.FEET),

					eraqus_Helmet = createArmorItem(Strings.eraqusHelmet, KKArmorMaterial.ERAQUS, EquipmentSlotType.HEAD),
					eraqus_Chestplate = createArmorItem(Strings.eraqusChestplate, KKArmorMaterial.ERAQUS, EquipmentSlotType.CHEST),
					eraqus_Leggings = createArmorItem(Strings.eraqusLeggings, KKArmorMaterial.ERAQUS, EquipmentSlotType.LEGS),
					eraqus_Boots = createArmorItem(Strings.eraqusBoots, KKArmorMaterial.ERAQUS, EquipmentSlotType.FEET),

					vanitas_Helmet = createArmorItem(Strings.vanitasHelmet, KKArmorMaterial.VANITAS, EquipmentSlotType.HEAD),
					vanitas_Chestplate = createArmorItem(Strings.vanitasChestplate, KKArmorMaterial.VANITAS, EquipmentSlotType.CHEST),
					vanitas_Leggings = createArmorItem(Strings.vanitasLeggings, KKArmorMaterial.VANITAS, EquipmentSlotType.LEGS),
					vanitas_Boots = createArmorItem(Strings.vanitasBoots, KKArmorMaterial.VANITAS, EquipmentSlotType.FEET),

					nightmareVentus_Helmet = createArmorItem(Strings.nightmareVentusHelmet, KKArmorMaterial.NIGHTMAREVEN, EquipmentSlotType.HEAD),
					nightmareVentus_Chestplate = createArmorItem(Strings.nightmareVentusChestplate, KKArmorMaterial.NIGHTMAREVEN, EquipmentSlotType.CHEST),
					nightmareVentus_Leggings = createArmorItem(Strings.nightmareVentusLeggings, KKArmorMaterial.NIGHTMAREVEN, EquipmentSlotType.LEGS),
					nightmareVentus_Boots = createArmorItem(Strings.nightmareVentusBoots, KKArmorMaterial.NIGHTMAREVEN, EquipmentSlotType.FEET),

					antiCoat_Helmet = createArmorItem(Strings.antiCoatHelmet, KKArmorMaterial.ANTICOAT, EquipmentSlotType.HEAD),
					antiCoat_Chestplate = createArmorItem(Strings.antiCoatChestplate, KKArmorMaterial.ANTICOAT, EquipmentSlotType.CHEST),
					antiCoat_Leggings = createArmorItem(Strings.antiCoatLeggings, KKArmorMaterial.ANTICOAT, EquipmentSlotType.LEGS),
					antiCoat_Boots = createArmorItem(Strings.antiCoatBoots, KKArmorMaterial.ANTICOAT, EquipmentSlotType.FEET),

					xemnas_Helmet = createArmorItem(Strings.xemnasHelmet, KKArmorMaterial.XEMNAS, EquipmentSlotType.HEAD),
					xemnas_Chestplate = createArmorItem(Strings.xemnasChestplate, KKArmorMaterial.XEMNAS, EquipmentSlotType.CHEST),
					xemnas_Leggings = createArmorItem(Strings.xemnasLeggings, KKArmorMaterial.XEMNAS, EquipmentSlotType.LEGS),
					xemnas_Boots = createArmorItem(Strings.xemnasBoots, KKArmorMaterial.XEMNAS, EquipmentSlotType.FEET),

/*
                    //Organization XIII
                    malice = new EtherealBladeItem(Strings.malice),
                    sanction = new EtherealBladeItem(Strings.sanction),
                    overlord = new EtherealBladeItem(Strings.overlord),
                    veneration = new EtherealBladeItem(Strings.veneration),
                    autocracy = new EtherealBladeItem(Strings.autocracy),
                    conquest = new EtherealBladeItem(Strings.conquest),
                    terminus = new EtherealBladeItem(Strings.terminus),
                    judgement = new EtherealBladeItem(Strings.judgement),
                    discipline = new EtherealBladeItem(Strings.discipline),
                    aristocracy = new EtherealBladeItem(Strings.aristocracy),
                    superiority = new EtherealBladeItem(Strings.superiority),
                    aggression = new EtherealBladeItem(Strings.aggression),
                    fury = new EtherealBladeItem(Strings.fury),
                    despair = new EtherealBladeItem(Strings.despair),
                    triumph = new EtherealBladeItem(Strings.triumph),
                    ruination = new EtherealBladeItem(Strings.ruination),
                    domination = new EtherealBladeItem(Strings.domination),
                    annihilation = new EtherealBladeItem(Strings.annihilation),
                    tyrant = new EtherealBladeItem(Strings.tyrant),
                    magnificence = new EtherealBladeItem(Strings.magnificence),
                    infinity = new EtherealBladeItem(Strings.infinity),
                    interdiction = new EtherealBladeItem(Strings.interdiction),
                    roundFan = new EtherealBladeItem(Strings.roundFan),
                    absolute = new EtherealBladeItem(Strings.absolute),
                    standalone = new ArrowgunsItem(Strings.standalone),
                    killerbee = new ArrowgunsItem(Strings.killerbee),
                    stingray = new ArrowgunsItem(Strings.stingray),
                    counterweight = new ArrowgunsItem(Strings.counterweight),
                    precision = new ArrowgunsItem(Strings.precision),
                    dualHead = new ArrowgunsItem(Strings.dualHead),
                    bahamut = new ArrowgunsItem(Strings.bahamut),
                    gullwing = new ArrowgunsItem(Strings.gullwing),
                    blueFrame = new ArrowgunsItem(Strings.blueFrame),
                    starShell = new ArrowgunsItem(Strings.starShell),
                    sunrise = new ArrowgunsItem(Strings.sunrise),
                    ignition = new ArrowgunsItem(Strings.ignition),
                    armstrong = new ArrowgunsItem(Strings.armstrong),
                    hardBoiledHeat = new ArrowgunsItem(Strings.hardBoiledHeat),
                    diabloEye = new ArrowgunsItem(Strings.diabloEye),
                    doubleTap = new ArrowgunsItem(Strings.doubleTap),
                    stardust = new ArrowgunsItem(Strings.stardust),
                    energyMuzzle = new ArrowgunsItem(Strings.energyMuzzle),
                    crimeAndPunishment = new ArrowgunsItem(Strings.crimeAndPunishment),
                    cupidsArrow = new ArrowgunsItem(Strings.cupidsArrow),
                    finalWeapon = new ArrowgunsItem(Strings.finalWeapon),
                    sharpshooter = new ArrowgunsItem(Strings.sharpshooter),
                    dryer = new ArrowgunsItem(Strings.dryer),
                    trumpet = new ArrowgunsItem(Strings.trumpet),
                    zephyr = new LanceItem(Strings.zephyr),
                    moonglade = new LanceItem(Strings.moonglade),
                    aer = new LanceItem(Strings.aer),
                    nescience = new LanceItem(Strings.nescience),
                    brume = new LanceItem(Strings.brume),
                    asura = new LanceItem(Strings.asura),
                    crux = new LanceItem(Strings.crux),
                    paladin = new LanceItem(Strings.paladin),
                    fellking = new LanceItem(Strings.fellking),
                    nightcloud = new LanceItem(Strings.nightcloud),
                    shimmer = new LanceItem(Strings.shimmer),
                    vortex = new LanceItem(Strings.vortex),
                    scission = new LanceItem(Strings.scission),
                    heavenfall = new LanceItem(Strings.heavenfall),
                    aether = new LanceItem(Strings.aether),
                    mazzaroth = new LanceItem(Strings.mazzaroth),
                    hegemon = new LanceItem(Strings.hegemon),
                    foxfire = new LanceItem(Strings.foxfire),
                    yaksha = new LanceItem(Strings.yaksha),
                    cynosura = new LanceItem(Strings.cynosura),
                    dragonreign = new LanceItem(Strings.dragonreign),
                    lindworm = new LanceItem(Strings.lindworm),
                    broom = new LanceItem(Strings.broom),
                    wyvern = new LanceItem(Strings.wyvern),
                    testerZero = new OrgShieldItem(Strings.testerZero),
                    productOne = new OrgShieldItem(Strings.productOne),
                    deepFreeze = new OrgShieldItem(Strings.deepFreeze),
                    cryoliteShield = new OrgShieldItem(Strings.cryoliteShield),
                    falseTheory = new OrgShieldItem(Strings.falseTheory),
                    glacier = new OrgShieldItem(Strings.glacier),
                    absoluteZero = new OrgShieldItem(Strings.absoluteZero),
                    gunz = new OrgShieldItem(Strings.gunz),
                    mindel = new OrgShieldItem(Strings.mindel),
                    snowslide = new OrgShieldItem(Strings.snowslide),
                    iceberg = new OrgShieldItem(Strings.iceberg),
                    inquisition = new OrgShieldItem(Strings.inquisition),
                    scrutiny = new OrgShieldItem(Strings.scrutiny),
                    empiricism = new OrgShieldItem(Strings.empiricism),
                    edification = new OrgShieldItem(Strings.edification),
                    contrivance = new OrgShieldItem(Strings.contrivance),
                    wurm = new OrgShieldItem(Strings.wurm),
                    subzero = new OrgShieldItem(Strings.subzero),
                    coldBlood = new OrgShieldItem(Strings.coldBlood),
                    diamondShield = new OrgShieldItem(Strings.diamondShield),
                    aegis = new OrgShieldItem(Strings.aegis),
                    frozenPride = new OrgShieldItem(Strings.frozenPride),
                    potLid = new OrgShieldItem(Strings.potLid),
                    snowman = new OrgShieldItem(Strings.snowman),
                    reticence = new AxeSwordItem(Strings.reticence),
                    goliath = new AxeSwordItem(Strings.goliath),
                    copperRed = new AxeSwordItem(Strings.copperRed),
                    daybreak = new AxeSwordItem(Strings.daybreak),
                    colossus = new AxeSwordItem(Strings.colossus),
                    ursaMajor = new AxeSwordItem(Strings.ursaMajor),
                    megacosm = new AxeSwordItem(Strings.megacosm),
                    terrene = new AxeSwordItem(Strings.terrene),
                    fuligin = new AxeSwordItem(Strings.fuligin),
                    hardWinter = new AxeSwordItem(Strings.hardWinter),
                    firefly = new AxeSwordItem(Strings.firefly),
                    harbinger = new AxeSwordItem(Strings.harbinger),
                    redwood = new AxeSwordItem(Strings.redwood),
                    sequoia = new AxeSwordItem(Strings.sequoia),
                    ironBlack = new AxeSwordItem(Strings.ironBlack),
                    earthshine = new AxeSwordItem(Strings.earthshine),
                    octiron = new AxeSwordItem(Strings.octiron),
                    hyperion = new AxeSwordItem(Strings.hyperion),
                    clarity = new AxeSwordItem(Strings.clarity),
                    oneThousandAndOneNights = new AxeSwordItem(Strings.oneThousandAndOneNights),
                    cardinalVirtue = new AxeSwordItem(Strings.cardinalVirtue),
                    skysplitter = new AxeSwordItem(Strings.skysplitter),
                    bleepBloopBop = new AxeSwordItem(Strings.bleepBloopBop),
                    monolith = new AxeSwordItem(Strings.monolith),
                    blackPrimer = new LexiconItem(Strings.blackPrimer),
                    whiteTome = new LexiconItem(Strings.whiteTome),
                    illicitResearch = new LexiconItem(Strings.illicitResearch),
                    buriedSecrets = new LexiconItem(Strings.buriedSecrets),
                    arcaneCompendium = new LexiconItem(Strings.arcaneCompendium),
                    dissentersNotes = new LexiconItem(Strings.dissentersNotes),
                    nefariousCodex = new LexiconItem(Strings.nefariousCodex),
                    mysticAlbum = new LexiconItem(Strings.mysticAlbum),
                    cursedManual = new LexiconItem(Strings.cursedManual),
                    tabooText = new LexiconItem(Strings.tabooText),
                    eldritchEsoterica = new LexiconItem(Strings.eldritchEsoterica),
                    freakishBestiary = new LexiconItem(Strings.freakishBestiary),
                    madmansVita = new LexiconItem(Strings.madmansVita),
                    untitledWritings = new LexiconItem(Strings.untitledWritings),
                    abandonedDogma = new LexiconItem(Strings.abandonedDogma),
                    atlasOfOmens = new LexiconItem(Strings.atlasOfOmens),
                    revoltingScrapbook = new LexiconItem(Strings.revoltingScrapbook),
                    lostHeterodoxy = new LexiconItem(Strings.lostHeterodoxy),
                    otherworldlyTales = new LexiconItem(Strings.otherworldlyTales),
                    indescribableLore = new LexiconItem(Strings.indescribableLore),
                    radicalTreatise = new LexiconItem(Strings.radicalTreatise),
                    bookOfRetribution = new LexiconItem(Strings.bookOfRetribution),
                    midnightSnack = new LexiconItem(Strings.midnightSnack),
                    dearDiary = new LexiconItem(Strings.dearDiary),
                    newMoon = new ClaymoreItem(Strings.newMoon),
                    werewolf = new ClaymoreItem(Strings.werewolf),
                    artemis = new ClaymoreItem(Strings.artemis),
                    luminary = new ClaymoreItem(Strings.luminary),
                    selene = new ClaymoreItem(Strings.selene),
                    moonrise = new ClaymoreItem(Strings.moonrise),
                    astrologia = new ClaymoreItem(Strings.astrologia),
                    crater = new ClaymoreItem(Strings.crater),
                    lunarPhase = new ClaymoreItem(Strings.lunarPhase),
                    crescent = new ClaymoreItem(Strings.crescent),
                    gibbous = new ClaymoreItem(Strings.gibbous),
                    berserker = new ClaymoreItem(Strings.berserker),
                    twilight = new ClaymoreItem(Strings.twilight),
                    queenOfTheNight = new ClaymoreItem(Strings.queenOfTheNight),
                    balsamicMoon = new ClaymoreItem(Strings.balsamicMoon),
                    orbit = new ClaymoreItem(Strings.orbit),
                    lightYear = new ClaymoreItem(Strings.lightYear),
                    kingOfTheNight = new ClaymoreItem(Strings.kingOfTheNight),
                    moonset = new ClaymoreItem(Strings.moonset),
                    horoscope = new ClaymoreItem(Strings.horoscope),
                    dichotomy = new ClaymoreItem(Strings.dichotomy),
                    lunatic = new ClaymoreItem(Strings.lunatic),
                    justDesserts = new ClaymoreItem(Strings.justDesserts),
                    bunnymoon = new ClaymoreItem(Strings.bunnymoon),
                    ashes = new ChakramItem(Strings.ashes),
                    doldrums = new ChakramItem(Strings.doldrums),
                    delayedAction = new ChakramItem(Strings.delayedAction),
                    diveBombers = new ChakramItem(Strings.diveBombers),
                    combustion = new ChakramItem(Strings.combustion),
                    moulinRouge = new ChakramItem(Strings.moulinRouge),
                    blazeOfGlory = new ChakramItem(Strings.blazeOfGlory),
                    prometheus = new ChakramItem(Strings.prometheus),
                    ifrit = new ChakramItem(Strings.ifrit),
                    magmaOcean = new ChakramItem(Strings.magmaOcean),
                    volcanics = new ChakramItem(Strings.volcanics),
                    inferno = new ChakramItem(Strings.inferno),
                    sizzlingEdge = new ChakramItem(Strings.sizzlingEdge),
                    corona = new ChakramItem(Strings.corona),
                    ferrisWheel = new ChakramItem(Strings.ferrisWheel),
                    burnout = new ChakramItem(Strings.burnout),
                    omegaTrinity = new ChakramItem(Strings.omegaTrinity),
                    outbreak = new ChakramItem(Strings.outbreak),
                    doubleEdge = new ChakramItem(Strings.doubleEdge),
                    wildfire = new ChakramItem(Strings.wildfire),
                    prominence = new ChakramItem(Strings.prominence),
                    eternalFlames = new ChakramItem(Strings.eternalFlames),
                    pizzaCut = new ChakramItem(Strings.pizzaCut),
                    conformers = new ChakramItem(Strings.conformers),
                    basicModel = new SitarItem(Strings.basicModel),
                    tuneUp = new SitarItem(Strings.tuneUp),
                    quartet = new SitarItem(Strings.quartet),
                    quintet = new SitarItem(Strings.quintet),
                    overture = new SitarItem(Strings.overture),
                    oldHand = new SitarItem(Strings.oldHand),
                    daCapo = new SitarItem(Strings.daCapo),
                    powerChord = new SitarItem(Strings.powerChord),
                    fermata = new SitarItem(Strings.fermata),
                    interlude = new SitarItem(Strings.interlude),
                    serenade = new SitarItem(Strings.serenade),
                    songbird = new SitarItem(Strings.songbird),
                    riseToFame = new SitarItem(Strings.riseToFame),
                    rockStar = new SitarItem(Strings.rockStar),
                    eightFinger = new SitarItem(Strings.eightFinger),
                    concerto = new SitarItem(Strings.concerto),
                    harmonics = new SitarItem(Strings.harmonics),
                    millionBucks = new SitarItem(Strings.millionBucks),
                    fortissimo = new SitarItem(Strings.fortissimo),
                    upToEleven = new SitarItem(Strings.upToEleven),
                    sanctuary = new SitarItem(Strings.sanctuary),
                    arpeggio = new SitarItem(Strings.arpeggio),
                    princeOfAwesome = new SitarItem(Strings.princeOfAwesome),
                    afterSchool = new SitarItem(Strings.afterSchool),
                    theFool = new CardItem(Strings.theFool),
                    theMagician = new CardItem(Strings.theMagician),
                    theStar = new CardItem(Strings.theStar),
                    theMoon = new CardItem(Strings.theMoon),
                    justice = new CardItem(Strings.justice),
                    theHierophant = new CardItem(Strings.theHierophant),
                    theWorld = new CardItem(Strings.theWorld),
                    temperance = new CardItem(Strings.temperance),
                    theHighPriestess = new CardItem(Strings.theHighPriestess),
                    theTower = new CardItem(Strings.theTower),
                    theHangedMan = new CardItem(Strings.theHangedMan),
                    death = new CardItem(Strings.death),
                    theHermit = new CardItem(Strings.theHermit),
                    strength = new CardItem(Strings.strength),
                    theLovers = new CardItem(Strings.theLovers),
                    theChariot = new CardItem(Strings.theChariot),
                    theSun = new CardItem(Strings.theSun),
                    theDevil = new CardItem(Strings.theDevil),
                    theEmpress = new CardItem(Strings.theEmpress),
                    theEmperor = new CardItem(Strings.theEmperor),
                    theJoker = new CardItem(Strings.theJoker),
                    fairGame = new CardItem(Strings.fairGame),
                    finestFantasy13 = new CardItem(Strings.finestFantasy13),
                    highRollersSecret = new CardItem(Strings.highRollersSecret),
                    fickleErica = new ScytheItem(Strings.fickleErica),
                    jiltedAnemone = new ScytheItem(Strings.jiltedAnemone),
                    proudAmaryllis = new ScytheItem(Strings.proudAmaryllis),
                    madSafflower = new ScytheItem(Strings.madSafflower),
                    poorMelissa = new ScytheItem(Strings.poorMelissa),
                    tragicAllium = new ScytheItem(Strings.tragicAllium),
                    mournfulCineria = new ScytheItem(Strings.mournfulCineria),
                    pseudoSilene = new ScytheItem(Strings.pseudoSilene),
                    faithlessDigitalis = new ScytheItem(Strings.faithlessDigitalis),
                    grimMuscari = new ScytheItem(Strings.grimMuscari),
                    docileVallota = new ScytheItem(Strings.docileVallota),
                    quietBelladonna = new ScytheItem(Strings.quietBelladonna),
                    partingIpheion = new ScytheItem(Strings.partingIpheion),
                    loftyGerbera = new ScytheItem(Strings.loftyGerbera),
                    gallantAchillea = new ScytheItem(Strings.gallantAchillea),
                    noblePeony = new ScytheItem(Strings.noblePeony),
                    fearsomeAnise = new ScytheItem(Strings.fearsomeAnise),
                    vindictiveThistle = new ScytheItem(Strings.vindictiveThistle),
                    fairHelianthus = new ScytheItem(Strings.fairHelianthus),
                    solemnMagnolia = new ScytheItem(Strings.solemnMagnolia),
                    hallowedLotus = new ScytheItem(Strings.hallowedLotus),
                    gracefulDahlia = new ScytheItem(Strings.gracefulDahlia),
                    stirringLadle = new ScytheItem(Strings.stirringLadle),
                    daintyBellflowers = new ScytheItem(Strings.daintyBellflowers),
                    trancheuse = new KnifeItem(Strings.trancheuse),
                    orage = new KnifeItem(Strings.orage),
                    tourbillon = new KnifeItem(Strings.tourbillon),
                    tempete = new KnifeItem(Strings.tempete),
                    carmin = new KnifeItem(Strings.carmin),
                    meteore = new KnifeItem(Strings.meteore),
                    etoile = new KnifeItem(Strings.etoile),
                    irregulier = new KnifeItem(Strings.irregulier),
                    dissonance = new KnifeItem(Strings.dissonance),
                    eruption = new KnifeItem(Strings.eruption),
                    soleilCouchant = new KnifeItem(Strings.soleilCouchant),
                    indigo = new KnifeItem(Strings.indigo),
                    vague = new KnifeItem(Strings.vague),
                    deluge = new KnifeItem(Strings.deluge),
                    rafale = new KnifeItem(Strings.rafale),
                    typhon = new KnifeItem(Strings.typhon),
                    extirpeur = new KnifeItem(Strings.extirpeur),
                    croixDuSud = new KnifeItem(Strings.croixDuSud),
                    lumineuse = new KnifeItem(Strings.lumineuse),
                    clairDeLune = new KnifeItem(Strings.clairDeLune),
                    volDeNuit = new KnifeItem(Strings.volDeNuit),
                    foudre = new KnifeItem(Strings.foudre),
                    demoiselle = new KnifeItem(Strings.demoiselle),
                    ampoule = new KnifeItem(Strings.ampoule)
                    */

                    heart = createNewItem(Strings.heart, new Item.Properties().group(KingdomKeys.miscGroup)),
                    darkHeart = createNewItem(Strings.darkHeart, new Item.Properties().group(KingdomKeys.miscGroup)),
                    pureHeart = createNewItem(Strings.pureHeart, new Item.Properties().group(KingdomKeys.miscGroup)),
                    kingdomHearts = createNewItem(Strings.kingdom_hearts, new Item.Properties().group(KingdomKeys.miscGroup)),
                    iceCream = createNewItem(Strings.iceCream, new Item.Properties().group(KingdomKeys.miscGroup).food(new Food.Builder().fastToEat().saturation(2.0f).hunger(2).build())),
                    emptyBottle = createNewItem(Strings.emptyBottle, new Item.Properties().group(KingdomKeys.miscGroup)),
                    
                    disc_Birth_by_Sleep_A_Link_to_the_Future = new KKRecordItem(1, ModSounds.Record_Birth_by_Sleep_A_Link_to_the_Future, new Item.Properties().group(KingdomKeys.miscGroup), Strings.Disc_Birth_by_Sleep_A_Link_to_the_Future, 7.29F),
                    disc_Darkness_of_the_Unknown = new KKRecordItem(1, ModSounds.Record_Darkness_of_the_Unknown, new Item.Properties().group(KingdomKeys.miscGroup), Strings.Disc_Darkness_of_the_Unknown, 7.50F), 
                    disc_Dearly_Beloved_Symphony_Version = new KKRecordItem(1, ModSounds.Record_Dearly_Beloved_Symphony_Version, new Item.Properties().group(KingdomKeys.miscGroup), Strings.Disc_Dearly_Beloved_Symphony_Version, 2.33F),
                    disc_Dream_Drop_Distance_The_Next_Awakening = new KKRecordItem(1, ModSounds.Record_Dream_Drop_Distance_The_Next_Awakening, new Item.Properties().group(KingdomKeys.miscGroup), Strings.Disc_Dream_Drop_Distance_The_Next_Awakening, 8.56F),
                    disc_Hikari_KINGDOM_Instrumental_Version = new KKRecordItem(1, ModSounds.Record_Hikari_KINGDOM_Instrumental_Version, new Item.Properties().group(KingdomKeys.miscGroup), Strings.Disc_Hikari_KINGDOM_Instrumental_Version, 3.42F),
                    disc_L_Oscurita_Dell_Ignoto = new KKRecordItem(1, ModSounds.Record_L_Oscurita_Dell_Ignoto, new Item.Properties().group(KingdomKeys.miscGroup), Strings.Disc_L_Oscurita_Dell_Ignoto, 4.33F),
                    disc_Musique_pour_la_tristesse_de_Xion = new KKRecordItem(1, ModSounds.Record_Musique_pour_la_tristesse_de_Xion, new Item.Properties().group(KingdomKeys.miscGroup), Strings.Disc_Musique_pour_la_tristesse_de_Xion, 3.57F), 
                    disc_No_More_Bugs_Bug_Version = new KKRecordItem(1, ModSounds.Record_No_More_Bugs_Bug_Version, new Item.Properties().group(KingdomKeys.miscGroup), Strings.Disc_No_More_Bugs_Bug_Version, 3.17F),
                    disc_Organization_XIII = new KKRecordItem(1, ModSounds.Record_Organization_XIII, new Item.Properties().group(KingdomKeys.miscGroup), Strings.Disc_Organization_XIII, 2.32F),
                    disc_Sanctuary = new KKRecordItem(1, ModSounds.Record_Sanctuary, new Item.Properties().group(KingdomKeys.miscGroup), Strings.Disc_Sanctuary, 4.25F),
                    disc_Simple_And_Clean_PLANITb_Remix = new KKRecordItem(1, ModSounds.Record_Simple_And_Clean_PLANITb_Remix, new Item.Properties().group(KingdomKeys.miscGroup), Strings.Disc_Simple_And_Clean_PLANITb_Remix, 2.37F),
                    disc_Sinister_Sundown = new KKRecordItem(1, ModSounds.Record_Sinister_Sundown, new Item.Properties().group(KingdomKeys.miscGroup), Strings.Disc_Sinister_Sundown, 2.13F), 
                    disc_The_13th_Anthology = new KKRecordItem(1, ModSounds.Record_The_13th_Anthology, new Item.Properties().group(KingdomKeys.miscGroup), Strings.Disc_The_13th_Anthology, 6.38F),

					blazingCrystal = new SynthesisItem(new Item.Properties().group(KingdomKeys.miscGroup), Strings.SM_BlazingCrystal, "S"),
					blazingGem = new SynthesisItem(new Item.Properties().group(KingdomKeys.miscGroup), Strings.SM_BlazingGem, "A"),
					blazingStone = new SynthesisItem(new Item.Properties().group(KingdomKeys.miscGroup), Strings.SM_BlazingShard, "B"),
					blazingShard = new SynthesisItem(new Item.Properties().group(KingdomKeys.miscGroup), Strings.SM_BlazingStone, "C"),
					brightCrystal = new SynthesisItem(new Item.Properties().group(KingdomKeys.miscGroup), Strings.SM_BrightCrystal, "S"),
					brightGem = new SynthesisItem(new Item.Properties().group(KingdomKeys.miscGroup), Strings.SM_BrightGem, "A"),
					brightStone = new SynthesisItem(new Item.Properties().group(KingdomKeys.miscGroup), Strings.SM_BrightShard, "B"),
					brightShard = new SynthesisItem(new Item.Properties().group(KingdomKeys.miscGroup), Strings.SM_BrightStone, "C"),
					darkCrystal = new SynthesisItem(new Item.Properties().group(KingdomKeys.miscGroup), Strings.SM_DarkCrystal, "S"),
					darkGem = new SynthesisItem(new Item.Properties().group(KingdomKeys.miscGroup), Strings.SM_DarkGem, "A"),
					darkStone = new SynthesisItem(new Item.Properties().group(KingdomKeys.miscGroup), Strings.SM_DarkShard, "B"),
					darkShard = new SynthesisItem(new Item.Properties().group(KingdomKeys.miscGroup), Strings.SM_DarkStone, "C"),
					denseCrystal = new SynthesisItem(new Item.Properties().group(KingdomKeys.miscGroup), Strings.SM_DenseCrystal, "S"),
					denseGem = new SynthesisItem(new Item.Properties().group(KingdomKeys.miscGroup), Strings.SM_DenseGem, "A"),
					denseStone = new SynthesisItem(new Item.Properties().group(KingdomKeys.miscGroup), Strings.SM_DenseShard, "B"),
					denseShard = new SynthesisItem(new Item.Properties().group(KingdomKeys.miscGroup), Strings.SM_DenseStone, "C"),
					energyCrystal = new SynthesisItem(new Item.Properties().group(KingdomKeys.miscGroup), Strings.SM_EnergyCrystal, "S"),
					energyGem = new SynthesisItem(new Item.Properties().group(KingdomKeys.miscGroup), Strings.SM_EnergyGem, "A"),
					energyStone = new SynthesisItem(new Item.Properties().group(KingdomKeys.miscGroup), Strings.SM_EnergyShard, "B"),
					energyShard = new SynthesisItem(new Item.Properties().group(KingdomKeys.miscGroup), Strings.SM_EnergyStone, "C"),
					frostCrystal = new SynthesisItem(new Item.Properties().group(KingdomKeys.miscGroup), Strings.SM_FrostCrystal, "S"),
					frostGem = new SynthesisItem(new Item.Properties().group(KingdomKeys.miscGroup), Strings.SM_FrostGem, "A"),
					frostStone = new SynthesisItem(new Item.Properties().group(KingdomKeys.miscGroup), Strings.SM_FrostShard, "B"),
					frostShard = new SynthesisItem(new Item.Properties().group(KingdomKeys.miscGroup), Strings.SM_FrostStone, "C"),
					lightningCrystal = new SynthesisItem(new Item.Properties().group(KingdomKeys.miscGroup), Strings.SM_LightningCrystal, "S"),
					lightningGem = new SynthesisItem(new Item.Properties().group(KingdomKeys.miscGroup), Strings.SM_LightningGem, "A"),
					lightningStone = new SynthesisItem(new Item.Properties().group(KingdomKeys.miscGroup), Strings.SM_LightningShard, "B"),
					lightningShard = new SynthesisItem(new Item.Properties().group(KingdomKeys.miscGroup), Strings.SM_LightningStone, "C"),
					lucidCrystal = new SynthesisItem(new Item.Properties().group(KingdomKeys.miscGroup), Strings.SM_LucidCrystal, "S"),
					lucidGem = new SynthesisItem(new Item.Properties().group(KingdomKeys.miscGroup), Strings.SM_LucidGem, "A"),
					lucidStone = new SynthesisItem(new Item.Properties().group(KingdomKeys.miscGroup), Strings.SM_LucidShard, "B"),
					lucidShard = new SynthesisItem(new Item.Properties().group(KingdomKeys.miscGroup), Strings.SM_LucidStone, "C"),
					serenityCrystal = new SynthesisItem(new Item.Properties().group(KingdomKeys.miscGroup), Strings.SM_SerenityCrystal, "S"),
					serenityGem = new SynthesisItem(new Item.Properties().group(KingdomKeys.miscGroup), Strings.SM_SerenityGem, "A"),
					serenityStone = new SynthesisItem(new Item.Properties().group(KingdomKeys.miscGroup), Strings.SM_SerenityShard, "B"),
					serenityShard = new SynthesisItem(new Item.Properties().group(KingdomKeys.miscGroup), Strings.SM_SerenityStone, "C"),
					twilightCrystal = new SynthesisItem(new Item.Properties().group(KingdomKeys.miscGroup), Strings.SM_TwilightCrystal, "S"),
					twilightGem = new SynthesisItem(new Item.Properties().group(KingdomKeys.miscGroup), Strings.SM_TwilightGem, "A"),
					twilightStone = new SynthesisItem(new Item.Properties().group(KingdomKeys.miscGroup), Strings.SM_TwilightShard, "B"),
					twilightShard = new SynthesisItem(new Item.Properties().group(KingdomKeys.miscGroup), Strings.SM_TwilightStone, "C"),
					mythrilCrystal = new SynthesisItem(new Item.Properties().group(KingdomKeys.miscGroup), Strings.SM_MythrilCrystal, "S"),
					mythrilGem = new SynthesisItem(new Item.Properties().group(KingdomKeys.miscGroup), Strings.SM_MythrilGem, "A"),
					mythrilStone = new SynthesisItem(new Item.Properties().group(KingdomKeys.miscGroup), Strings.SM_MythrilShard, "B"),
					mythrilShard = new SynthesisItem(new Item.Properties().group(KingdomKeys.miscGroup), Strings.SM_MythrilStone, "C"),
					tranquilCrystal = new SynthesisItem(new Item.Properties().group(KingdomKeys.miscGroup), Strings.SM_TranquilCrystal, "S"),
					tranquilGem = new SynthesisItem(new Item.Properties().group(KingdomKeys.miscGroup), Strings.SM_TranquilGem, "A"),
					tranquilStone = new SynthesisItem(new Item.Properties().group(KingdomKeys.miscGroup), Strings.SM_TranquilShard, "B"),
					tranquilShard = new SynthesisItem(new Item.Properties().group(KingdomKeys.miscGroup), Strings.SM_TranquilStone, "C"),
					stormyCrystal = new SynthesisItem(new Item.Properties().group(KingdomKeys.miscGroup), Strings.SM_StormyCrystal, "S"),
					stormyGem = new SynthesisItem(new Item.Properties().group(KingdomKeys.miscGroup), Strings.SM_StormyGem, "A"),
					stormyStone = new SynthesisItem(new Item.Properties().group(KingdomKeys.miscGroup), Strings.SM_StormyShard, "B"),
					stormyShard = new SynthesisItem(new Item.Properties().group(KingdomKeys.miscGroup), Strings.SM_StormyStone, "C"),
					remembranceCrystal = new SynthesisItem(new Item.Properties().group(KingdomKeys.miscGroup), Strings.SM_RemembranceCrystal, "S"),
					remembranceGem = new SynthesisItem(new Item.Properties().group(KingdomKeys.miscGroup), Strings.SM_RemembranceGem, "A"),
					remembranceStone = new SynthesisItem(new Item.Properties().group(KingdomKeys.miscGroup), Strings.SM_RemembranceShard, "B"),
					remembranceShard = new SynthesisItem(new Item.Properties().group(KingdomKeys.miscGroup), Strings.SM_RemembranceStone, "C"),
					powerCrystal = new SynthesisItem(new Item.Properties().group(KingdomKeys.miscGroup), Strings.SM_PowerCrystal, "S"),
					powerGem = new SynthesisItem(new Item.Properties().group(KingdomKeys.miscGroup), Strings.SM_PowerGem, "A"),
					powerStone = new SynthesisItem(new Item.Properties().group(KingdomKeys.miscGroup), Strings.SM_PowerShard, "B"),
					powerShard = new SynthesisItem(new Item.Properties().group(KingdomKeys.miscGroup), Strings.SM_PowerStone, "C"),
					orichalcumPlus = new SynthesisItem(new Item.Properties().group(KingdomKeys.miscGroup), Strings.SM_OrichalcumPlus, "S"),
					orichalcum = new SynthesisItem(new Item.Properties().group(KingdomKeys.miscGroup), Strings.SM_Orichalcum, "A"),
			 		manifestIllusion = new SynthesisItem(new Item.Properties().group(KingdomKeys.miscGroup), Strings.SM_ManifestIllusion, "S"),
					lostIllusion = new SynthesisItem(new Item.Properties().group(KingdomKeys.miscGroup), Strings.SM_LostIllusion, "A"),
					
					synthesisBag = new ItemSynthesisBag(new Item.Properties().group(KingdomKeys.miscGroup), "synthesis_bag")
            );
        }
        
        @SubscribeEvent
    	public static void registerContainers(RegistryEvent.Register<ContainerType<?>> evt) {
    		IForgeRegistry<ContainerType<?>> r = evt.getRegistry();

    		ContainerType<ContainerSynthesisBag> bag = IForgeContainerType.create(ContainerSynthesisBag::fromNetwork);
    		register(r, bag, synthesisBag.getRegistryName());

    		DistExecutor.runWhenOn(Dist.CLIENT, () -> () -> {
    			ScreenManager.registerFactory(bag, GuiSynthesisBag::new);
    		});
    	}
        

    	public static <V extends IForgeRegistryEntry<V>> void register(IForgeRegistry<V> reg, IForgeRegistryEntry<V> thing, ResourceLocation name) {
    		reg.register(thing.setRegistryName(name));
    	}

    	public static <V extends IForgeRegistryEntry<V>> void register(IForgeRegistry<V> reg, IForgeRegistryEntry<V> thing, String name) {
    		register(reg, thing, new ResourceLocation(KingdomKeys.MODID, name));
    	}

        private static Item createArmorItem(String name, KKArmorMaterial material, EquipmentSlotType slot) {
        	return new BaseArmorItem(name, material, slot);
		}

		//Helper method to create item with the properties and registry name
        public static Item createNewItem(String name, Item.Properties properties) {
            return new Item(properties).setRegistryName(KingdomKeys.MODID, name);
        }

        public static KeybladeItem createKeybladeItem(String name) {
            return new KeybladeItem(name, new Item.Properties().group(KingdomKeys.keybladesGroup).maxStackSize(1));
        }

    }
}
